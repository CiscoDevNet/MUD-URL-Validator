cscope 15 $HOME/work/pcap/dpkt-master/dpkt               0000421542
	@__init__.py

2 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


3 
‰om
 
__futuª__
 
imp‹t
 
divisi⁄


4 
imp‹t
 
sys


6 
	g__auth‹__
 = 'Dug Song'

7 
__auth‹_emaû__
 = 'dugsong@monkey.org'

8 
__li˚n£__
 = 'BSD'

9 
__uæ__
 = 'http://dpkt.googlecode.com/'

10 
__vîsi⁄__
 = '1.9.1'

14 
‰om
 .
dpkt
 
imp‹t
 *

16 
‰om
 . 
imp‹t
 
ah


17 
‰om
 . 
imp‹t
 
a€


18 
‰om
 . 
imp‹t
 
aim


19 
‰om
 . 
imp‹t
 
¨p


20 
‰om
 . 
imp‹t
 
a¢1


21 
‰om
 . 
imp‹t
 
bgp


22 
‰om
 . 
imp‹t
 
cdp


23 
‰om
 . 
imp‹t
 
dh˝


24 
‰om
 . 
imp‹t
 
dümëî


25 
‰om
 . 
imp‹t
 
dns


26 
‰om
 . 
imp‹t
 
dç


27 
‰om
 . 
imp‹t
 
e•


28 
‰om
 . 
imp‹t
 
ëhî√t


29 
‰om
 . 
imp‹t
 
gª


30 
‰om
 . 
imp‹t
 
gzù


31 
‰om
 . 
imp‹t
 
h225


32 
‰om
 . 
imp‹t
 
h§p


33 
‰om
 . 
imp‹t
 
hâp


34 
‰om
 . 
imp‹t
 
hâp2


35 
‰om
 . 
imp‹t
 
icmp


36 
‰om
 . 
imp‹t
 
icmp6


37 
‰om
 . 
imp‹t
 
õì80211


38 
‰om
 . 
imp‹t
 
igmp


39 
‰om
 . 
imp‹t
 
ù


40 
‰om
 . 
imp‹t
 
ù6


41 
‰om
 . 
imp‹t
 
ùx


42 
‰om
 . 
imp‹t
 
Œc


43 
‰om
 . 
imp‹t
 
lo›back


44 
‰om
 . 
imp‹t
 
mπ


45 
‰om
 . 
imp‹t
 
√tbios


46 
‰om
 . 
imp‹t
 
√tÊow


47 
‰om
 . 
imp‹t
 
¡p


48 
‰om
 . 
imp‹t
 
o•f


49 
‰om
 . 
imp‹t
 
pˇp


50 
‰om
 . 
imp‹t
 
pˇ≤g


51 
‰om
 . 
imp‹t
 
pim


52 
‰om
 . 
imp‹t
 
pm≠


53 
‰om
 . 
imp‹t
 
µp


54 
‰om
 . 
imp‹t
 
µp€


55 
‰om
 . 
imp‹t
 
qq


56 
‰om
 . 
imp‹t
 
ødiŸ≠


57 
‰om
 . 
imp‹t
 
ødius


58 
‰om
 . 
imp‹t
 
rfb


59 
‰om
 . 
imp‹t
 
rù


60 
‰om
 . 
imp‹t
 
Ωc


61 
‰om
 . 
imp‹t
 
πp


62 
‰om
 . 
imp‹t
 
rx


63 
‰om
 . 
imp‹t
 
sc˝


64 
‰om
 . 
imp‹t
 
s˘p


65 
‰om
 . 
imp‹t
 
sù


66 
‰om
 . 
imp‹t
 
¶l


67 
‰om
 . 
imp‹t
 
smb


68 
‰om
 . 
imp‹t
 
s¶


69 
‰om
 . 
imp‹t
 
°p


70 
‰om
 . 
imp‹t
 
°un


71 
‰om
 . 
imp‹t
 
t˝


72 
‰om
 . 
imp‹t
 
ã ë


73 
‰om
 . 
imp‹t
 
t·p


74 
‰om
 . 
imp‹t
 
äs


75 
‰om
 . 
imp‹t
 
çkt


76 
‰om
 . 
imp‹t
 
udp


77 
‰om
 . 
imp‹t
 
vºp


78 
‰om
 . 
imp‹t
 
yahoo


80 #NŸe: 
li°
(Ë
is
 
u£d
 
to
 
gë
 
a
 
c›y
 
of
 
the
 
di˘
 
ö
 
‹dî
Åÿ
avoid


81 #"
Ru¡imeEº‹
: 
di˘i⁄¨y
 
ch™ged
 
size
 
durög
 
ôî©i⁄
"

82 #ex˚±i⁄ 
ö
 
Pyth⁄
 3 
ˇu£d
 
by
 
_mod_öô
(Ë
funcs
 
th©
 
lﬂd
 
™Ÿhî
 
moduÀs


83 
«me
, 
mod
 
ö
 
li°
(
sys
.
moduÀs
.
	$ôems
()):

84 
«me
.
	`°¨tswôh
('dpkt.'Ë
™d
 
	`haßâr
(
mod
, '_mod_init'):

85 
mod
.
	`_mod_öô
()

	@ah.py

1 #$Id: 
ah
.
py
 34 2007-01-28 07:54:20
Z
 
dugs⁄g
 
$


2 #-*- 
codög
: 
utf
-8 -*-

5 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


7 
	g‰om
 . 
imp‹t
 
dpkt


10 
˛ass
 
	$AH
(
dpkt
.
Packë
):

13 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

15 
Aâribuãs
:

16 
__hdr__
: 
Hódî
 
fõlds
 
of
 
AH
.

17 
auth
: 
Authítiˇti⁄
 
body
.

18 
d©a
: 
Mesßge
 data.

21 
__hdr__
 = (

23 ('Àn', 'B', 0), #∑ylﬂd 
Àngth


28 
auth
 = 
b
''

30 
def
 
	$u≈ack
(
£lf
, 
buf
):

31 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

32 
£lf
.
auth
 = sñf.
d©a
[:£lf.
Àn
]

33 
buf
 = 
£lf
.
d©a
[£lf.
Àn
:]

34 
‰om
 . 
imp‹t
 
ù


36 
åy
:

37 
£lf
.
d©a
 = 
ù
.
IP
.
	$gë_¥Ÿo
(
£lf
.
nxt
)(
buf
)

38 
	`£èâr
(
£lf
, sñf.
d©a
.
__˛ass__
.
__«me__
.
	`lowî
(), self.data)

39 
	$ex˚±
 (
KeyEº‹
, 
dpkt
.
U≈ackEº‹
):

40 
£lf
.
d©a
 = 
buf


42 
def
 
	$__Àn__
(
£lf
):

43  
£lf
.
__hdr_Àn__
 + 
	`Àn
(£lf.
auth
Ë+ 
	$Àn
(
£lf
.
d©a
)

45 
def
 
	$__byãs__
(
£lf
):

46  
£lf
.
	`∑ck_hdr
(Ë+ 
	`byãs
(£lf.
auth
Ë+ byãs(£lf.
d©a
)

	@aim.py

1 #$Id: 
aim
.
py
 23 2006-11-08 15:45:33
Z
 
dugs⁄g
 
$


2 #-*- 
codög
: 
utf
-8 -*-

5 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


7 
imp‹t
 

9 
	g‰om
 . 
imp‹t
 
	gdpkt


11 #OSCAR: 
hâp
:

14 
˛ass
 
	$FLAP
(
dpkt
.
Packë
):

17 
Sì
 
m‹e
 
about
 
the
 
FLAP
 
⁄
 \

18 
hâps
:

20 
Aâribuãs
:

21 
__hdr__
: 
Hódî
 
fõlds
 
of
 
FLAP
.

22 
d©a
: 
Mesßge
 data.

25 
__hdr__
 = (

32 
def
 
	$u≈ack
(
£lf
, 
buf
):

33 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

34 
£lf
.
a°
 != 0x2a:

35 
øi£
 
dpkt
.
	`U≈ackEº‹
('invalid FLAP header')

36 
	`Àn
(
£lf
.
d©a
Ë< sñf.
Àn
:

37 
øi£
 
dpkt
.
	`NìdD©a
('%dÜe·, %dÇìded' % (
	`Àn
(
£lf
.
d©a
), sñf.
Àn
))

40 
˛ass
 
	$SNAC
(
dpkt
.
Packë
):

43 
Sì
 
m‹e
 
about
 
the
 
SNAC
 
⁄
 \

44 
hâps
:

46 
Aâribuãs
:

47 
__hdr__
: 
Hódî
 
fõlds
 
of
 
SNAC
.

50 
__hdr__
 = (

58 
def
 
	$év
(
buf
):

59 
n
 = 4

60 
åy
:

61 
t
, 
l
 = .
	`u≈ack
('>HH', 
buf
[:
n
])

62 
ex˚±
 .
îr‹
:

63 
øi£
 
dpkt
.
	`U≈ackEº‹
('invalidÅype,Üength fields')

64 
v
 = 
buf
[
n
:¿+ 
l
]

65 
	`Àn
(
v
Ë< 
l
:

66 
øi£
 
dpkt
.
	`NìdD©a
('%dÜe·, %dÇìded' % (
	`Àn
(
v
), 
l
))

67 
buf
 = buf[
n
 + 
l
:]

68  
t
, 
l
, 
v
, 
buf


70 #TOC 1.0: 
hâp
:

72 #TOC 2.0: 
hâp
:

74 
def
 
	$ã°AIM
():

75 
ã°d©a
 = 
b
'*\x02\xac\xf3\x00\x81\x00\x03\x00\x0b\x00\x00\xfaEUd\x0eusrnameremoved\x00\x00\x00\n\x00\x01\x00\x02\x12\x90\x00D\x00\x01\x00\x00\x03\x00\x04X\x90T6\x00E\x00\x04\x00\x00\x0f\x93\x00!\x00\x08\x00\x85\x00}\x00}\x00\x00\x00A\x00\x01\x00\x007\x00\x04\x00\x00\x00\x00\x00\r\x00\x00\x00\x19\x00\x00\x00\x1d\x00$\x00\x00\x00\x05\x02\x01\xd2\x04r\x00\x01\x00\x05\x02\x01\xd2\x04r\x00\x03\x00\x05+\x00\x00*\xcc\x00\x81\x00\x05+\x00\x00\x13\xf1'

77 
Ê≠
 = 
	$FLAP
(
ã°d©a
)

78 
as£π
 
Ê≠
.
a°
 == 0x2a

79 
as£π
 
Ê≠
.
ty≥
 == 0x02

80 
as£π
 
Ê≠
.
£q
 == 44275

81 
as£π
 
Ê≠
.
Àn
 == 129

82 
as£π
 
Ê≠
.
d©a
 =
b
'\x00\x03\x00\x0b\x00\x00\xfaEUd\x0eusrnameremoved\x00\x00\x00\n\x00\x01\x00\x02\x12\x90\x00D\x00\x01\x00\x00\x03\x00\x04X\x90T6\x00E\x00\x04\x00\x00\x0f\x93\x00!\x00\x08\x00\x85\x00}\x00}\x00\x00\x00A\x00\x01\x00\x007\x00\x04\x00\x00\x00\x00\x00\r\x00\x00\x00\x19\x00\x00\x00\x1d\x00$\x00\x00\x00\x05\x02\x01\xd2\x04r\x00\x01\x00\x05\x02\x01\xd2\x04r\x00\x03\x00\x05+\x00\x00*\xcc\x00\x81\x00\x05+\x00\x00\x13\xf1'

84 
¢ac
 = 
	$SNAC
(
Ê≠
.
d©a
)

85 
as£π
 
¢ac
.
Ámûy
 == 3

86 
as£π
 
¢ac
.
subty≥
 == 11

87 
as£π
 
¢ac
.
Êags
 == 0

88 
as£π
 
¢ac
.
ªqid
 == 0xfa455564

89 
as£π
 
¢ac
.
d©a
 =
b
'\x0eusrnameremoved\x00\x00\x00\n\x00\x01\x00\x02\x12\x90\x00D\x00\x01\x00\x00\x03\x00\x04X\x90T6\x00E\x00\x04\x00\x00\x0f\x93\x00!\x00\x08\x00\x85\x00}\x00}\x00\x00\x00A\x00\x01\x00\x007\x00\x04\x00\x00\x00\x00\x00\r\x00\x00\x00\x19\x00\x00\x00\x1d\x00$\x00\x00\x00\x05\x02\x01\xd2\x04r\x00\x01\x00\x05\x02\x01\xd2\x04r\x00\x03\x00\x05+\x00\x00*\xcc\x00\x81\x00\x05+\x00\x00\x13\xf1'

91 #skù 
ovî
 
the
 
buddy«me
 
™d
 
TLV
 
cou¡
 
ö
 
Oncomög
 
Buddy
 
mesßge


92 
évd©a
 = 
¢ac
.
d©a
[19:]

94 
évCou¡
 = 0

95 
évd©a
:

96 
t
, 
l
, 
v
, 
évd©a
 = 
	$év
(
évd©a
)

97 
évCou¡
 += 1

98 
évCou¡
 == 1:

99 #ju° 
check
 
fun˘i⁄
  
fú°
 
TLV


100 
as£π
 
t
 == 0x01

101 
as£π
 
l
 == 2

102 
as£π
 
v
 =
b
'\x12\x90'

103 
as£π
 
évd©a
 =
b
'\x00D\x00\x01\x00\x00\x03\x00\x04X\x90T6\x00E\x00\x04\x00\x00\x0f\x93\x00!\x00\x08\x00\x85\x00}\x00}\x00\x00\x00A\x00\x01\x00\x007\x00\x04\x00\x00\x00\x00\x00\r\x00\x00\x00\x19\x00\x00\x00\x1d\x00$\x00\x00\x00\x05\x02\x01\xd2\x04r\x00\x01\x00\x05\x02\x01\xd2\x04r\x00\x03\x00\x05+\x00\x00*\xcc\x00\x81\x00\x05+\x00\x00\x13\xf1'

105 #makê
suª
 
we
 
exåa˘ed
 10 
TLVs


106 
as£π
 
évCou¡
 == 10

109 
def
 
	$ã°Ex˚±i⁄s
():

110 
ã°d©a
 = 
b
'xxxxxx'

111 
åy
:

112 
Ê≠
 = 
	$FLAP
(
ã°d©a
)

113 
ex˚±
 
dpkt
.
U≈ackEº‹
 
as
 
e
:

114 
as£π
 
	`°r
(
e
) == 'invalid FLAP header'

115 
ã°d©a
 = 
b
'*\x02\x12\x34\x00\xff'

116 
åy
:

117 
Ê≠
 = 
	$FLAP
(
ã°d©a
)

118 
ex˚±
 
dpkt
.
NìdD©a
 
as
 
e
:

119 
as£π
 
	`°r
(
e
) == '0Üeft, 255Çeeded'

120 
åy
:

121 
t
, 
l
, 
v
, 
_
 = 
	`év
(
b
'x')

122 
ex˚±
 
dpkt
.
U≈ackEº‹
 
as
 
e
:

123 
as£π
 
	`°r
(
e
) == 'invalidÅype,Üength fields'

125 
åy
:

126 
t
, 
l
, 
v
, 
_
 = 
	`év
(
b
'\x00\x01\x00\xff')

127 
ex˚±
 
dpkt
.
NìdD©a
 
as
 
e
:

128 
as£π
 
	`°r
(
e
) == '0Üeft, 255Çeeded'

	@aoe.py

1 #-*- 
codög
: 
utf
-8 -*-

3 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


5 
imp‹t
 

7 
	g‰om
 . 
imp‹t
 
dpkt


8 
	g‰om
 .
dec‹©‹s
 
imp‹t
 
dïªˇãd


9 
	g‰om
 .
com∑t
 
imp‹t
 
ôîôems


11 
˛ass
 
	$AOE
(
dpkt
.
Packë
):

14 
Sì
 
m‹e
 
about
 
the
 
AOE
 
⁄
 \

15 
hâps
:

17 
Aâribuãs
:

18 
__hdr__
: 
Hódî
 
fõlds
 
of
 
AOE
.

19 
d©a
: 
Mesßge
 data.

22 
__hdr__
 = (

30 
_cmdsw
 = {
	}
}

32 @
¥›îty


33 
def
 
	$vî
(
£lf
):  sñf.
vî_Ê
 >> 4

35 @
vî
.
£âî


36 
def
 
	$vî
(
£lf
, 
vî
): sñf.
vî_Ê
 = (ver << 4) | (self.ver_fl & 0xf)

38 @
¥›îty


39 
def
 
	$Ê
(
£lf
):  sñf.
vî_Ê
 & 0xf

41 @
Ê
.
£âî


42 
def
 
	$Ê
(
£lf
, 
Ê
): sñf.
vî_Ê
 = (self.ver_fl & 0xf0) | fl

44 @
˛assmëhod


45 
def
 
	$£t_cmd
(
˛s
, 
cmd
, 
pkt˛ass
):

46 
˛s
.
_cmdsw
[
cmd
] = 
pkt˛ass


48 @
˛assmëhod


49 
def
 
	$gë_cmd
(
˛s
, 
cmd
):

50  
˛s
.
_cmdsw
[
cmd
]

52 
def
 
	$u≈ack
(
£lf
, 
buf
):

53 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

54 
åy
:

55 
£lf
.
d©a
 = sñf.
_cmdsw
[£lf.
cmd
](self.data)

56 
	`£èâr
(
£lf
, sñf.
d©a
.
__˛ass__
.
__«me__
.
	`lowî
(), self.data)

57 
	$ex˚±
 (
KeyEº‹
, .
îr‹
, 
dpkt
.
U≈ackEº‹
):

58 
∑ss


60 
def
 
	$∑ck_hdr
(
£lf
):

61 
åy
:

62  
dpkt
.
Packë
.
	$∑ck_hdr
(
£lf
)

63 
ex˚±
 .
îr‹
 
as
 
e
:

64 
øi£
 
dpkt
.
	`PackEº‹
(
	$°r
(
e
))

67 
AOE_CMD_ATA
 = 0

68 
AOE_CMD_CFG
 = 1

69 
AOE_FLAG_RSP
 = 1 << 3

72 
def
 
	$__lﬂd_cmds
():

73 
¥efix
 = 'AOE_CMD_'

74 
g
 = 
	$globÆs
()

76 
k
, 
v
 
ö
 
	$ôîôems
(
g
):

77 
k
.
	$°¨tswôh
(
¥efix
):

78 
«me
 = 'a€' + 
k
[
	$Àn
(
¥efix
):].
	$lowî
()

79 
åy
:

80 
mod
 = 
	$__imp‹t__
(
«me
, 
g
, 
Àvñ
=1)

81 
AOE
.
	`£t_cmd
(
v
, 
	`gë©å
(
mod
, 
«me
.
	$uµî
()))

82 
	$ex˚±
 (
Imp‹tEº‹
, 
AâribuãEº‹
):

86 
def
 
	$_mod_öô
():

88 
nŸ
 
AOE
.
_cmdsw
:

89 
	`__lﬂd_cmds
()

	@aoeata.py

1 #-*- 
codög
: 
utf
-8 -*-

3 
‰om
 
__futuª__
 
imp‹t
 
¥öt_fun˘i⁄


4 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


6 
	g‰om
 . 
imp‹t
 
dpkt


8 
	gATA_DEVICE_IDENTIFY
 = 0xec

11 
˛ass
 
	$AOEATA
(
dpkt
.
Packë
):

14 
Sì
 
m‹e
 
about
 
the
 
AOEATA
 
⁄
 \

15 
hâps
:

17 
Aâribuãs
:

18 
__hdr__
: 
Hódî
 
fõlds
 
of
 
AOEATA
.

19 
d©a
: 
Mesßge
 data.

22 
__hdr__
 = (

26 ('cmd°©', 'B', 
ATA_DEVICE_IDENTIFY
),

36 #XXX: 
ö
 
u≈ack
, 
⁄
 
ATA
 
comm™d
 
like
 
icmp
 
d€s
 o¿
ty≥


39 
def
 
	$ã°_a€©a
():

40 
s
 = 
b
'\x03\x0a\x6b\x19\x00\x00\x00\x00\x45\x00\x00\x28\x94\x1f\x00\x00\xe3\x06\x99\xb4\x23\x2b\x24\x00\xde\x8e\x84\x42\xab\xd1\x00\x50\x00\x35\xe1\x29\x20\xd9\x00\x00\x00\x22\x9b\xf0\xe2\x04\x65\x6b'

41 
a€©a
 = 
	$AOEATA
(
s
)

42 
	`as£π
 (
	`byãs
(
a€©a
Ë=
s
)

45 
__«me__
 == '__main__':

46 
	$ã°_a€©a
()

47 
	`¥öt
('Tests Successful...')

	@aoecfg.py

1 #-*- 
codög
: 
utf
-8 -*-

3 
‰om
 
__futuª__
 
imp‹t
 
¥öt_fun˘i⁄


4 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


6 
	g‰om
 . 
imp‹t
 
dpkt


9 
˛ass
 
	$AOECFG
(
dpkt
.
Packë
):

12 
Sì
 
m‹e
 
about
 
the
 
AOE
 
⁄
 \

13 
hâps
:

15 
Aâribuãs
:

16 
__hdr__
: 
Hódî
 
fõlds
 
of
 
AOECFG
.

17 
d©a
: 
Mesßge
 data.

20 
__hdr__
 = (

29 
def
 
	$ã°_a€cfg
():

30 
s
 = 
b
'\x01\x02\x03\x04\x05\x06\x11\x12\x13\x14\x15\x16\x88\xa2\x10\x00\x00\x01\x02\x01\x80\x00\x00\x00\x12\x34\x00\x00\x00\x00\x04\x00' + b'\0xed' * 1024

31 
a€cfg
 = 
	`AOECFG
(
s
[14 + 10:])

32 
	$as£π
 (
a€cfg
.
buf˙t
 == 0x1234)

35 
__«me__
 == '__main__':

36 
	$ã°_a€cfg
()

37 
	`¥öt
('Tests Successful...')

	@arp.py

1 #$Id: 
¨p
.
py
 23 2006-11-08 15:45:33
Z
 
dugs⁄g
 
$


2 #-*- 
codög
: 
utf
-8 -*-

4 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


6 
	g‰om
 . 
imp‹t
 
	gdpkt


8 #H¨dw¨ê
addªss
 
f‹m©


9 
	gARP_HRD_ETH
 = 0x0001 #ëhî√à
h¨dw¨e


10 
ARP_HRD_IEEE802
 = 0x0006 #IEEE 802 
h¨dw¨e


12 #PrŸocﬁ 
addªss
 
f‹m©


13 
ARP_PRO_IP
 = 0x0800 #IP 
¥Ÿocﬁ


15 #ARP 
›î©i⁄


16 
ARP_OP_REQUEST
 = 1 #ªque° 
to
 
ªsﬁve
 
ha
 
giví
 
∑


17 
ARP_OP_REPLY
 = 2 #ª•⁄£ 
givög
 
h¨dw¨e
 
addªss


18 
ARP_OP_REVREQUEST
 = 3 #ªque° 
to
 
ªsﬁve
 
∑
 
giví
 
ha


19 
ARP_OP_REVREPLY
 = 4 #ª•⁄£ 
givög
 
¥Ÿocﬁ
 
addªss


22 
˛ass
 
	$ARP
(
dpkt
.
Packë
):

25 
Sì
 
m‹e
 
about
 
the
 
ARP
 
⁄
 \

26 
hâps
:

28 
Aâribuãs
:

29 
__hdr__
: 
Hódî
 
fõlds
 
of
 
ARP
.

32 
__hdr__
 = (

33 ('hrd', 'H', 
ARP_HRD_ETH
),

34 ('¥o', 'H', 
ARP_PRO_IP
),

35 ('h ', 'B', 6), #h¨dw¨ê
addªss
 
Àngth


36 ('∂n', 'B', 4), #¥Ÿocﬁ 
addªss
 
Àngth


37 ('›', 'H', 
ARP_OP_REQUEST
),

	@asn1.py

1 #$Id: 
a¢1
.
py
 23 2006-11-08 15:45:33
Z
 
dugs⁄g
 
$


2 #-*- 
codög
: 
utf
-8 -*-

4 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


5 
‰om
 
__futuª__
 
imp‹t
 
¥öt_fun˘i⁄


7 
imp‹t
 

8 
imp‹t
 
time


10 
	g‰om
 . 
imp‹t
 
dpkt


11 
	g‰om
 .
com∑t
 
imp‹t
 
	gcom∑t_‹d


13 #Ty≥ 
˛ass


14 
	gCLASSMASK
 = 0xc0

15 
UNIVERSAL
 = 0x00

16 
APPLICATION
 = 0x40

17 
CONTEXT
 = 0x80

18 
PRIVATE
 = 0xc0

20 #C⁄°ru˘ed (
vs
. 
¥imôive
)

21 
CONSTRUCTED
 = 0x20

23 #Univîßl-
˛ass
 
ègs


24 
TAGMASK
 = 0x1f

25 
INTEGER
 = 2

26 
BIT_STRING
 = 3 #¨bôøry 
bô
 
°rög


27 
OCTET_STRING
 = 4 #¨bôøry 
o˘ë
 
°rög


28 
NULL
 = 5

29 
OID
 = 6 #obje˘ 
idítifõr


30 
SEQUENCE
 = 16 #‹dîed 
cﬁÀ˘i⁄
 
of
 
ty≥s


31 
SET
 = 17 #un‹dîed 
cﬁÀ˘i⁄
 
of
 
ty≥s


32 
PRINT_STRING
 = 19 #¥öèbÀ 
°rög


33 
T61_STRING
 = 20 #T.61 (8-
bô
Ë
ch¨a˘î
 
°rög


34 
IA5_STRING
 = 22 #ASCII

35 
UTC_TIME
 = 23

38 
def
 
	$ut˘ime
(
buf
):

41 
TODO
: 
L⁄g
 
des¸ùti⁄
 
hîe
.

43 
Args
:

44 
buf
: 
A
 
buf„r
 
wôh
 
f‹m©
 "yymnddhhmm"

46 
Rëu∫s
:

47 
A
 
Êﬂtög
 
poöt
 
numbî
, 
ödiˇãs
 
£c⁄ds
 
sö˚
 
the
 
Epoch
.

50 
yy
 = (
buf
[:2])

51 
mn
 = (
buf
[2:4])

52 
dd
 = (
buf
[4:6])

53 
hh
 = (
buf
[6:8])

54 
mm
 = (
buf
[8:10])

55 
åy
:

56 
ss
 = (
buf
[10:12])

57 
buf
 = buf[12:]

58 
ex˚±
 
Ty≥Eº‹
:

59 
ss
 = 0

60 
buf
 = buf[10:]

61 
buf
[0] == '+':

62 
hh
 -(
buf
[1:3])

63 
mm
 -(
buf
[3:5])

64 
ñif
 
buf
[0] == '-':

65 
hh
 +(
buf
[1:3])

66 
mm
 +(
buf
[3:5])

67  
time
.
	`mktime
((2000 + 
yy
, 
mn
, 
dd
, 
hh
, 
mm
, 
ss
, 0, 0, 0))

70 
def
 
	$decode
(
buf
):

73 
TODO
: 
L⁄g
 
des¸ùti⁄
 
hîe
.

75 
Args
:

76 
buf
: 
A
 
buf„r
 
wôh
 
SÀazy
 
ASN
.1 
d©a
.

78 
Rëu∫s
:

79 
A
 
li°
 
	$of
 (
id
, 
vÆue
Ë
tu∂es
 
‰om
 
ASN
.1 
BER
/
DER
 
ícoded
 
buf„r
.

81 
Rai£s
:

82 
U≈ackEº‹
: 
An
 
îr‹
 
occuºed
 
the
 
ASN
.1 
Àngth
 
ex˚ed
.

85 
msg
 = []

86 
buf
:

87 
t
 = 
	$com∑t_‹d
(
buf
[0])

88 
c⁄°ru˘ed
 = 
t
 & 
CONSTRUCTED


89 
èg
 = 
t
 & 
TAGMASK


90 
l
 = 
	$com∑t_‹d
(
buf
[1])

91 
c
 = 0

92 
c⁄°ru˘ed
 
™d
 
l
 == 128:

93 #XXX - 
c⁄°ru˘ed
, 
ödeföôe
 
Àngth


94 
msg
.
	`≠≥nd
((
t
, 
	$decode
(
buf
[2:])))

95 
ñif
 
l
 >= 128:

96 
c
 = 
l
 & 127

97 
c
 == 1:

98 
l
 = 
	$com∑t_‹d
(
buf
[2])

99 
ñif
 
c
 == 2:

100 
l
 = .
	`u≈ack
('>H', 
buf
[2:4])[0]

101 
ñif
 
c
 == 3:

102 
l
 = .
	`u≈ack
('>I', 
buf
[1:5])[0] & 0xfff

103 
c
 = 2

104 
ñif
 
c
 == 4:

105 
l
 = .
	`u≈ack
('>I', 
buf
[2:6])[0]

107 #XXX - 
ˇn
 
be
 
up
 
to
 127 
byãs
, 
but
...

108 
øi£
 
dpkt
.
	`U≈ackEº‹
('ex˚ssivêl⁄g-f‹m ASN.1Üígth %d' % 
l
)

110 #Skù 
ty≥
, 
Àngth


111 
buf
 = buf[2 + 
c
:]

113 #P¨£ 
c⁄ã¡


114 
c⁄°ru˘ed
:

115 
msg
.
	`≠≥nd
((
t
, 
	$decode
(
buf
)))

116 
ñif
 
èg
 =
INTEGER
:

117 
l
 == 0:

118 
n
 = 0

119 
ñif
 
l
 == 1:

120 
n
 = 
	$com∑t_‹d
(
buf
[0])

121 
ñif
 
l
 == 2:

122 
n
 = .
	`u≈ack
('>H', 
buf
[:2])[0]

123 
ñif
 
l
 == 3:

124 
n
 = .
	`u≈ack
('>I', 
buf
[:4])[0] >> 8

125 
ñif
 
l
 == 4:

126 
n
 = .
	`u≈ack
('>I', 
buf
[:4])[0]

128 
øi£
 
dpkt
.
	`U≈ackEº‹
('ex˚ssivêöãgîÜígth > %d byãs' % 
l
)

129 
msg
.
	`≠≥nd
((
t
, 
n
))

130 
ñif
 
èg
 =
UTC_TIME
:

131 
msg
.
	`≠≥nd
((
t
, 
	$ut˘ime
(
buf
[:
l
])))

133 
msg
.
	`≠≥nd
((
t
, 
buf
[:
l
]))

135 #Skù 
c⁄ã¡


136 
buf
 = buf[
l
:]

137  
msg


140 
def
 
	$ã°_a¢1
():

141 
s
 = 
b
'0\x82\x02Q\x02\x01\x0bc\x82\x02J\x04xcn=Douglas J Song 1, ou=Information Technology Division, ou=Facultyánd Staff, ou=People, o=University of Michigan, c=US\n\x01\x00\n\x01\x03\x02\x01\x00\x02\x01\x00\x01\x01\x00\x87\x0bobjectclass0\x82\x01\xb0\x04\rmemberOfGroup\x04\x03acl\x04\x02cn\x04\x05title\x04\rpostalAddress\x04\x0ftelephoneNumber\x04\x04mail\x04\x06member\x04\thomePhone\x04\x11homePostalAddress\x04\x0bobjectClass\x04\x0bdescription\x04\x18facsimileTelephoneNumber\x04\x05pager\x04\x03uid\x04\x0cuserPassword\x04\x08joinable\x04\x10associatedDomain\x04\x05owner\x04\x0erfc822ErrorsTo\x04\x08ErrorsTo\x04\x10rfc822RequestsTo\x04\nRequestsTo\x04\tmoderator\x04\nlabeledURL\x04\nonVacation\x04\x0fvacationMessage\x04\x05drink\x04\x0elastModifiedBy\x04\x10lastModifiedTime\x04\rmodifiersname\x04\x0fmodifytimestamp\x04\x0ccreatorsname\x04\x0fcreatetimestamp'

142 
	`as£π
 (
	`decode
(
s
Ë=[(48, [(2, 11), (99, [(4, 
b
'cn=Douglas J Song 1, ou=Information Technology Division, ou=Facultyánd Staff, ou=People, o=University of Michigan, c=US'), (10, b'\x00'), (10, b'\x03'), (2, 0), (2, 0), (1, b'\x00'), (135, b'objectclass'), (48, [(4, b'memberOfGroup'), (4, b'acl'), (4, b'cn'), (4, b'title'), (4, b'postalAddress'), (4, b'telephoneNumber'), (4, b'mail'), (4, b'member'), (4, b'homePhone'), (4, b'homePostalAddress'), (4, b'objectClass'), (4, b'description'), (4, b'facsimileTelephoneNumber'), (4, b'pager'), (4, b'uid'), (4, b'userPassword'), (4, b'joinable'), (4, b'associatedDomain'), (4, b'owner'), (4, b'rfc822ErrorsTo'), (4, b'ErrorsTo'), (4, b'rfc822RequestsTo'), (4, b'RequestsTo'), (4, b'moderator'), (4, b'labeledURL'), (4, b'onVacation'), (4, b'vacationMessage'), (4, b'drink'), (4, b'lastModifiedBy'), (4, b'lastModifiedTime'), (4, b'modifiersname'), (4, b'modifytimestamp'), (4, b'creatorsname'), (4, b'createtimestamp')])])])])

144 
__«me__
 == '__main__':

145 
	$ã°_a¢1
()

146 
	`¥öt
('Tests Successful...')

	@bgp.py

1 #$Id: 
bgp
.
py
 76 2011-01-06 15:51:30
Z
 
dugs⁄g
 
$


2 #-*- 
codög
: 
utf
-8 -*-

4 
‰om
 
__futuª__
 
imp‹t
 
¥öt_fun˘i⁄


5 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


7 
imp‹t
 

8 
imp‹t
 
sockë


10 
	g‰om
 . 
imp‹t
 
dpkt


11 
	g‰om
 .
dec‹©‹s
 
imp‹t
 
	gdïªˇãd


14 #B‹dî 
G©eway
 
PrŸocﬁ
 4 - 
RFC
 4271

15 #Communôõ†
Aâribuã
 - 
RFC
 1997

16 #C≠abûôõ†- 
RFC
 3392

17 #Rouã 
Re‰esh
 - 
RFC
 2918

18 #Rouã 
ReÊe˘i⁄
 - 
RFC
 4456

19 #C⁄„dî©i⁄†- 
RFC
 3065

20 #Có£ 
Subcodes
 - 
RFC
 4486

21 #NOPEER 
Communôy
 - 
RFC
 3765

22 #Mu…ùrŸocﬁ 
Exãnsi⁄s
 - 2858

24 #Mesßgê
Ty≥s


25 
	gOPEN
 = 1

26 
UPDATE
 = 2

27 
NOTIFICATION
 = 3

28 
KEEPALIVE
 = 4

29 
ROUTE_REFRESH
 = 5

31 #Aâribuã 
Ty≥s


32 
ORIGIN
 = 1

33 
AS_PATH
 = 2

34 
NEXT_HOP
 = 3

35 
MULTI_EXIT_DISC
 = 4

36 
LOCAL_PREF
 = 5

37 
ATOMIC_AGGREGATE
 = 6

38 
AGGREGATOR
 = 7

39 
COMMUNITIES
 = 8

40 
ORIGINATOR_ID
 = 9

41 
CLUSTER_LIST
 = 10

42 
MP_REACH_NLRI
 = 14

43 
MP_UNREACH_NLRI
 = 15

45 #Origö 
Ty≥s


46 
ORIGIN_IGP
 = 0

47 
ORIGIN_EGP
 = 1

48 
INCOMPLETE
 = 2

50 #AS 
P©h
 
Ty≥s


51 
AS_SET
 = 1

52 
AS_SEQUENCE
 = 2

53 
AS_CONFED_SEQUENCE
 = 3

54 
AS_CONFED_SET
 = 4

56 #Re£rved 
Communôõs
 
Ty≥s


57 
NO_EXPORT
 = 0xffffff01

58 
NO_ADVERTISE
 = 0xffffff02

59 
NO_EXPORT_SUBCONFED
 = 0xffffff03

60 
NO_PEER
 = 0xffffff04

62 #Comm⁄ 
AFI
 
ty≥s


63 
AFI_IPV4
 = 1

64 
AFI_IPV6
 = 2

66 #Mu…ùrŸocﬁ 
SAFI
 
ty≥s


67 
SAFI_UNICAST
 = 1

68 
SAFI_MULTICAST
 = 2

69 
SAFI_UNICAST_MULTICAST
 = 3

71 #OPEN 
Mesßge
 
O±i⁄Æ
 
P¨amëîs


72 
AUTHENTICATION
 = 1

73 
CAPABILITY
 = 2

75 #C≠abûôy 
Ty≥s


76 
CAP_MULTIPROTOCOL
 = 1

77 
CAP_ROUTE_REFRESH
 = 2

79 #NOTIFICATION 
Eº‹
 
Codes


80 
MESSAGE_HEADER_ERROR
 = 1

81 
OPEN_MESSAGE_ERROR
 = 2

82 
UPDATE_MESSAGE_ERROR
 = 3

83 
HOLD_TIMER_EXPIRED
 = 4

84 
FSM_ERROR
 = 5

85 
CEASE
 = 6

87 #Mesßgê
Hódî
 
Eº‹
 
Subcodes


88 
CONNECTION_NOT_SYNCHRONIZED
 = 1

89 
BAD_MESSAGE_LENGTH
 = 2

90 
BAD_MESSAGE_TYPE
 = 3

92 #OPEN 
Mesßge
 
Eº‹
 
Subcodes


93 
UNSUPPORTED_VERSION_NUMBER
 = 1

94 
BAD_PEER_AS
 = 2

95 
BAD_BGP_IDENTIFIER
 = 3

96 
UNSUPPORTED_OPTIONAL_PARAMETER
 = 4

97 
AUTHENTICATION_FAILURE
 = 5

98 
UNACCEPTABLE_HOLD_TIME
 = 6

99 
UNSUPPORTED_CAPABILITY
 = 7

101 #UPDATE 
Mesßge
 
Eº‹
 
Subcodes


102 
MALFORMED_ATTRIBUTE_LIST
 = 1

103 
UNRECOGNIZED_ATTRIBUTE
 = 2

104 
MISSING_ATTRIBUTE
 = 3

105 
ATTRIBUTE_FLAGS_ERROR
 = 4

106 
ATTRIBUTE_LENGTH_ERROR
 = 5

107 
INVALID_ORIGIN_ATTRIBUTE
 = 6

108 
AS_ROUTING_LOOP
 = 7

109 
INVALID_NEXT_HOP_ATTRIBUTE
 = 8

110 
OPTIONAL_ATTRIBUTE_ERROR
 = 9

111 
INVALID_NETWORK_FIELD
 = 10

112 
MALFORMED_AS_PATH
 = 11

114 #Có£ 
Eº‹
 
Subcodes


115 
MAX_NUMBER_OF_PREFIXES_REACHED
 = 1

116 
ADMINISTRATIVE_SHUTDOWN
 = 2

117 
PEER_DECONFIGURED
 = 3

118 
ADMINISTRATIVE_RESET
 = 4

119 
CONNECTION_REJECTED
 = 5

120 
OTHER_CONFIGURATION_CHANGE
 = 6

121 
CONNECTION_COLLISION_RESOLUTION
 = 7

122 
OUT_OF_RESOURCES
 = 8

125 
˛ass
 
	$BGP
(
dpkt
.
Packë
):

128 
BGP
 
is
 
™
 
öãr
-
AS
 
routög
 
¥Ÿocﬁ
.

129 
Sì
 
m‹e
 
about
 
the
 
BGP
 
⁄
 \

130 
hâps
:

132 
Aâribuãs
:

133 
__hdr__
: 
Hódî
 
fõlds
 
of
 
BGP
.

137 
__hdr__
 = (

140 ('ty≥', 'B', 
OPEN
)

143 
def
 
	$u≈ack
(
£lf
, 
buf
):

144 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

145 
£lf
.
d©a
 = sñf.d©a[:£lf.
Àn
 - sñf.
__hdr_Àn__
]

146 
£lf
.
ty≥
 =
OPEN
:

147 
£lf
.
d©a
 = sñf.
›í
 = sñf.
	$O≥n
(
£lf
.
d©a
)

148 
ñif
 
£lf
.
ty≥
 =
UPDATE
:

149 
£lf
.
d©a
 = sñf.
upd©e
 = sñf.
	$Upd©e
(
£lf
.
d©a
)

150 
ñif
 
£lf
.
ty≥
 =
NOTIFICATION
:

151 
£lf
.
d©a
 = sñf.
nŸifüti⁄
 = sñf.
	$NŸifiˇti⁄
(
£lf
.
d©a
)

152 
ñif
 
£lf
.
ty≥
 =
KEEPALIVE
:

153 
£lf
.
d©a
 = sñf.
kì∑live
 = sñf.
	$Kì∑live
(
£lf
.
d©a
)

154 
ñif
 
£lf
.
ty≥
 =
ROUTE_REFRESH
:

155 
£lf
.
d©a
 = sñf.
rouã_ª‰esh
 = sñf.
	$RouãRe‰esh
(
£lf
.
d©a
)

157 
˛ass
 
	$O≥n
(
dpkt
.
Packë
):

158 
__hdr__
 = (

165 
__hdr_deÁu…s__
 = {

167 
	}
}

169 
def
 
	$u≈ack
(
£lf
, 
buf
):

170 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

171 
l
 = []

172 
∂í
 = 
£lf
.
∑øm_Àn


173 
∂í
 > 0:

174 
∑øm
 = 
£lf
.
	$P¨amëî
(
£lf
.
d©a
)

175 
£lf
.
d©a
 = sñf.d©a[
	$Àn
(
∑øm
):]

176 
∂í
 -
	$Àn
(
∑øm
)

177 
l
.
	$≠≥nd
(
∑øm
)

178 
£lf
.
d©a
 = sñf.
∑ømëîs
 = 
l


180 
def
 
	$__Àn__
(
£lf
):

181  
£lf
.
__hdr_Àn__
 + 
	`sum
(
	$m≠
(
Àn
, 
£lf
.
∑ømëîs
))

183 
def
 
	$__byãs__
(
£lf
):

184 
∑øms
 = 
b
''.
	`joö
(
	$m≠
(
byãs
, 
£lf
.
∑ømëîs
))

185 
£lf
.
∑øm_Àn
 = 
	$Àn
(
∑øms
)

186  
£lf
.
	`∑ck_hdr
(Ë+ 
∑øms


188 
˛ass
 
	$P¨amëî
(
dpkt
.
Packë
):

189 
__hdr__
 = (

194 
def
 
	$u≈ack
(
£lf
, 
buf
):

195 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

196 
£lf
.
d©a
 = sñf.d©a[:£lf.
Àn
]

198 
£lf
.
ty≥
 =
AUTHENTICATION
:

199 
£lf
.
d©a
 = sñf.
authítiˇti⁄
 = sñf.
	$Authítiˇti⁄
(
£lf
.
d©a
)

200 
ñif
 
£lf
.
ty≥
 =
CAPABILITY
:

201 
£lf
.
d©a
 = sñf.
ˇ∑bûôy
 = sñf.
	$C≠abûôy
(
£lf
.
d©a
)

203 
˛ass
 
	$Authítiˇti⁄
(
dpkt
.
Packë
):

204 
__hdr__
 = (

208 
˛ass
 
	$C≠abûôy
(
dpkt
.
Packë
):

209 
__hdr__
 = (

214 
def
 
	$u≈ack
(
£lf
, 
buf
):

215 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

216 
£lf
.
d©a
 = sñf.d©a[:£lf.
Àn
]

218 
˛ass
 
	$Upd©e
(
dpkt
.
Packë
):

219 
__hdr_deÁu…s__
 = {

223 
	}
}

225 
def
 
	$u≈ack
(
£lf
, 
buf
):

226 
£lf
.
d©a
 = 
buf


228 #Wôhdøw¿
Rouãs


229 
wÀn
 = .
	`u≈ack
('>H', 
£lf
.
d©a
[:2])[0]

230 
£lf
.
d©a
 = self.data[2:]

231 
l
 = []

232 
wÀn
 > 0:

233 
rouã
 = 
	$RouãIPV4
(
£lf
.
d©a
)

234 
£lf
.
d©a
 = sñf.d©a[
	$Àn
(
rouã
):]

235 
wÀn
 -
	$Àn
(
rouã
)

236 
l
.
	$≠≥nd
(
rouã
)

237 
£lf
.
wôhdøwn
 = 
l


239 #P©h 
Aâribuãs


240 
∂í
 = .
	`u≈ack
('>H', 
£lf
.
d©a
[:2])[0]

241 
£lf
.
d©a
 = self.data[2:]

242 
l
 = []

243 
∂í
 > 0:

244 
©å
 = 
£lf
.
	$Aâribuã
(
£lf
.
d©a
)

245 
£lf
.
d©a
 = sñf.d©a[
	$Àn
(
©å
):]

246 
∂í
 -
	$Àn
(
©å
)

247 
l
.
	$≠≥nd
(
©å
)

248 
£lf
.
©åibuãs
 = 
l


250 #A¬oun˚d 
Rouãs


251 
l
 = []

252 
£lf
.
d©a
:

253 
rouã
 = 
	$RouãIPV4
(
£lf
.
d©a
)

254 
£lf
.
d©a
 = sñf.d©a[
	$Àn
(
rouã
):]

255 
l
.
	$≠≥nd
(
rouã
)

256 
£lf
.
™noun˚d
 = 
l


258 
def
 
	$__Àn__
(
£lf
):

259  2 + 
	`sum
(
	`m≠
(
Àn
, 
£lf
.
wôhdøwn
)) + \

260 2 + 
	`sum
(
	`m≠
(
Àn
, 
£lf
.
©åibuãs
)) + \

261 
	`sum
(
	$m≠
(
Àn
, 
£lf
.
™noun˚d
))

263 
def
 
	$__byãs__
(
£lf
):

264  .
	`∑ck
('>H', 
	`sum
(
	`m≠
(
Àn
, 
£lf
.
wôhdøwn
))) + \

265 
b
''.
	`joö
(
	`m≠
(
byãs
, 
£lf
.
wôhdøwn
)) + \

266 .
	`∑ck
('>H', 
	`sum
(
	`m≠
(
Àn
, 
£lf
.
©åibuãs
))) + \

267 
b
''.
	`joö
(
	`m≠
(
byãs
, 
£lf
.
©åibuãs
)) + \

268 
b
''.
	`joö
(
	$m≠
(
byãs
, 
£lf
.
™noun˚d
))

270 
˛ass
 
	$Aâribuã
(
dpkt
.
Packë
):

271 
__hdr__
 = (

276 @
¥›îty


277 
def
 
	$›ti⁄Æ
(
£lf
):

278  (
£lf
.
Êags
 >> 7) & 0x1

280 @
›ti⁄Æ
.
£âî


281 
def
 
	$›ti⁄Æ
(
£lf
, 
o
):

282 
£lf
.
Êags
 = (£lf.Êag†& ~0x80Ë| ((
o
 & 0x1) << 7)

284 @
¥›îty


285 
def
 
	$å™sôive
(
£lf
):

286  (
£lf
.
Êags
 >> 6) & 0x1

288 @
å™sôive
.
£âî


289 
def
 
	$å™sôive
(
£lf
, 
t
):

290 
£lf
.
Êags
 = (£lf.Êag†& ~0x40Ë| ((
t
 & 0x1) << 6)

292 @
¥›îty


293 
def
 
	$∑πül
(
£lf
):

294  (
£lf
.
Êags
 >> 5) & 0x1

296 @
∑πül
.
£âî


297 
def
 
	$∑πül
(
£lf
, 
p
):

298 
£lf
.
Êags
 = (£lf.Êag†& ~0x20Ë| ((
p
 & 0x1) << 5)

300 @
¥›îty


301 
def
 
	$exãnded_Àngth
(
£lf
):

302  (
£lf
.
Êags
 >> 4) & 0x1

304 @
exãnded_Àngth
.
£âî


305 
def
 
	$exãnded_Àngth
(
£lf
, 
e
):

306 
£lf
.
Êags
 = (£lf.Êag†& ~0x10Ë| ((
e
 & 0x1) << 4)

308 
def
 
	$u≈ack
(
£lf
, 
buf
):

309 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

311 
£lf
.
exãnded_Àngth
:

312 
£lf
.
Àn
 = .
	`u≈ack
('>H', sñf.
d©a
[:2])[0]

313 
£lf
.
d©a
 = self.data[2:]

315 
£lf
.
Àn
 = .
	`u≈ack
('B', sñf.
d©a
[:1])[0]

316 
£lf
.
d©a
 = self.data[1:]

318 
£lf
.
d©a
 = sñf.d©a[:£lf.
Àn
]

320 
£lf
.
ty≥
 =
ORIGIN
:

321 
£lf
.
d©a
 = sñf.
‹igö
 = sñf.
	$Origö
(
£lf
.
d©a
)

322 
ñif
 
£lf
.
ty≥
 =
AS_PATH
:

323 
£lf
.
d©a
 = sñf.
as_∑th
 = sñf.
	$ASP©h
(
£lf
.
d©a
)

324 
ñif
 
£lf
.
ty≥
 =
NEXT_HOP
:

325 
£lf
.
d©a
 = sñf.
√xt_h›
 = sñf.
	$NextH›
(
£lf
.
d©a
)

326 
ñif
 
£lf
.
ty≥
 =
MULTI_EXIT_DISC
:

327 
£lf
.
d©a
 = sñf.
mu…i_exô_disc
 = sñf.
	$Mu…iExôDisc
(
£lf
.
d©a
)

328 
ñif
 
£lf
.
ty≥
 =
LOCAL_PREF
:

329 
£lf
.
d©a
 = sñf.
loˇl_¥ef
 = sñf.
	$LoˇlPªf
(
£lf
.
d©a
)

330 
ñif
 
£lf
.
ty≥
 =
ATOMIC_AGGREGATE
:

331 
£lf
.
d©a
 = sñf.
©omic_aggªg©e
 = sñf.
	$AtomicAggªg©e
(
£lf
.
d©a
)

332 
ñif
 
£lf
.
ty≥
 =
AGGREGATOR
:

333 
£lf
.
d©a
 = sñf.
aggªg©‹
 = sñf.
	$Aggªg©‹
(
£lf
.
d©a
)

334 
ñif
 
£lf
.
ty≥
 =
COMMUNITIES
:

335 
£lf
.
d©a
 = sñf.
communôõs
 = sñf.
	$Communôõs
(
£lf
.
d©a
)

336 
ñif
 
£lf
.
ty≥
 =
ORIGINATOR_ID
:

337 
£lf
.
d©a
 = sñf.
‹igö©‹_id
 = sñf.
	$Origö©‹ID
(
£lf
.
d©a
)

338 
ñif
 
£lf
.
ty≥
 =
CLUSTER_LIST
:

339 
£lf
.
d©a
 = sñf.
˛u°î_li°
 = sñf.
	$Clu°îLi°
(
£lf
.
d©a
)

340 
ñif
 
£lf
.
ty≥
 =
MP_REACH_NLRI
:

341 
£lf
.
d©a
 = sñf.
mp_ªach_∆ri
 = sñf.
	$MPRóchNLRI
(
£lf
.
d©a
)

342 
ñif
 
£lf
.
ty≥
 =
MP_UNREACH_NLRI
:

343 
£lf
.
d©a
 = sñf.
mp_uƒóch_∆ri
 = sñf.
	$MPUƒóchNLRI
(
£lf
.
d©a
)

345 
def
 
	$__Àn__
(
£lf
):

346 
£lf
.
exãnded_Àngth
:

347 
©å_Àn
 = 2

349 
©å_Àn
 = 1

350  
£lf
.
__hdr_Àn__
 + 
©å_Àn
 + 
	$Àn
(
£lf
.
d©a
)

352 
def
 
	$__byãs__
(
£lf
):

353 
£lf
.
exãnded_Àngth
:

354 
©å_Àn_°r
 = .
	`∑ck
('>H', 
£lf
.
Àn
)

356 
©å_Àn_°r
 = .
	`∑ck
('B', 
£lf
.
Àn
)

357  
£lf
.
	`∑ck_hdr
(Ë+ 
©å_Àn_°r
 + 
	$byãs
(
£lf
.
d©a
)

359 
˛ass
 
	$Origö
(
dpkt
.
Packë
):

360 
__hdr__
 = (

361 ('ty≥', 'B', 
ORIGIN_IGP
),

364 
˛ass
 
	$ASP©h
(
dpkt
.
Packë
):

365 
__hdr_deÁu…s__
 = {

367 
	}
}

369 
def
 
	$u≈ack
(
£lf
, 
buf
):

370 
£lf
.
d©a
 = 
buf


371 
l
 = []

372 
£lf
.
d©a
:

373 
£g
 = 
£lf
.
	$ASP©hSegmít
(
£lf
.
d©a
)

374 
£lf
.
d©a
 = sñf.d©a[
	$Àn
(
£g
):]

375 
l
.
	$≠≥nd
(
£g
)

376 
£lf
.
d©a
 = sñf.
£gmíts
 = 
l


378 
def
 
	$__Àn__
(
£lf
):

379  
	`sum
(
	$m≠
(
Àn
, 
£lf
.
d©a
))

381 
def
 
	$__byãs__
(
£lf
):

382  
b
''.
	`joö
(
	$m≠
(
byãs
, 
£lf
.
d©a
))

384 
˛ass
 
	$ASP©hSegmít
(
dpkt
.
Packë
):

385 
__hdr__
 = (

390 
def
 
	$u≈ack
(
£lf
, 
buf
):

391 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

392 
l
 = []

393 
i
 
ö
 
	$ønge
(
£lf
.
Àn
):

394 
AS
 = .
	`u≈ack
('>H', 
£lf
.
d©a
[:2])[0]

395 
£lf
.
d©a
 = self.data[2:]

396 
l
.
	$≠≥nd
(
AS
)

397 
£lf
.
d©a
 = sñf.
∑th
 = 
l


399 
def
 
	$__Àn__
(
£lf
):

400  
£lf
.
__hdr_Àn__
 + 2 * 
	$Àn
(
£lf
.
∑th
)

402 
def
 
	$__byãs__
(
£lf
):

403 
as_°r
 = 
b
''

404 
AS
 
ö
 
£lf
.
∑th
:

405 
as_°r
 +.
	`∑ck
('>H', 
AS
)

406  
£lf
.
	`∑ck_hdr
(Ë+ 
as_°r


408 
˛ass
 
	$NextH›
(
dpkt
.
Packë
):

409 
__hdr__
 = (

413 
˛ass
 
	$Mu…iExôDisc
(
dpkt
.
Packë
):

414 
__hdr__
 = (

418 
˛ass
 
	$LoˇlPªf
(
dpkt
.
Packë
):

419 
__hdr__
 = (

423 
˛ass
 
	$AtomicAggªg©e
(
dpkt
.
Packë
):

424 
def
 
	$u≈ack
(
£lf
, 
buf
):

425 
∑ss


427 
def
 
	$__Àn__
(
£lf
):

430 
def
 
	$__byãs__
(
£lf
):

431  
b
''

433 
˛ass
 
	$Aggªg©‹
(
dpkt
.
Packë
):

434 
__hdr__
 = (

439 
˛ass
 
	$Communôõs
(
dpkt
.
Packë
):

440 
__hdr_deÁu…s__
 = {

442 
	}
}

444 
def
 
	$u≈ack
(
£lf
, 
buf
):

445 
£lf
.
d©a
 = 
buf


446 
l
 = []

447 
£lf
.
d©a
:

448 
vÆ
 = .
	`u≈ack
('>I', 
£lf
.
d©a
[:4])[0]

449 i‡(0x00000000 <
vÆ
 <0x0000ffffË
	`‹
 (0xffff0000 <= val <= 0xffffffff):

450 
comm
 = 
£lf
.
	$Re£rvedCommunôy
(
£lf
.
d©a
[:4])

452 
comm
 = 
£lf
.
	$Communôy
(
£lf
.
d©a
[:4])

453 
£lf
.
d©a
 = sñf.d©a[
	$Àn
(
comm
):]

454 
l
.
	$≠≥nd
(
comm
)

455 
£lf
.
d©a
 = sñf.
li°
 = 
l


457 
def
 
	$__Àn__
(
£lf
):

458  
	`sum
(
	$m≠
(
Àn
, 
£lf
.
d©a
))

460 
def
 
	$__byãs__
(
£lf
):

461  
b
''.
	`joö
(
	$m≠
(
byãs
, 
£lf
.
d©a
))

463 
˛ass
 
	$Communôy
(
dpkt
.
Packë
):

464 
__hdr__
 = (

469 
˛ass
 
	$Re£rvedCommunôy
(
dpkt
.
Packë
):

470 
__hdr__
 = (

474 
˛ass
 
	$Origö©‹ID
(
dpkt
.
Packë
):

475 
__hdr__
 = (

479 
˛ass
 
	$Clu°îLi°
(
dpkt
.
Packë
):

480 
__hdr_deÁu…s__
 = {

482 
	}
}

484 
def
 
	$u≈ack
(
£lf
, 
buf
):

485 
£lf
.
d©a
 = 
buf


486 
l
 = []

487 
£lf
.
d©a
:

488 
id
 = .
	`u≈ack
('>I', 
£lf
.
d©a
[:4])[0]

489 
£lf
.
d©a
 = self.data[4:]

490 
l
.
	$≠≥nd
(
id
)

491 
£lf
.
d©a
 = sñf.
li°
 = 
l


493 
def
 
	$__Àn__
(
£lf
):

494  4 * 
	$Àn
(
£lf
.
li°
)

496 
def
 
	$__byãs__
(
£lf
):

497 
˛u°î_°r
 = 
b
''

498 
vÆ
 
ö
 
£lf
.
li°
:

499 
˛u°î_°r
 +.
	`∑ck
('>I', 
vÆ
)

500  
˛u°î_°r


502 
˛ass
 
	$MPRóchNLRI
(
dpkt
.
Packë
):

503 
__hdr__
 = (

504 ('afi', 'H', 
AFI_IPV4
),

505 ('ßfi', 'B', 
SAFI_UNICAST
),

508 
def
 
	$u≈ack
(
£lf
, 
buf
):

509 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

511 #Nexà
H›


512 
∆í
 = .
	`u≈ack
('B', 
£lf
.
d©a
[:1])[0]

513 
£lf
.
d©a
 = self.data[1:]

514 
£lf
.
√xt_h›
 = sñf.
d©a
[:
∆í
]

515 
£lf
.
d©a
 = sñf.d©a[
∆í
:]

518 
l
 = []

519 
num_¢∑s
 = .
	`u≈ack
('B', 
£lf
.
d©a
[:1])[0]

520 
£lf
.
d©a
 = self.data[1:]

521 
i
 
ö
 
	$ønge
(
num_¢∑s
):

522 
¢∑
 = 
£lf
.
	$SNPA
(
£lf
.
d©a
)

523 
£lf
.
d©a
 = sñf.d©a[
	$Àn
(
¢∑
):]

524 
l
.
	$≠≥nd
(
¢∑
)

525 
£lf
.
¢∑s
 = 
l


527 
£lf
.
afi
 =
AFI_IPV4
:

528 
Rouã
 = 
RouãIPV4


529 
ñif
 
£lf
.
afi
 =
AFI_IPV6
:

530 
Rouã
 = 
RouãIPV6


532 
Rouã
 = 
RouãGíîic


534 #A¬oun˚d 
Rouãs


535 
l
 = []

536 
£lf
.
d©a
:

537 
rouã
 = 
	$Rouã
(
£lf
.
d©a
)

538 
£lf
.
d©a
 = sñf.d©a[
	$Àn
(
rouã
):]

539 
l
.
	$≠≥nd
(
rouã
)

540 
£lf
.
d©a
 = sñf.
™noun˚d
 = 
l


542 
def
 
	$__Àn__
(
£lf
):

543  
£lf
.
__hdr_Àn__
 + \

544 1 + 
	`Àn
(
£lf
.
√xt_h›
) + \

545 1 + 
	`sum
(
	`m≠
(
Àn
, 
£lf
.
¢∑s
)) + \

546 
	`sum
(
	$m≠
(
Àn
, 
£lf
.
™noun˚d
))

548 
def
 
	$__byãs__
(
£lf
):

549  
£lf
.
	`∑ck_hdr
() + \

550 .
	`∑ck
('B', 
	`Àn
(
£lf
.
√xt_h›
)) + \

551 
	`byãs
(
£lf
.
√xt_h›
) + \

552 .
	`∑ck
('B', 
	`Àn
(
£lf
.
¢∑s
)) + \

553 
b
''.
	`joö
(
	`m≠
(
byãs
, 
£lf
.
¢∑s
)) + \

554 
b
''.
	`joö
(
	$m≠
(
byãs
, 
£lf
.
™noun˚d
))

556 
˛ass
 
	$SNPA
(
obje˘
):

557 
__hdr__
 = (

561 
def
 
	$u≈ack
(
£lf
, 
buf
):

562 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

563 
£lf
.
d©a
 = sñf.d©a[:(£lf.
Àn
 + 1)

565 
˛ass
 
	$MPUƒóchNLRI
(
dpkt
.
Packë
):

566 
__hdr__
 = (

567 ('afi', 'H', 
AFI_IPV4
),

568 ('ßfi', 'B', 
SAFI_UNICAST
),

571 
def
 
	$u≈ack
(
£lf
, 
buf
):

572 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

574 
£lf
.
afi
 =
AFI_IPV4
:

575 
Rouã
 = 
RouãIPV4


576 
ñif
 
£lf
.
afi
 =
AFI_IPV6
:

577 
Rouã
 = 
RouãIPV6


579 
Rouã
 = 
RouãGíîic


581 #Wôhdøw¿
Rouãs


582 
l
 = []

583 
£lf
.
d©a
:

584 
rouã
 = 
	$Rouã
(
£lf
.
d©a
)

585 
£lf
.
d©a
 = sñf.d©a[
	$Àn
(
rouã
):]

586 
l
.
	$≠≥nd
(
rouã
)

587 
£lf
.
d©a
 = sñf.
wôhdøwn
 = 
l


589 
def
 
	$__Àn__
(
£lf
):

590  
£lf
.
__hdr_Àn__
 + 
	`sum
(
	$m≠
(
Àn
, 
£lf
.
d©a
))

592 
def
 
	$__byãs__
(
£lf
):

593  
£lf
.
	`∑ck_hdr
(Ë+ 
b
''.
	`joö
(
	$m≠
(
byãs
, 
£lf
.
d©a
))

595 
˛ass
 
	$NŸifiˇti⁄
(
dpkt
.
Packë
):

596 
__hdr__
 = (

601 
def
 
	$u≈ack
(
£lf
, 
buf
):

602 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

603 
£lf
.
îr‹
 = sñf.
d©a


605 
˛ass
 
	$Kì∑live
(
dpkt
.
Packë
):

606 
def
 
	$u≈ack
(
£lf
, 
buf
):

607 
∑ss


609 
def
 
	$__Àn__
(
£lf
):

612 
def
 
	$__byãs__
(
£lf
):

613  
b
''

615 
˛ass
 
	$RouãRe‰esh
(
dpkt
.
Packë
):

616 
__hdr__
 = (

617 ('afi', 'H', 
AFI_IPV4
),

619 ('ßfi', 'B', 
SAFI_UNICAST
)

623 
˛ass
 
	$RouãGíîic
(
dpkt
.
Packë
):

624 
__hdr__
 = (

628 
def
 
	$u≈ack
(
£lf
, 
buf
):

629 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

630 
£lf
.
d©a
 = sñf.
¥efix
 = sñf.d©a[:(£lf.
Àn
 + 7)

633 
˛ass
 
	$RouãIPV4
(
dpkt
.
Packë
):

634 
__hdr__
 = (

638 
def
 
	$u≈ack
(
£lf
, 
buf
):

639 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

640 
tmp
 = 
£lf
.
d©a
[:(£lf.
Àn
 + 7)

641 
tmp
 +(4 - 
	`Àn
—mp)Ë* 
b
'\x00'

642 
£lf
.
d©a
 = sñf.
¥efix
 = 
tmp


644 
def
 
	$__ª¥__
(
£lf
):

645 
cidr
 = '%s/%d' % (
sockë
.
	`öë_¡ﬂ
(
£lf
.
¥efix
), sñf.
Àn
)

646  '%s(%s)' % (
£lf
.
__˛ass__
.
__«me__
, 
cidr
)

648 
def
 
	$__Àn__
(
£lf
):

649  
£lf
.
__hdr_Àn__
 + (£lf.
Àn
 + 7)

651 
def
 
	$__byãs__
(
£lf
):

652  
£lf
.
	`∑ck_hdr
(Ë+ sñf.
¥efix
[:(£lf.
Àn
 + 7)

655 
˛ass
 
	$RouãIPV6
(
dpkt
.
Packë
):

656 
__hdr__
 = (

660 
def
 
	$u≈ack
(
£lf
, 
buf
):

661 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

662 
tmp
 = 
£lf
.
d©a
[:(£lf.
Àn
 + 7)

663 
tmp
 +(16 - 
	`Àn
—mp)Ë* 
b
'\x00'

664 
£lf
.
d©a
 = sñf.
¥efix
 = 
tmp


666 
def
 
	$__Àn__
(
£lf
):

667  
£lf
.
__hdr_Àn__
 + (£lf.
Àn
 + 7)

669 
def
 
	$__byãs__
(
£lf
):

670  
£lf
.
	`∑ck_hdr
(Ë+ sñf.
¥efix
[:(£lf.
Àn
 + 7)

673 
__bgp1
 = 
b
'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x00\x13\x04'

674 
__bgp2
 = 
b
'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x00\x63\x02\x00\x00\x00\x48\x40\x01\x01\x00\x40\x02\x0a\x01\x02\x01\xf4\x01\xf4\x02\x01\xfe\xbb\x40\x03\x04\xc0\xa8\x00\x0f\x40\x05\x04\x00\x00\x00\x64\x40\x06\x00\xc0\x07\x06\xfe\xba\xc0\xa8\x00\x0a\xc0\x08\x0c\xfe\xbf\x00\x01\x03\x16\x00\x04\x01\x54\x00\xfa\x80\x09\x04\xc0\xa8\x00\x0f\x80\x0a\x04\xc0\xa8\x00\xfa\x16\xc0\xa8\x04'

675 
__bgp3
 = 
b
'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x00\x79\x02\x00\x00\x00\x62\x40\x01\x01\x00\x40\x02\x00\x40\x05\x04\x00\x00\x00\x64\xc0\x10\x08\x00\x02\x01\x2c\x00\x00\x01\x2c\xc0\x80\x24\x00\x00\xfd\xe9\x40\x01\x01\x00\x40\x02\x04\x02\x01\x15\xb3\x40\x05\x04\x00\x00\x00\x2c\x80\x09\x04\x16\x05\x05\x05\x80\x0a\x04\x16\x05\x05\x05\x90\x0e\x00\x1e\x00\x01\x80\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x0c\x04\x04\x04\x00\x60\x18\x77\x01\x00\x00\x01\xf4\x00\x00\x01\xf4\x85'

676 
__bgp4
 = 
b
'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x00\x2d\x01\x04\x00\xed\x00\x5a\xc6\x6e\x83\x7d\x10\x02\x06\x01\x04\x00\x01\x00\x01\x02\x02\x80\x00\x02\x02\x02\x00'

679 
def
 
	$ã°_∑ck
():

680 
	`as£π
 (
__bgp1
 =
	`byãs
(
	$BGP
(
__bgp1
)))

681 
	`as£π
 (
__bgp2
 =
	`byãs
(
	$BGP
(
__bgp2
)))

682 
	`as£π
 (
__bgp3
 =
	`byãs
(
	$BGP
(
__bgp3
)))

683 
	`as£π
 (
__bgp4
 =
	`byãs
(
	$BGP
(
__bgp4
)))

686 
def
 
	$ã°_u≈ack
():

687 
b1
 = 
	$BGP
(
__bgp1
)

688 
	$as£π
 (
b1
.
Àn
 == 19)

689 
	$as£π
 (
b1
.
ty≥
 =
KEEPALIVE
)

690 
	$as£π
 (
b1
.
kì∑live
 
is
 
nŸ
 
N⁄e
)

692 
b2
 = 
	$BGP
(
__bgp2
)

693 
	$as£π
 (
b2
.
ty≥
 =
UPDATE
)

694 
	`as£π
 (
	`Àn
(
b2
.
upd©e
.
wôhdøwn
) == 0)

695 
	`as£π
 (
	`Àn
(
b2
.
upd©e
.
™noun˚d
) == 1)

696 
	`as£π
 (
	`Àn
(
b2
.
upd©e
.
©åibuãs
) == 9)

697 
a
 = 
b2
.
upd©e
.
©åibuãs
[1]

698 
	$as£π
 (
a
.
ty≥
 =
AS_PATH
)

699 
	$as£π
 (
a
.
Àn
 == 10)

700 
	`as£π
 (
	`Àn
(
a
.
as_∑th
.
£gmíts
) == 2)

701 
s
 = 
a
.
as_∑th
.
£gmíts
[0]

702 
	$as£π
 (
s
.
ty≥
 =
AS_SET
)

703 
	$as£π
 (
s
.
Àn
 == 2)

704 
	`as£π
 (
	`Àn
(
s
.
∑th
) == 2)

705 
	$as£π
 (
s
.
∑th
[0] == 500)

707 
a
 = 
b2
.
upd©e
.
©åibuãs
[6]

708 
	$as£π
 (
a
.
ty≥
 =
COMMUNITIES
)

709 
	$as£π
 (
a
.
Àn
 == 12)

710 
	`as£π
 (
	`Àn
(
a
.
communôõs
.
li°
) == 3)

711 
c
 = 
a
.
communôõs
.
li°
[0]

712 
	$as£π
 (
c
.
a¢
 == 65215)

713 
	$as£π
 (
c
.
vÆue
 == 1)

714 
r
 = 
b2
.
upd©e
.
™noun˚d
[0]

715 
	$as£π
 (
r
.
Àn
 == 22)

716 
	`as£π
 (
r
.
¥efix
 =
b
'\xc0\xa8\x04\x00')

718 
b3
 = 
	$BGP
(
__bgp3
)

719 
	$as£π
 (
b3
.
ty≥
 =
UPDATE
)

720 
	`as£π
 (
	`Àn
(
b3
.
upd©e
.
wôhdøwn
) == 0)

721 
	`as£π
 (
	`Àn
(
b3
.
upd©e
.
™noun˚d
) == 0)

722 
	`as£π
 (
	`Àn
(
b3
.
upd©e
.
©åibuãs
) == 6)

723 
a
 = 
b3
.
upd©e
.
©åibuãs
[0]

724 
	$as£π
 (
a
.
›ti⁄Æ
 =
FÆ£
)

725 
	$as£π
 (
a
.
å™sôive
 =
True
)

726 
	$as£π
 (
a
.
∑πül
 =
FÆ£
)

727 
	$as£π
 (
a
.
exãnded_Àngth
 =
FÆ£
)

728 
	$as£π
 (
a
.
ty≥
 =
ORIGIN
)

729 
	$as£π
 (
a
.
Àn
 == 1)

730 
o
 = 
a
.
‹igö


731 
	$as£π
 (
o
.
ty≥
 =
ORIGIN_IGP
)

732 
a
 = 
b3
.
upd©e
.
©åibuãs
[5]

733 
	$as£π
 (
a
.
›ti⁄Æ
 =
True
)

734 
	$as£π
 (
a
.
å™sôive
 =
FÆ£
)

735 
	$as£π
 (
a
.
∑πül
 =
FÆ£
)

736 
	$as£π
 (
a
.
exãnded_Àngth
 =
True
)

737 
	$as£π
 (
a
.
ty≥
 =
MP_REACH_NLRI
)

738 
	$as£π
 (
a
.
Àn
 == 30)

739 
m
 = 
a
.
mp_ªach_∆ri


740 
	$as£π
 (
m
.
afi
 =
AFI_IPV4
)

741 
	`as£π
 (
	`Àn
(
m
.
¢∑s
) == 0)

742 
	`as£π
 (
	`Àn
(
m
.
™noun˚d
) == 1)

743 
p
 = 
m
.
™noun˚d
[0]

744 
	$as£π
 (
p
.
Àn
 == 96)

746 
b4
 = 
	$BGP
(
__bgp4
)

747 
	$as£π
 (
b4
.
Àn
 == 45)

748 
	$as£π
 (
b4
.
ty≥
 =
OPEN
)

749 
	$as£π
 (
b4
.
›í
.
a¢
 == 237)

750 
	$as£π
 (
b4
.
›í
.
∑øm_Àn
 == 16)

751 
	`as£π
 (
	`Àn
(
b4
.
›í
.
∑ømëîs
) == 3)

752 
p
 = 
b4
.
›í
.
∑ømëîs
[0]

753 
	$as£π
 (
p
.
ty≥
 =
CAPABILITY
)

754 
	$as£π
 (
p
.
Àn
 == 6)

755 
c
 = 
p
.
ˇ∑bûôy


756 
	$as£π
 (
c
.
code
 =
CAP_MULTIPROTOCOL
)

757 
	$as£π
 (
c
.
Àn
 == 4)

758 
	`as£π
 (
c
.
d©a
 =
b
'\x00\x01\x00\x01')

759 
c
 = 
b4
.
›í
.
∑ømëîs
[2].
ˇ∑bûôy


760 
	$as£π
 (
c
.
code
 =
CAP_ROUTE_REFRESH
)

761 
	$as£π
 (
c
.
Àn
 == 0)

764 
__«me__
 == '__main__':

765 
	$ã°_∑ck
()

766 
	$ã°_u≈ack
()

767 
	`¥öt
('Tests Successful...')

	@cdp.py

1 #$Id: 
cdp
.
py
 23 2006-11-08 15:45:33
Z
 
dugs⁄g
 
$


2 #-*- 
codög
: 
utf
-8 -*-

4 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


6 
imp‹t
 

8 
	g‰om
 . 
imp‹t
 
dpkt


10 
	gCDP_DEVID
 = 1 #string

11 
CDP_ADDRESS
 = 2

12 
CDP_PORTID
 = 3 #string

13 
CDP_CAPABILITIES
 = 4 #32-
bô
 
bômask


14 
CDP_VERSION
 = 5 #string

15 
CDP_PLATFORM
 = 6 #string

16 
CDP_IPPREFIX
 = 7

18 
CDP_VTP_MGMT_DOMAIN
 = 9 #string

19 
CDP_NATIVE_VLAN
 = 10 #16-
bô
 
öãgî


20 
CDP_DUPLEX
 = 11 #8-
bô
 
boﬁón


21 
CDP_TRUST_BITMAP
 = 18 #8-
bô
 
bômask0x13


22 
CDP_UNTRUST_COS
 = 19 #8-
bô
 
p‹t


23 
CDP_SYSTEM_NAME
 = 20 #string

24 
CDP_SYSTEM_OID
 = 21 #10-
byã
 
bö¨y
 
°rög


25 
CDP_MGMT_ADDRESS
 = 22 #32-
bô
 
numbî
 
of
 
addrs
, 
Addªs£s


26 
	gCDP_LOCATION
 = 23 #string

29 
˛ass
 
	$CDP
(
dpkt
.
Packë
):

32 
Sì
 
m‹e
 
about
 
the
 
BGP
 
⁄
 \

33 
hâps
:

35 
Aâribuãs
:

36 
__hdr__
: 
Hódî
 
fõlds
 
of
 
CDP
.

40 
__hdr__
 = (

46 
˛ass
 
	$Addªss
(
dpkt
.
Packë
):

47 #XXX - 
⁄ly
 
h™dÀ
 
NLPID
/
IP
 
now


48 
__hdr__
 = (

49 ('±y≥', 'B', 1), #¥Ÿocﬁ 
	`ty≥
 (
NLPID
)

50 ('∂í', 'B', 1), #¥Ÿocﬁ 
Àngth


52 ('Æí', 'H', 4Ë#addªs†
Àngth


55 
def
 
	$u≈ack
(
£lf
, 
buf
):

56 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

57 
£lf
.
d©a
 = sñf.d©a[:£lf.
Æí
]

59 
˛ass
 
	$TLV
(
dpkt
.
Packë
):

60 
__hdr__
 = (

65 
def
 
	$u≈ack
(
£lf
, 
buf
):

66 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

67 
£lf
.
d©a
 = sñf.d©a[:£lf.
Àn
 - 4]

68 
£lf
.
ty≥
 =
CDP_ADDRESS
:

69 
n
 = .
	`u≈ack
('>I', 
£lf
.
d©a
[:4])[0]

70 
buf
 = 
£lf
.
d©a
[4:]

71 
l
 = []

72 
i
 
ö
 
	$ønge
(
n
):

73 
a
 = 
CDP
.
	$Addªss
(
buf
)

74 
l
.
	$≠≥nd
(
a
)

75 
buf
 = buf[
	$Àn
(
a
):]

76 
£lf
.
d©a
 = 
l


78 
def
 
	$__Àn__
(
£lf
):

79 
£lf
.
ty≥
 =
CDP_ADDRESS
:

80 
n
 = 4 + 
	`sum
(
	$m≠
(
Àn
, 
£lf
.
d©a
))

82 
n
 = 
	$Àn
(
£lf
.
d©a
)

83  
£lf
.
__hdr_Àn__
 + 
n


85 
def
 
	$__byãs__
(
£lf
):

86 
£lf
.
Àn
 = 
	$Àn
(
£lf
)

87 
£lf
.
ty≥
 =
CDP_ADDRESS
:

88 
s
 = .
	`∑ck
('>I', 
	`Àn
(
£lf
.
d©a
)) + \

89 
b
''.
	`joö
(
	$m≠
(
byãs
, 
£lf
.
d©a
))

91 
s
 = 
£lf
.
d©a


92  
£lf
.
	`∑ck_hdr
(Ë+ 
s


94 
def
 
	$u≈ack
(
£lf
, 
buf
):

95 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

96 
buf
 = 
£lf
.
d©a


97 
l
 = []

98 
buf
:

99 
év
 = 
£lf
.
	$TLV
(
buf
)

100 
l
.
	$≠≥nd
(
év
)

101 
buf
 = buf[
	$Àn
(
év
):]

102 
£lf
.
d©a
 = 
l


104 
def
 
	$__Àn__
(
£lf
):

105  
£lf
.
__hdr_Àn__
 + 
	`sum
(
	$m≠
(
Àn
, 
£lf
.
d©a
))

107 
def
 
	$__byãs__
(
£lf
):

108 
d©a
 = 
b
''.
	`joö
(
	$m≠
(
byãs
, 
£lf
.
d©a
))

109 
nŸ
 
£lf
.
sum
:

110 
£lf
.
sum
 = 
dpkt
.
	`ö_cksum
(£lf.
	`∑ck_hdr
(Ë+ 
d©a
)

111  
£lf
.
	`∑ck_hdr
(Ë+ 
d©a


	@compat.py

1 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


3 
imp‹t
 
sys


5 
	gsys
.
	gvîsi⁄_öfo
 < (3,):

6 
com∑t_‹d
 = 
‹d


8 
def
 
	$com∑t_‹d
():

11 
åy
:

12 
‰om
 
ôîtoﬁs
 
imp‹t
 
izù


13 
com∑t_izù
 = 
izù


14 
ex˚±
 
Imp‹tEº‹
:

15 
com∑t_izù
 = 
zù


17 
åy
:

18 
‰om
 
cSåögIO
 
imp‹t
 
SåögIO


19 
ex˚±
 
Imp‹tEº‹
:

20 
‰om
 
io
 
imp‹t
 
SåögIO


22 
åy
:

23 
‰om
 
ByãsIO
 
imp‹t
 BytesIO

24 
ex˚±
 
Imp‹tEº‹
:

25 
‰om
 
io
 
imp‹t
 
ByãsIO


27 
sys
.
vîsi⁄_öfo
 < (3,):

28 
def
 
	$ôîôems
(
d
, **
kw
):

29  
d
.
	$ôîôems
(**
kw
)

31 
def
 
	$ôîôems
(
d
, **
kw
):

32  
	`ôî
(
d
.
	`ôems
(**
kw
))

	@crc32c.py

1 #$Id: 
¸c32c
.
py
 23 2006-11-08 15:45:33
Z
 
dugs⁄g
 
$


2 #-*- 
codög
: 
utf
-8 -*-

3 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


5 
imp‹t
 
	g¨øy


7 #CRC-32C 
Checksum
 
SCTP


10 
	g¸c32c_èbÀ
 = (

66 
def
 
	$add
(
¸c
, 
buf
):

67 
byã_buf
 = 
¨øy
.
	`¨øy
('B', 
buf
)

68 
b
 
ö
 
byã_buf
:

69 
¸c
 = (¸¯>> 8Ë^ 
¸c32c_èbÀ
[(¸¯^ 
b
) & 0xff]

70  
¸c


73 
def
 
	$d⁄e
(
¸c
):

74 
tmp
 = ~
¸c
 & 0xffffffff

75 
b0
 = 
tmp
 & 0xff

76 
b1
 = (
tmp
 >> 8) & 0xff

77 
b2
 = (
tmp
 >> 16) & 0xff

78 
b3
 = (
tmp
 >> 24) & 0xff

79 
¸c
 = (
b0
 << 24Ë| (
b1
 << 16Ë| (
b2
 << 8Ë| 
b3


80  
¸c


83 
def
 
	$cksum
(
buf
):

85  
	`d⁄e
(
	$add
(0xffffffff, 
buf
))

88 
def
 
	$ã°_¸c32c
():

90 
def
 
	$bsw≠32
(
x
):

91 
‰om
 
imp‹t
 
∑ck
, 
u≈ack


92  
	`u≈ack
('<I', 
	`∑ck
('>I', 
x
))[0]

94 #ª„ªn˚ 
ã°
 
vÆue
 
‰om
 
CRC
 
ˇèlogue


96 #SCTP 
u£s
 
å™p‹t
-
Àvñ
 
múr‹ed
 
byã
 
‹dîög
, 
so
 
we
 
bsw≠32


98 
as£π
 
	`cksum
(
b
'') == 0

99 
as£π
 
	`cksum
(
b
'123456789'Ë=
	$bsw≠32
(0xe3069283)

102 
__«me__
 == '__main__':

103 
	$ã°_¸c32c
()

104 
	`¥öt
('Tests Successful...')

	@decorators.py

1 #-*- 
codög
: 
utf
-8 -*-

2 
‰om
 
__futuª__
 
imp‹t
 
¥öt_fun˘i⁄


3 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


5 
imp‹t
 
w¨nögs


8 
def
 
	$dec‹©‹_wôh_¨gs
(
dec‹©‹_to_íh™˚
):

10 
This
 
is
 
dec‹©‹
 dec‹©‹. 
It
 
Ælows
 
™y
 dec‹©‹ 
to
 
gë
 
addôi⁄Æ
 
¨gumíts


12 
def
 
	$dec‹©‹_makî
(*
¨gs
, **
kw¨gs
):

13 
def
 
	$dec‹©‹_wøµî
(
func
):

14  
	$dec‹©‹_to_íh™˚
(
func
, *
¨gs
, **
kw¨gs
)

16  
dec‹©‹_wøµî


18  
dec‹©‹_makî


21 @
dec‹©‹_wôh_¨gs


22 
def
 
	$dïªˇãd
(
dïªˇãd_mëhod
, 
func_«me
=
N⁄e
):

23 
def
 
	$_dïªˇãd
(*
¨gs
, **
kw¨gs
):

24 #Pröà
⁄ly
 
the
 
fú°
 
occuºí˚
 
of
Åhê
Dïªˇti⁄W¨nög
, 
ªg¨dÀss
 o‡
loˇti⁄


25 
w¨nögs
.
	`sim∂efûãr
('⁄˚', 
Dïªˇti⁄W¨nög
)

26 #Di•œy 
the
 
dïªˇti⁄
 
w¨nög
 
mesßge


27 
func_«me
: #I‡
the
 
fun˘i⁄
, 
should
 
be
 
u£d
 
ö°ód
, 
is
 
ª˚ived


28 
w¨nögs
.
	`w¨n
("CÆ»tÿdïªˇãd mëhod %s; u£ %†ö°ód" % (
dïªˇãd_mëhod
.
__«me__
, 
func_«me
),

29 
ˇãg‹y
=
Dïªˇti⁄W¨nög
, 
°ackÀvñ
=2)

31 
w¨nögs
.
	`w¨n
("CÆ»tÿdïªˇãd mëhod %s" % 
dïªˇãd_mëhod
.
__«me__
,

32 
ˇãg‹y
=
Dïªˇti⁄W¨nög
, 
°ackÀvñ
=2)

33  
	$dïªˇãd_mëhod
(*
¨gs
, **
kw¨gs
Ë#a˘uÆly 
ˇŒ
 
the
 
mëhod


35  
_dïªˇãd


38 
˛ass
 
	$Te°DïªˇãdDec‹©‹
(
obje˘
):

39 
def
 
	$√w_mëhod
(
£lf
):

42 @
	`dïªˇãd
('new_method')

43 
def
 
	$ﬁd_mëhod
(
£lf
):

46 @
	$dïªˇãd
()

47 
def
 
	$dïªˇãd_dec‹©‹
(
£lf
):

50 
def
 
	$ã°_dïªˇãd_dec‹©‹
(
£lf
):

51 
imp‹t
 
sys


52 
‰om
 .
com∑t
 
imp‹t
 
SåögIO


54 
ßved_°dîr
 = 
sys
.
°dîr


55 
åy
:

56 
out
 = 
	$SåögIO
()

57 
sys
.
°dîr
 = 
out


58 
£lf
.
	$dïªˇãd_dec‹©‹
()

59 
åy
: #Thi†
i¢
't working underÇewest version ofÖytest

60 
	`as£π
 ('Dïªˇti⁄W¨nög: CÆ»tÿdïªˇãd mëhod dïªˇãd_dec‹©‹' 
ö
 
out
.
	$gëvÆue
())

61 
out
.
	$åunˇã
(0Ë#˛ó¿
the
 
buf„r


62 
£lf
.
	$ﬁd_mëhod
()

63 
	`as£π
 ('Dïªˇti⁄W¨nög: CÆ»tÿdïªˇãd mëhod old_mëhod; u£Çew_mëhod in°ód' 
ö
 
out
.
	$gëvÆue
())

64 
out
.
	$åunˇã
(0Ë#˛ó¿
the
 
buf„r


65 
£lf
.
	$√w_mëhod
()

66 
	`as£π
 ('Dïªˇti⁄W¨nög' 
nŸ
 
ö
 
out
.
	$gëvÆue
())

67 
ex˚±
 
As£πi⁄Eº‹
:

68 
	`¥öt
('Assertion failing, Note: This isÉxpected for Python 2.6')

69 
föÆly
:

70 
sys
.
°dîr
 = 
ßved_°dîr


73 
__«me__
 == '__main__':

74 
a
 = 
	$Te°DïªˇãdDec‹©‹
()

75 
a
.
	$ã°_dïªˇãd_dec‹©‹
()

76 
	`¥öt
('Tests Successful...')

	@dhcp.py

1 #$Id: 
dh˝
.
py
 23 2006-11-08 15:45:33
Z
 
dugs⁄g
 
$


2 #-*- 
codög
: 
utf
-8 -*-

4 
‰om
 
__futuª__
 
imp‹t
 
¥öt_fun˘i⁄


5 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


7 
imp‹t
 

9 
	g‰om
 . 
imp‹t
 
¨p


10 
	g‰om
 . 
imp‹t
 
dpkt


11 
	g‰om
 .
com∑t
 
imp‹t
 
com∑t_‹d


13 
	gDHCP_OP_REQUEST
 = 1

14 
DHCP_OP_REPLY
 = 2

16 
DHCP_MAGIC
 = 0x63825363

18 #DHCP 
›ti⁄
 
codes


19 
DHCP_OPT_NETMASK
 = 1 #I: 
sub√t
 
mask


20 
DHCP_OPT_TIMEOFFSET
 = 2

21 
DHCP_OPT_ROUTER
 = 3 #s: 
li°
 
of
 
rouãr
 
ùs


22 
DHCP_OPT_TIMESERVER
 = 4

23 
DHCP_OPT_NAMESERVER
 = 5

24 
DHCP_OPT_DNS_SVRS
 = 6 #s: 
li°
 
of
 
DNS
 
£rvîs


25 
DHCP_OPT_LOGSERV
 = 7

26 
DHCP_OPT_COOKIESERV
 = 8

27 
DHCP_OPT_LPRSERV
 = 9

28 
DHCP_OPT_IMPSERV
 = 10

29 
DHCP_OPT_RESSERV
 = 11

30 
DHCP_OPT_HOSTNAME
 = 12 #s: 
˛õ¡
 
ho°«me


31 
DHCP_OPT_BOOTFILESIZE
 = 13

32 
DHCP_OPT_DUMPFILE
 = 14

33 
DHCP_OPT_DOMAIN
 = 15 #s: 
domaö
 
«me


34 
DHCP_OPT_SWAPSERV
 = 16

35 
DHCP_OPT_ROOTPATH
 = 17

36 
DHCP_OPT_EXTENPATH
 = 18

37 
DHCP_OPT_IPFORWARD
 = 19

38 
DHCP_OPT_SRCROUTE
 = 20

39 
DHCP_OPT_POLICYFILTER
 = 21

40 
DHCP_OPT_MAXASMSIZE
 = 22

41 
DHCP_OPT_IPTTL
 = 23

42 
DHCP_OPT_MTUTIMEOUT
 = 24

43 
DHCP_OPT_MTUTABLE
 = 25

44 
DHCP_OPT_MTUSIZE
 = 26

45 
DHCP_OPT_LOCALSUBNETS
 = 27

46 
DHCP_OPT_BROADCASTADDR
 = 28

47 
DHCP_OPT_DOMASKDISCOV
 = 29

48 
DHCP_OPT_MASKSUPPLY
 = 30

49 
DHCP_OPT_DOROUTEDISC
 = 31

50 
DHCP_OPT_ROUTERSOLICIT
 = 32

51 
DHCP_OPT_STATICROUTE
 = 33

52 
DHCP_OPT_TRAILERENCAP
 = 34

53 
DHCP_OPT_ARPTIMEOUT
 = 35

54 
DHCP_OPT_ETHERENCAP
 = 36

55 
DHCP_OPT_TCPTTL
 = 37

56 
DHCP_OPT_TCPKEEPALIVE
 = 38

57 
DHCP_OPT_TCPALIVEGARBAGE
 = 39

58 
DHCP_OPT_NISDOMAIN
 = 40

59 
DHCP_OPT_NISSERVERS
 = 41

60 
DHCP_OPT_NISTIMESERV
 = 42

61 
DHCP_OPT_VENDSPECIFIC
 = 43

62 
DHCP_OPT_NBNS
 = 44

63 
DHCP_OPT_NBDD
 = 45

64 
DHCP_OPT_NBTCPIP
 = 46

65 
DHCP_OPT_NBTCPSCOPE
 = 47

66 
DHCP_OPT_XFONT
 = 48

67 
DHCP_OPT_XDISPLAYMGR
 = 49

68 
DHCP_OPT_REQ_IP
 = 50 #I: 
IP
 
addªss


69 
DHCP_OPT_LEASE_SEC
 = 51 #I: 
Àa£
 
£c⁄ds


70 
DHCP_OPT_OPTIONOVERLOAD
 = 52

71 
DHCP_OPT_MSGTYPE
 = 53 #B: 
mesßge
 
ty≥


72 
DHCP_OPT_SERVER_ID
 = 54 #I: 
£rvî
 
IP
 
addªss


73 
DHCP_OPT_PARAM_REQ
 = 55 #s: 
li°
 
of
 
›ti⁄
 
codes


74 
DHCP_OPT_MESSAGE
 = 56

75 
DHCP_OPT_MAXMSGSIZE
 = 57

76 
DHCP_OPT_RENEWTIME
 = 58

77 
DHCP_OPT_REBINDTIME
 = 59

78 
DHCP_OPT_VENDOR_ID
 = 60 #s: 
víd‹
 
˛ass
 
id


79 
DHCP_OPT_CLIENT_ID
 = 61 #Bs: 
idty≥
, 
	$id
 (
idty≥
 0: 
FQDN
, idty≥ 1: 
MAC
)

80 
DHCP_OPT_NISPLUSDOMAIN
 = 64

81 
DHCP_OPT_NISPLUSSERVERS
 = 65

82 
DHCP_OPT_MOBILEIPAGENT
 = 68

83 
DHCP_OPT_SMTPSERVER
 = 69

84 
DHCP_OPT_POP3SERVER
 = 70

85 
DHCP_OPT_NNTPSERVER
 = 71

86 
DHCP_OPT_WWWSERVER
 = 72

87 
DHCP_OPT_FINGERSERVER
 = 73

88 
DHCP_OPT_IRCSERVER
 = 74

89 
DHCP_OPT_STSERVER
 = 75

90 
DHCP_OPT_STDASERVER
 = 76

92 #DHCP 
mesßge
 
ty≥
 
vÆues


93 
DHCPDISCOVER
 = 1

94 
DHCPOFFER
 = 2

95 
DHCPREQUEST
 = 3

96 
DHCPDECLINE
 = 4

97 
DHCPACK
 = 5

98 
DHCPNAK
 = 6

99 
DHCPRELEASE
 = 7

100 
DHCPINFORM
 = 8

103 
˛ass
 
	$DHCP
(
dpkt
.
Packë
):

106 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

108 
Aâribuãs
:

109 
__hdr__
: 
Hódî
 
fõlds
 
of
 
DHCP
.

110 
TODO
.

113 
__hdr__
 = (

114 ('›', 'B', 
DHCP_OP_REQUEST
),

115 ('hrd', 'B', 
¨p
.
ARP_HRD_ETH
), #ju° 
like
 
ARP
.
hrd


116 ('h ', 'B', 6), #™d 
ARP
.
h 


125 ('chaddr', '16s', 16 * 
b
'\x00'),

126 ('¢ame', '64s', 64 * 
b
'\x00'),

127 ('fûe', '128s', 128 * 
b
'\x00'),

128 ('magic', 'I', 
DHCP_MAGIC
),

130 
›ts
 = (

131 (
DHCP_OPT_MSGTYPE
, 
	`chr
(
DHCPDISCOVER
)),

132 (
DHCP_OPT_PARAM_REQ
, ''.
	`joö
(
	`m≠
(
chr
, (
DHCP_OPT_REQ_IP
,

133 
DHCP_OPT_ROUTER
,

134 
DHCP_OPT_NETMASK
,

135 
DHCP_OPT_DNS_SVRS
))))

136 Ë#li° 
	$of
 (
ty≥
, 
d©a
Ë
tu∂es


138 
def
 
	$__Àn__
(
£lf
):

139  
£lf
.
__hdr_Àn__
 + \

140 
	`sum
([2 + 
	$Àn
(
o
[1]Ëÿ
ö
 
£lf
.
›ts
]Ë+ 1 + 
	$Àn
(
£lf
.
d©a
)

142 
def
 
	$__byãs__
(
£lf
):

143  
£lf
.
	`∑ck_hdr
(Ë+ sñf.
	`∑ck_›ts
(Ë+ 
	$byãs
(
£lf
.
d©a
)

145 
def
 
	$∑ck_›ts
(
£lf
):

147 
nŸ
 
£lf
.
›ts
:

148  
b
''

149 
l
 = []

150 
t
, 
d©a
 
ö
 
£lf
.
›ts
:

151 
l
.
	`≠≥nd
(.
	`∑ck
("BB%is"%
	`Àn
(
d©a
), 
t
,Üen(data), data))

152 
l
.
	`≠≥nd
(
b
'\xff')

153  
b
''.
	$joö
(
l
)

155 
def
 
	$u≈ack
(
£lf
, 
buf
):

156 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

157 
£lf
.
chaddr
 = sñf.chaddr[:£lf.
h 
]

158 
buf
 = 
£lf
.
d©a


159 
l
 = []

160 
buf
:

161 
t
 = 
	$com∑t_‹d
(
buf
[0])

162 
t
 == 0xff:

163 
buf
 = buf[1:]

165 
ñif
 
t
 == 0:

166 
buf
 = buf[1:]

168 
n
 = 
	$com∑t_‹d
(
buf
[1])

169 
l
.
	`≠≥nd
((
t
, 
buf
[2:2 + 
n
]))

170 
buf
 = buf[2 + 
n
:]

171 
£lf
.
›ts
 = 
l


172 
£lf
.
d©a
 = 
buf


175 
def
 
	$ã°_dh˝
():

176 
s
 = 
b
'\x01\x01\x06\x00\xadS\xc8c\xb8\x87\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02U\x82\xf3\xa6\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00c\x82Sc5\x01\x01\xfb\x01\x01=\x07\x01\x00\x02U\x82\xf3\xa62\x04\n\x00\x01e\x0c\tGuinevere<\x08MSFT 5.07\n\x01\x0f\x03\x06,./\x1f!+\xff\x00\x00\x00\x00\x00'

177 
dh˝
 = 
	$DHCP
(
s
)

178 
	`as£π
 (
s
 =
	$byãs
(
dh˝
))

179 
as£π
 
	$isö°™˚
(
dh˝
.
chaddr
, 
byãs
)

180 
as£π
 
	$isö°™˚
(
dh˝
.
¢ame
, 
byãs
)

181 
as£π
 
	$isö°™˚
(
dh˝
.
fûe
, 
byãs
)

183 #Te°  
c⁄°ru˘i⁄


184 
dh˝
 = 
	$DHCP
()

185 
as£π
 
	$isö°™˚
(
dh˝
.
chaddr
, 
byãs
)

186 
as£π
 
	$isö°™˚
(
dh˝
.
¢ame
, 
byãs
)

187 
as£π
 
	$isö°™˚
(
dh˝
.
fûe
, 
byãs
)

189 
__«me__
 == '__main__':

190 
	$ã°_dh˝
()

191 
	`¥öt
('Tests Successful...')

	@diameter.py

1 #$Id: 
dümëî
.
py
 23 2006-11-08 15:45:33
Z
 
dugs⁄g
 
$


2 #-*- 
codög
: 
utf
-8 -*-

4 
‰om
 
__futuª__
 
imp‹t
 
¥öt_fun˘i⁄


5 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


7 
imp‹t
 

9 
	g‰om
 . 
imp‹t
 
dpkt


10 
	g‰om
 .
dec‹©‹s
 
imp‹t
 
dïªˇãd


11 
	g‰om
 .
com∑t
 
imp‹t
 
	gcom∑t_‹d


13 #Dümëî 
Ba£
 
PrŸocﬁ
 - 
RFC
 3588

16 #Reque°/
Answî
 
Comm™d
 
Codes


17 
	gABORT_SESSION
 = 274

18 
ACCOUTING
 = 271

19 
CAPABILITIES_EXCHANGE
 = 257

20 
DEVICE_WATCHDOG
 = 280

21 
DISCONNECT_PEER
 = 282

22 
RE_AUTH
 = 258

23 
SESSION_TERMINATION
 = 275

26 
˛ass
 
	$Dümëî
(
dpkt
.
Packë
):

29 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

31 
Aâribuãs
:

32 
__hdr__
: 
Hódî
 
fõlds
 
of
 
Dümëî
.

33 
TODO
.

36 
__hdr__
 = (

46 @
¥›îty


47 
def
 
	$ªque°_Êag
(
£lf
):

48  (
£lf
.
Êags
 >> 7) & 0x1

50 @
ªque°_Êag
.
£âî


51 
def
 
	$ªque°_Êag
(
£lf
, 
r
):

52 
£lf
.
Êags
 = (£lf.Êag†& ~0x80Ë| ((
r
 & 0x1) << 7)

54 @
¥›îty


55 
def
 
	$¥oxübÀ_Êag
(
£lf
):

56  (
£lf
.
Êags
 >> 6) & 0x1

58 @
¥oxübÀ_Êag
.
£âî


59 
def
 
	$¥oxübÀ_Êag
(
£lf
, 
p
):

60 
£lf
.
Êags
 = (£lf.Êag†& ~0x40Ë| ((
p
 & 0x1) << 6)

62 @
¥›îty


63 
def
 
	$îr‹_Êag
(
£lf
):

64  (
£lf
.
Êags
 >> 5) & 0x1

66 @
îr‹_Êag
.
£âî


67 
def
 
	$îr‹_Êag
(
£lf
, 
e
):

68 
£lf
.
Êags
 = (£lf.Êag†& ~0x20Ë| ((
e
 & 0x1) << 5)

70 @
¥›îty


71 
def
 
	$ªå™smô_Êag
(
£lf
):

72  (
£lf
.
Êags
 >> 4) & 0x1

74 @
ªå™smô_Êag
.
£âî


75 
def
 
	$ªå™smô_Êag
(
£lf
, 
t
):

76 
£lf
.
Êags
 = (£lf.Êag†& ~0x10Ë| ((
t
 & 0x1) << 4)

78 
def
 
	$u≈ack
(
£lf
, 
buf
):

79 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

80 
£lf
.
cmd
 = (
	`com∑t_‹d
(self.cmd[0]) << 16) | \

81 (
	`com∑t_‹d
(
£lf
.
cmd
[1]) << 8) | \

82 (
	$com∑t_‹d
(
£lf
.
cmd
[2]))

83 
£lf
.
Àn
 = (
	`com∑t_‹d
(self.len[0]) << 16) | \

84 (
	`com∑t_‹d
(
£lf
.
Àn
[1]) << 8) | \

85 (
	$com∑t_‹d
(
£lf
.
Àn
[2]))

86 
£lf
.
d©a
 = sñf.d©a[:£lf.
Àn
 - sñf.
__hdr_Àn__
]

88 
l
 = []

89 
£lf
.
d©a
:

90 
avp
 = 
	$AVP
(
£lf
.
d©a
)

91 
l
.
	$≠≥nd
(
avp
)

92 
£lf
.
d©a
 = sñf.d©a[
	$Àn
(
avp
):]

93 
£lf
.
d©a
 = sñf.
avps
 = 
l


95 
def
 
	$∑ck_hdr
(
£lf
):

96 
£lf
.
Àn
 = .
	`∑ck
("BBB", (self.len >> 16) & 0xff, (self.len >> 8) & 0xff, self.len & 0xff)

97 
£lf
.
cmd
 = .
	`∑ck
("BBB", (self.cmd >> 16) & 0xff, (self.cmd >> 8) & 0xff, self.cmd & 0xff)

98  
dpkt
.
Packë
.
	$∑ck_hdr
(
£lf
)

100 
def
 
	$__Àn__
(
£lf
):

101  
£lf
.
__hdr_Àn__
 + 
	`sum
(
	$m≠
(
Àn
, 
£lf
.
d©a
))

103 
def
 
	$__byãs__
(
£lf
):

104  
£lf
.
	`∑ck_hdr
(Ë+ 
b
''.
	`joö
(
	$m≠
(
byãs
, 
£lf
.
d©a
))

106 
˛ass
 
	$AVP
(
dpkt
.
Packë
):

107 
__hdr__
 = (

113 @
¥›îty


114 
def
 
	$víd‹_Êag
(
£lf
):

115  (
£lf
.
Êags
 >> 7) & 0x1

117 @
víd‹_Êag
.
£âî


118 
def
 
	$víd‹_Êag
(
£lf
, 
v
):

119 
£lf
.
Êags
 = (£lf.Êag†& ~0x80Ë| ((
v
 & 0x1) << 7)

121 @
¥›îty


122 
def
 
	$m™d©‹y_Êag
(
£lf
):

123  (
£lf
.
Êags
 >> 6) & 0x1

125 @
m™d©‹y_Êag
.
£âî


126 
def
 
	$m™d©‹y_Êag
(
£lf
, 
m
):

127 
£lf
.
Êags
 = (£lf.Êag†& ~0x40Ë| ((
m
 & 0x1) << 6)

129 @
¥›îty


130 
def
 
	$¥Ÿe˘ed_Êag
(
£lf
):

131  (
£lf
.
Êags
 >> 5) & 0x1

133 @
¥Ÿe˘ed_Êag
.
£âî


134 
def
 
	$¥Ÿe˘ed_Êag
(
£lf
, 
p
):

135 
£lf
.
Êags
 = (£lf.Êag†& ~0x20Ë| ((
p
 & 0x1) << 5)

137 
def
 
	$u≈ack
(
£lf
, 
buf
):

138 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

139 
£lf
.
Àn
 = (
	`com∑t_‹d
(self.len[0]) << 16) | \

140 (
	`com∑t_‹d
(
£lf
.
Àn
[1]) << 8) | \

141 (
	$com∑t_‹d
(
£lf
.
Àn
[2]))

143 
£lf
.
víd‹_Êag
:

144 
£lf
.
víd‹
 = .
	`u≈ack
('>I', sñf.
d©a
[:4])[0]

145 
£lf
.
d©a
 = sñf.d©a[4:£lf.
Àn
 - sñf.
__hdr_Àn__
]

147 
£lf
.
d©a
 = sñf.d©a[:£lf.
Àn
 - sñf.
__hdr_Àn__
]

149 
def
 
	$∑ck_hdr
(
£lf
):

150 
£lf
.
Àn
 = .
	`∑ck
("BBB", (self.len >> 16) & 0xff, (self.len >> 8) & 0xff, self.len & 0xff)

151 
d©a
 = 
dpkt
.
Packë
.
	$∑ck_hdr
(
£lf
)

152 
£lf
.
víd‹_Êag
:

153 
d©a
 +.
	`∑ck
('>I', 
£lf
.
víd‹
)

154  
d©a


156 
def
 
	$__Àn__
(
£lf
):

157 
Àngth
 = 
£lf
.
__hdr_Àn__
 + 
	$Àn
(
£lf
.
d©a
)

158 
£lf
.
víd‹_Êag
:

159 
Àngth
 += 4

160  
Àngth


163 
__s
 = 
b
'\x01\x00\x00\x28\x80\x00\x01\x18\x00\x00\x00\x00\x00\x00\x41\xc8\x00\x00\x00\x0c\x00\x00\x01\x08\x40\x00\x00\x0c\x68\x30\x30\x32\x00\x00\x01\x28\x40\x00\x00\x08'

164 
__t
 = 
b
'\x01\x00\x00\x2c\x80\x00\x01\x18\x00\x00\x00\x00\x00\x00\x41\xc8\x00\x00\x00\x0c\x00\x00\x01\x08\xc0\x00\x00\x10\xde\xad\xbe\xef\x68\x30\x30\x32\x00\x00\x01\x28\x40\x00\x00\x08'

167 
def
 
	$ã°_∑ck
():

168 
d
 = 
	$Dümëî
(
__s
)

169 
	`as£π
 (
__s
 =
	$byãs
(
d
))

170 
d
 = 
	$Dümëî
(
__t
)

171 
	`as£π
 (
__t
 =
	$byãs
(
d
))

174 
def
 
	$ã°_u≈ack
():

175 
d
 = 
	$Dümëî
(
__s
)

176 
	$as£π
 (
d
.
Àn
 == 40)

177 #as£π (
d
.
cmd
 =
DEVICE_WATCHDOG_REQUEST
)

178 
	$as£π
 (
d
.
ªque°_Êag
 == 1)

179 
	$as£π
 (
d
.
îr‹_Êag
 == 0)

180 
	`as£π
 (
	`Àn
(
d
.
avps
) == 2)

182 
avp
 = 
d
.
avps
[0]

183 #as£π (
avp
.
code
 =
ORIGIN_HOST
)

184 
	$as£π
 (
avp
.
m™d©‹y_Êag
 == 1)

185 
	$as£π
 (
avp
.
víd‹_Êag
 == 0)

186 
	$as£π
 (
avp
.
Àn
 == 12)

187 
	`as£π
 (
	`Àn
(
avp
) == 12)

188 
	`as£π
 (
avp
.
d©a
 =
b
'\x68\x30\x30\x32')

190 #Æsÿ
ã°
 
the
 
›ti⁄Æ
 
víd‹
 
id
 
suµ‹t


191 
d
 = 
	$Dümëî
(
__t
)

192 
	$as£π
 (
d
.
Àn
 == 44)

193 
avp
 = 
d
.
avps
[0]

194 
	$as£π
 (
avp
.
víd‹_Êag
 == 1)

195 
	$as£π
 (
avp
.
Àn
 == 16)

196 
	`as£π
 (
	`Àn
(
avp
) == 16)

197 
	$as£π
 (
avp
.
víd‹
 == 3735928559)

198 
	`as£π
 (
avp
.
d©a
 =
b
'\x68\x30\x30\x32')

201 
__«me__
 == '__main__':

202 
	$ã°_∑ck
()

203 
	$ã°_u≈ack
()

204 
	`¥öt
('Tests Successful...')

	@dns.py

1 #$Id: 
dns
.
py
 27 2006-11-21 01:22:52
Z
 
dahñdî
 
$


2 #-*- 
codög
: 
utf
-8 -*-

4 
‰om
 
__futuª__
 
imp‹t
 
¥öt_fun˘i⁄


5 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


7 
imp‹t
 

8 
imp‹t
 
codecs


10 
	g‰om
 . 
imp‹t
 
dpkt


11 
	g‰om
 .
dec‹©‹s
 
imp‹t
 
dïªˇãd


12 
	g‰om
 .
com∑t
 
imp‹t
 
com∑t_‹d


14 
	gDNS_Q
 = 0

15 
DNS_R
 = 1

18 
DNS_QUERY
 = 0

19 
DNS_IQUERY
 = 1

20 
DNS_STATUS
 = 2

21 
DNS_NOTIFY
 = 4

22 
DNS_UPDATE
 = 5

25 
DNS_CD
 = 0x0010 #checkög 
dißbÀd


26 
DNS_AD
 = 0x0020 #authítiˇãd 
d©a


27 
DNS_Z
 = 0x0040 #unused

28 
DNS_RA
 = 0x0080 #ªcursi⁄ 
avaûabÀ


29 
DNS_RD
 = 0x0100 #ªcursi⁄ 
desúed


30 
DNS_TC
 = 0x0200 #truncated

31 
DNS_AA
 = 0x0400 #auth‹ô©ivê
™swî


32 
DNS_QR
 = 0x8000 #ª•⁄£ ( 
quîy
 / 
ª•⁄£
 )

34 #Re•⁄£ 
codes


35 
DNS_RCODE_NOERR
 = 0

36 
DNS_RCODE_FORMERR
 = 1

37 
DNS_RCODE_SERVFAIL
 = 2

38 
DNS_RCODE_NXDOMAIN
 = 3

39 
DNS_RCODE_NOTIMP
 = 4

40 
DNS_RCODE_REFUSED
 = 5

41 
DNS_RCODE_YXDOMAIN
 = 6

42 
DNS_RCODE_YXRRSET
 = 7

43 
DNS_RCODE_NXRRSET
 = 8

44 
DNS_RCODE_NOTAUTH
 = 9

45 
DNS_RCODE_NOTZONE
 = 10

47 #RR 
ty≥s


48 
DNS_A
 = 1

49 
DNS_NS
 = 2

50 
DNS_CNAME
 = 5

51 
DNS_SOA
 = 6

52 
DNS_NULL
 = 10

53 
DNS_PTR
 = 12

54 
DNS_HINFO
 = 13

55 
DNS_MX
 = 15

56 
DNS_TXT
 = 16

57 
DNS_AAAA
 = 28

58 
DNS_SRV
 = 33

59 
DNS_OPT
 = 41

61 #RR 
˛as£s


62 
DNS_IN
 = 1

63 
DNS_CHAOS
 = 3

64 
DNS_HESIOD
 = 4

65 
DNS_ANY
 = 255

68 
def
 
	$∑ck_«me
(
«me
, 
off
, 
œbñ_±rs
):

69 
«me
 = 
codecs
.
	`ícode
(name, 'utf-8')

70 
«me
:

71 
œbñs
 = 
«me
.
	`•lô
(
b
'.')

73 
œbñs
 = []

74 
œbñs
.
	`≠≥nd
(
b
'')

75 
buf
 = 
b
''

76 
i
, 
œbñ
 
ö
 
	$íumî©e
(
œbñs
):

77 
key
 = 
b
'.'.
	`joö
(
œbñs
[
i
:]).
	$uµî
()

78 
±r
 = 
œbñ_±rs
.
	$gë
(
key
)

79 
nŸ
 
±r
:

80 
	`Àn
(
key
) > 1:

81 
±r
 = 
off
 + 
	$Àn
(
buf
)

82 
±r
 < 0xc000:

83 
œbñ_±rs
[
key
] = 
±r


84 
i
 = 
	$Àn
(
œbñ
)

85 
buf
 +.
	`∑ck
("B", 
i
Ë+ 
œbñ


87 
buf
 +.
	`∑ck
('>H', (0xc000 | 
±r
))

89  
buf


92 
def
 
	$u≈ack_«me
(
buf
, 
off
):

93 
«me
 = []

94 
ßved_off
 = 0

95 
°¨t_off
 = 
off


96 
«me_Àngth
 = 0

97 
True
:

98 
off
 >
	$Àn
(
buf
):

99 
øi£
 
dpkt
.
	$NìdD©a
()

100 
n
 = 
	$com∑t_‹d
(
buf
[
off
])

101 
n
 == 0:

102 
off
 += 1

104 
	`ñif
 (
n
 & 0xc0) == 0xc0:

105 
±r
 = .
	`u≈ack
('>H', 
buf
[
off
:off + 2])[0] & 0x3fff

106 
±r
 >
°¨t_off
:

107 
øi£
 
dpkt
.
	`U≈ackEº‹
('InvalidÜabel compressionÖointer')

108 
off
 += 2

109 
nŸ
 
ßved_off
:

110 
ßved_off
 = 
off


111 
°¨t_off
 = 
off
 = 
±r


112 
	`ñif
 (
n
 & 0xc0) == 0x00:

113 
off
 += 1

114 
«me
.
	`≠≥nd
(
buf
[
off
:of‡+ 
n
])

115 
«me_Àngth
 +
n
 + 1

116 
«me_Àngth
 > 255:

117 
øi£
 
dpkt
.
	`U≈ackEº‹
('nameÜongerÅhan 255 bytes')

118 
off
 +
n


120 
øi£
 
dpkt
.
	`U≈ackEº‹
('InvÆidÜabñÜígth %02x' % 
n
)

121 
nŸ
 
ßved_off
:

122 
ßved_off
 = 
off


123  
codecs
.
	`decode
(
b
'.'.
	`joö
(
«me
), 'utf-8'), 
ßved_off


126 
˛ass
 
	$DNS
(
dpkt
.
Packë
):

129 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

131 
Aâribuãs
:

132 
__hdr__
: 
Hódî
 
fõlds
 
of
 
DNS
.

133 
TODO
.

136 
__hdr__
 = (

138 ('›', 'H', 
DNS_RD
), #ªcursivê
quîy


139 #XXX - 
li°s
 
of
 
quîy
, 
RR
 
obje˘s


146 @
¥›îty


147 
def
 
	$qr
(
£lf
):

148  ((
£lf
.
›
 & 
DNS_QR
) == DNS_QR)

150 @
qr
.
£âî


151 
def
 
	$qr
(
£lf
, 
v
):

152 
v
:

153 
£lf
.
›
 |
DNS_QR


155 
£lf
.
›
 &~
DNS_QR


157 @
¥›îty


158 
def
 
	$›code
(
£lf
):

159  (
£lf
.
›
 >> 11) & 0xf

161 @
›code
.
£âî


162 
def
 
	$›code
(
£lf
, 
v
):

163 
£lf
.
›
 = (£lf.› & ~0x7800Ë| ((
v
 & 0xf) << 11)

165 @
¥›îty


166 
def
 
	$Ø
(
£lf
):

167  ((
£lf
.
›
 & 
DNS_AA
) == DNS_AA)

169 @
Ø
.
£âî


170 
def
 
	$Ø
(
£lf
, 
v
):

171 
v
:

172 
£lf
.
›
 |
DNS_AA


174 
£lf
.
›
 &~
DNS_AA


176 @
¥›îty


177 
def
 
	$tc
(
£lf
):

178  ((
£lf
.
›
 & 
DNS_TC
) == DNS_TC)

180 @
tc
.
£âî


181 
def
 
	$tc
(
£lf
, 
v
):

182 
v
:

183 
£lf
.
›
 |
DNS_TC


185 
£lf
.
›
 &~
DNS_TC


187 @
¥›îty


188 
def
 
	$rd
(
£lf
):

189  ((
£lf
.
›
 & 
DNS_RD
) == DNS_RD)

191 @
rd
.
£âî


192 
def
 
	$rd
(
£lf
, 
v
):

193 
v
:

194 
£lf
.
›
 |
DNS_RD


196 
£lf
.
›
 &~
DNS_RD


198 @
¥›îty


199 
def
 
	$ø
(
£lf
):

200  ((
£lf
.
›
 & 
DNS_RA
) == DNS_RA)

202 @
ø
.
£âî


203 
def
 
	$ø
(
£lf
, 
v
):

204 
v
:

205 
£lf
.
›
 |
DNS_RA


207 
£lf
.
›
 &~
DNS_RA


209 @
¥›îty


210 
def
 
	$zîo
(
£lf
):

211  ((
£lf
.
›
 & 
DNS_Z
) == DNS_Z)

213 @
zîo
.
£âî


214 
def
 
	$zîo
(
£lf
, 
v
):

215 
v
:

216 
£lf
.
›
 |
DNS_Z


218 
£lf
.
›
 &~
DNS_Z


220 @
¥›îty


221 
def
 
	$rcode
(
£lf
):

222  
£lf
.
›
 & 0xf

224 @
rcode
.
£âî


225 
def
 
	$rcode
(
£lf
, 
v
):

226 
£lf
.
›
 = (£lf.› & ~0xfË| (
v
 & 0xf)

228 
˛ass
 
	$Q
(
dpkt
.
Packë
):

230 
__hdr__
 = (

231 ('«me', '1025s', 
b
''),

232 ('ty≥', 'H', 
DNS_A
),

233 ('˛s', 'H', 
DNS_IN
)

236 #XXX - 
suk


237 
def
 
	$__Àn__
(
£lf
):

238 
øi£
 
NŸIm∂emíãdEº‹


240 
__°r__
 = 
__Àn__


242 
def
 
	$u≈ack
(
£lf
, 
buf
):

243 
øi£
 
NŸIm∂emíãdEº‹


245 
˛ass
 
	$RR
(
Q
):

247 
__hdr__
 = (

248 ('«me', '1025s', 
b
''),

249 ('ty≥', 'H', 
DNS_A
),

250 ('˛s', 'H', 
DNS_IN
),

253 ('rd©a', 's', 
b
'')

256 
def
 
	$∑ck_rd©a
(
£lf
, 
off
, 
œbñ_±rs
):

257 #XXX - 
yóh
, 
this
 
sux


258 
£lf
.
rd©a
:

259  
£lf
.
rd©a


260 
£lf
.
ty≥
 =
DNS_A
:

261  
£lf
.
ù


262 
ñif
 
£lf
.
ty≥
 =
DNS_NS
:

263  
	$∑ck_«me
(
£lf
.
n¢ame
, 
off
, 
œbñ_±rs
)

264 
ñif
 
£lf
.
ty≥
 =
DNS_CNAME
:

265  
	$∑ck_«me
(
£lf
.
˙ame
, 
off
, 
œbñ_±rs
)

266 
ñif
 
£lf
.
ty≥
 =
DNS_PTR
:

267  
	$∑ck_«me
(
£lf
.
±∫ame
, 
off
, 
œbñ_±rs
)

268 
ñif
 
£lf
.
ty≥
 =
DNS_SOA
:

269 
l
 = []

270 
l
.
	`≠≥nd
(
	$∑ck_«me
(
£lf
.
m«me
, 
off
, 
œbñ_±rs
))

271 
l
.
	`≠≥nd
(
	`∑ck_«me
(
£lf
.
∫ame
, 
off
 + 
	`Àn
÷[0]), 
œbñ_±rs
))

272 
l
.
	`≠≥nd
(.
	`∑ck
('>IIIII', 
£lf
.
£rül
, sñf.
ª‰esh
,

273 
£lf
.
ªåy
, sñf.
expúe
, sñf.
möimum
))

274  
b
''.
	$joö
(
l
)

275 
ñif
 
£lf
.
ty≥
 =
DNS_MX
:

276  .
	`∑ck
('>H', 
£lf
.
¥e„ªn˚
) + \

277 
	`∑ck_«me
(
£lf
.
mx«me
, 
off
 + 2, 
œbñ_±rs
)

278 
ñif
 
£lf
.
ty≥
 =
DNS_TXT
 
‹
 sñf.ty≥ =
DNS_HINFO
:

279  
b
''.
	`joö
(.
	`∑ck
('B', 
	`Àn
(
x
)Ë+ x x 
ö
 
£lf
.
ãxt
)

280 
ñif
 
£lf
.
ty≥
 =
DNS_AAAA
:

281  
£lf
.
ù6


282 
ñif
 
£lf
.
ty≥
 =
DNS_SRV
:

283  .
	`∑ck
('>HHH', 
£lf
.
¥i‹ôy
, sñf.
weight
, sñf.
p‹t
) + \

284 
	`∑ck_«me
(
£lf
.
§v«me
, 
off
 + 6, 
œbñ_±rs
)

285 
ñif
 
£lf
.
ty≥
 =
DNS_OPT
:

286  
b
'' #£lf.
rd©a


288 
øi£
 
dpkt
.
	`PackEº‹
('RRÅy≥ %†i†nŸ suµ‹ãd' % 
£lf
.
ty≥
)

290 
def
 
	$u≈ack_rd©a
(
£lf
, 
buf
, 
off
):

291 
£lf
.
ty≥
 =
DNS_A
:

292 
£lf
.
ù
 = sñf.
rd©a


293 
ñif
 
£lf
.
ty≥
 =
DNS_NS
:

294 
£lf
.
n¢ame
, 
off
 = 
	$u≈ack_«me
(
buf
, 
off
)

295 
ñif
 
£lf
.
ty≥
 =
DNS_CNAME
:

296 
£lf
.
˙ame
, 
off
 = 
	$u≈ack_«me
(
buf
, 
off
)

297 
ñif
 
£lf
.
ty≥
 =
DNS_PTR
:

298 
£lf
.
±∫ame
, 
off
 = 
	$u≈ack_«me
(
buf
, 
off
)

299 
ñif
 
£lf
.
ty≥
 =
DNS_SOA
:

300 
£lf
.
m«me
, 
off
 = 
	$u≈ack_«me
(
buf
, 
off
)

301 
£lf
.
∫ame
, 
off
 = 
	$u≈ack_«me
(
buf
, 
off
)

302 
£lf
.
£rül
, sñf.
ª‰esh
, sñf.
ªåy
, sñf.
expúe
, \

303 
£lf
.
möimum
 = .
	`u≈ack
('>IIIII', 
buf
[
off
:off + 20])

304 
ñif
 
£lf
.
ty≥
 =
DNS_MX
:

305 
£lf
.
¥e„ªn˚
 = .
	`u≈ack
('>H', sñf.
rd©a
[:2])

306 
£lf
.
mx«me
, 
off
 = 
	`u≈ack_«me
(
buf
, off + 2)

307 
ñif
 
£lf
.
ty≥
 =
DNS_TXT
 
‹
 sñf.ty≥ =
DNS_HINFO
:

308 
£lf
.
ãxt
 = []

309 
buf
 = 
£lf
.
rd©a


310 
buf
:

311 
n
 = 
	$com∑t_‹d
(
buf
[0])

312 
£lf
.
ãxt
.
	`≠≥nd
(
codecs
.
	`decode
(
buf
[1:1 + 
n
], 'utf-8'))

313 
buf
 = buf[1 + 
n
:]

314 
ñif
 
£lf
.
ty≥
 =
DNS_AAAA
:

315 
£lf
.
ù6
 = sñf.
rd©a


316 
ñif
 
£lf
.
ty≥
 =
DNS_NULL
:

317 
£lf
.
nuŒ
 = 
codecs
.
	`ícode
(£lf.
rd©a
, 'hex')

318 
ñif
 
£lf
.
ty≥
 =
DNS_SRV
:

319 
£lf
.
¥i‹ôy
, sñf.
weight
, sñf.
p‹t
 = .
	`u≈ack
('>HHH', sñf.
rd©a
[:6])

320 
£lf
.
§v«me
, 
off
 = 
	`u≈ack_«me
(
buf
, off + 6)

321 
ñif
 
£lf
.
ty≥
 =
DNS_OPT
:

322 
∑ss
 #RFC-6891: 
OPT
 
is
 
a
 
p£udo
-
RR
 
nŸ
 
ˇºyög
 
™y
 
DNS
 
d©a


324 
øi£
 
dpkt
.
	`U≈ackEº‹
('RRÅy≥ %†i†nŸ suµ‹ãd' % 
£lf
.
ty≥
)

326 
def
 
	$∑ck_q
(
£lf
, 
buf
, 
q
):

328  
buf
 + 
	`∑ck_«me
(
q
.
«me
, 
	`Àn
(buf), 
£lf
.
œbñ_±rs
Ë+ .
	`∑ck
('>HH', q.
ty≥
, q.
˛s
)

330 
def
 
	$u≈ack_q
(
£lf
, 
buf
, 
off
):

332 
q
 = 
£lf
.
	$Q
()

333 
q
.
«me
, 
off
 = 
	$u≈ack_«me
(
buf
, 
off
)

334 
q
.
ty≥
, q.
˛s
 = .
	`u≈ack
('>HH', 
buf
[
off
:off + 4])

335 
off
 += 4

336  
q
, 
off


338 
def
 
	$∑ck_º
(
£lf
, 
buf
, 
º
):

340 
«me
 = 
	`∑ck_«me
(
º
.«me, 
	`Àn
(
buf
), 
£lf
.
œbñ_±rs
)

341 
rd©a
 = 
º
.
	`∑ck_rd©a
(
	`Àn
(
buf
Ë+Üí(
«me
Ë+ 10, 
£lf
.
œbñ_±rs
)

342  
buf
 + 
«me
 + .
	`∑ck
('>HHIH', 
º
.
ty≥
,Ñr.
˛s
,Ñr.
âl
, 
	`Àn
(
rd©a
)) +Ñdata

344 
def
 
	$u≈ack_º
(
£lf
, 
buf
, 
off
):

346 
º
 = 
£lf
.
	$RR
()

347 
º
.
«me
, 
off
 = 
	$u≈ack_«me
(
buf
, 
off
)

348 
º
.
ty≥
,Ñr.
˛s
,Ñr.
âl
, 
rdÀn
 = .
	`u≈ack
('>HHIH', 
buf
[
off
:off + 10])

349 
off
 += 10

350 
º
.
rd©a
 = 
buf
[
off
:of‡+ 
rdÀn
]

351 
º
.
æí
 = 
rdÀn


352 
º
.
	$u≈ack_rd©a
(
buf
, 
off
)

353 
off
 +
rdÀn


354  
º
, 
off


356 
def
 
	$u≈ack
(
£lf
, 
buf
):

357 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

358 
off
 = 
£lf
.
__hdr_Àn__


359 
˙t
 = 
£lf
.
qd
 #FIXME: 
This
 
ªlõs
 
⁄
 
this
 
beög
 
¥›îly
 
£t
 
somewhîe
 

360 
£lf
.
qd
 = []

361 
_
 
ö
 
	$ønge
(
˙t
):

362 
q
, 
off
 = 
£lf
.
	$u≈ack_q
(
buf
, 
off
)

363 
£lf
.
qd
.
	$≠≥nd
(
q
)

364 
x
 
	`ö
 ('an', 'ns', 'ar'):

365 
˙t
 = 
	$gë©å
(
£lf
, 
x
, 0)

366 
	$£èâr
(
£lf
, 
x
, [])

367 
_
 
ö
 
	$ønge
(
˙t
):

368 
º
, 
off
 = 
£lf
.
	$u≈ack_º
(
buf
, 
off
)

369 
	`gë©å
(
£lf
, 
x
).
	$≠≥nd
(
º
)

370 
£lf
.
d©a
 = 
b
''

372 
def
 
	$__Àn__
(
£lf
):

373 #XXX - 
c›
 
out


374  
	`Àn
(
	$byãs
(
£lf
))

376 
def
 
	$__byãs__
(
£lf
):

377 #XXX - 
com¥ess
 
«mes
 
⁄
 
the
 
Êy


378 
£lf
.
œbñ_±rs
 = {
	}
}

379 
buf
 = .
∑ck
(
£lf
.
__hdr_fmt__
, sñf.
id
, sñf.
›
, 
Àn
(£lf.
qd
),

380 
Àn
(
£lf
.
™
),Üí(£lf.
ns
), 
	$Àn
(
£lf
.
¨
))

381 
q
 
ö
 
£lf
.
qd
:

382 
buf
 = 
£lf
.
	$∑ck_q
(
buf
, 
q
)

383 
x
 
	`ö
 ('an', 'ns', 'ar'):

384 
º
 
ö
 
	$gë©å
(
£lf
, 
x
):

385 
buf
 = 
£lf
.
	$∑ck_º
(
buf
, 
º
)

386 
dñ
 
£lf
.
œbñ_±rs


387  
buf


390 
def
 
	$ã°_basic
():

391 
‰om
 . 
imp‹t
 
ù


393 
s
 = 
b
'E\x00\x02\x08\xc15\x00\x00\x80\x11\x92aBk0\x01Bk0w\x005\xc07\x01\xf4\xda\xc2d\xd2\x81\x80\x00\x01\x00\x03\x00\x0b\x00\x0b\x03www\x06google\x03com\x00\x00\x01\x00\x01\xc0\x0c\x00\x05\x00\x01\x00\x00\x03V\x00\x17\x03www\x06google\x06akadns\x03net\x00\xc0,\x00\x01\x00\x01\x00\x00\x01\xa3\x00\x04@\xe9\xabh\xc0,\x00\x01\x00\x01\x00\x00\x01\xa3\x00\x04@\xe9\xabc\xc07\x00\x02\x00\x01\x00\x00KG\x00\x0c\x04usw5\x04akam\xc0>\xc07\x00\x02\x00\x01\x00\x00KG\x00\x07\x04usw6\xc0t\xc07\x00\x02\x00\x01\x00\x00KG\x00\x07\x04usw7\xc0t\xc07\x00\x02\x00\x01\x00\x00KG\x00\x08\x05asia3\xc0t\xc07\x00\x02\x00\x01\x00\x00KG\x00\x05\x02za\xc07\xc07\x00\x02\x00\x01\x00\x00KG\x00\x0f\x02zc\x06akadns\x03org\x00\xc07\x00\x02\x00\x01\x00\x00KG\x00\x05\x02zf\xc07\xc07\x00\x02\x00\x01\x00\x00KG\x00\x05\x02zh\xc0\xd5\xc07\x00\x02\x00\x01\x00\x00KG\x00\x07\x04eur3\xc0t\xc07\x00\x02\x00\x01\x00\x00KG\x00\x07\x04use2\xc0t\xc07\x00\x02\x00\x01\x00\x00KG\x00\x07\x04use4\xc0t\xc0\xc1\x00\x01\x00\x01\x00\x00\xfb4\x00\x04\xd0\xb9\x84\xb0\xc0\xd2\x00\x01\x00\x01\x00\x001\x0c\x00\x04?\xf1\xc76\xc0\xed\x00\x01\x00\x01\x00\x00\xfb4\x00\x04?\xd7\xc6S\xc0\xfe\x00\x01\x00\x01\x00\x001\x0c\x00\x04?\xd00.\xc1\x0f\x00\x01\x00\x01\x00\x00\n\xdf\x00\x04\xc1-\x01g\xc1"\x00\x01\x00\x01\x00\x00\x101\x00\x04?\xd1\xaa\x88\xc15\x00\x01\x00\x01\x00\x00\r\x1a\x00\x04PCC\xb6\xc0o\x00\x01\x00\x01\x00\x00\x10\x7f\x00\x04?\xf1I\xd6\xc0\x87\x00\x01\x00\x01\x00\x00\n\xdf\x00\x04\xce\x84dl\xc0\x9a\x00\x01\x00\x01\x00\x00\n\xdf\x00\x04A\xcb\xea\x1b\xc0\xad\x00\x01\x00\x01\x00\x00\x0b)\x00\x04\xc1l\x9a\t'

394 
ù
 = ip.
	$IP
(
s
)

395 
my_dns
 = 
	$DNS
(
ù
.
udp
.
d©a
)

396 
as£π
 
my_dns
.
qd
[0].
«me
 ='www.googÀ.com' 
™d
 my_dns.
™
[1].name == 'www.google.akadns.net'

397 
s
 = 
b
'\x05\xf5\x01\x00\x00\x01\x00\x00\x00\x00\x00\x00\x03www\x03cnn\x03com\x00\x00\x01\x00\x01'

398 
my_dns
 = 
	$DNS
(
s
)

399 
as£π
 
s
 =
	$byãs
(
my_dns
)

402 
def
 
	$ã°_PTR
():

403 
s
 = 
b
'g\x02\x81\x80\x00\x01\x00\x01\x00\x03\x00\x00\x011\x011\x03211\x03141\x07in-addr\x04arpa\x00\x00\x0c\x00\x01\xc0\x0c\x00\x0c\x00\x01\x00\x00\r6\x00$\x07default\nv-umce-ifs\x05umnet\x05umich\x03edu\x00\xc0\x0e\x00\x02\x00\x01\x00\x00\r6\x00\r\x06shabby\x03ifs\xc0O\xc0\x0e\x00\x02\x00\x01\x00\x00\r6\x00\x0f\x0cfish-license\xc0m\xc0\x0e\x00\x02\x00\x01\x00\x00\r6\x00\x0b\x04dns2\x03itd\xc0O'

404 
my_dns
 = 
	$DNS
(
s
)

405 
as£π
 
my_dns
.
qd
[0].
«me
 ='1.1.211.141.ö-addr.¨∑' 
™d
 \

406 
my_dns
.
™
[0].
±∫ame
 ='deÁu….v-um˚-ifs.um√t.umich.edu' 
™d
 \

407 
my_dns
.
ns
[0].
n¢ame
 ='shabby.ifs.umich.edu' 
™d
 \

408 
my_dns
.
ns
[1].
âl
 =3382 
™d
 \

409 
my_dns
.
ns
[2].
n¢ame
 == 'dns2.itd.umich.edu'

410 
as£π
 
s
 =
	$byãs
(
my_dns
)

413 
def
 
	$ã°_OPT
():

414 
s
 = 
b
'\x8dn\x01\x10\x00\x01\x00\x00\x00\x00\x00\x01\x04x111\x06xxxx11\x06akamai\x03net\x00\x00\x01\x00\x01\x00\x00)\x0f\xa0\x00\x00\x80\x00\x00\x00'

415 
my_dns
 = 
	$DNS
(
s
)

416 
my_º
 = 
my_dns
.
¨
[0]

417 
as£π
 
my_º
.
ty≥
 =
DNS_OPT


418 
as£π
 
my_º
.
æí
 =0 
™d
 my_º.
rd©a
 =
b
''

419 
as£π
 
	`byãs
(
my_dns
Ë=
s


421 
my_º
.
rd©a
 = 
b
'\x00\x00\x00\x02\x00\x00' #add 1 
©åibuã
 
év


422 
my_dns2
 = 
	`DNS
(
	$byãs
(
my_dns
))

423 
my_º2
 = 
my_dns2
.
¨
[0]

424 
as£π
 
my_º2
.
æí
 =6 
™d
 my_º2.
rd©a
 =
b
'\x00\x00\x00\x02\x00\x00'

427 
def
 
	$ã°_∑ck_«me
():

428 #Em±y 
«me
 
is
 \0

429 
x
 = 
	`∑ck_«me
('', 0, {
	}
})

430 
as£π
 
	gx
 =
b
'\0'

433 
def
 
	$ã°_øndom_d©a
():

434 
åy
:

435 
	`DNS
(
b
'\x83z0\xd2\x9a\xec\x94_7\xf3\xb7+\x85"?\xf0\xfb')

436 
ex˚±
 
dpkt
.
U≈ackEº‹
:

437 
∑ss


438 
ex˚±
:

439 
as£π
 
FÆ£


441 
as£π
 
FÆ£


444 
def
 
	$ã°_cúcuœr_poöãrs
():

445 
åy
:

446 
	`DNS
(
b
'\xc0\x00\x01\x00\x00\x01\x00\x00\x00\x00\x00\x00\x07example\x03com\xc0\x00')

447 
ex˚±
 
dpkt
.
U≈ackEº‹
:

448 
∑ss


449 
ex˚±
:

450 
as£π
 
FÆ£


452 
as£π
 
FÆ£


455 
def
 
	$ã°_vîy_l⁄g_«me
():

456 
åy
:

457 
	`DNS
(
b
'\x00\x00\x01\x00\x00\x01\x00\x00\x00\x00\x00\x00' + (b'\x10abcdef0123456789' * 16) + b'\x00')

458 
ex˚±
 
dpkt
.
U≈ackEº‹
:

459 
∑ss


460 
ex˚±
:

461 
as£π
 
FÆ£


463 
as£π
 
FÆ£


466 
def
 
	$ã°_nuŒ_ª•⁄£
():

467 
s
 = 
b
'\x12\xb0\x84\x00\x00\x01\x00\x01\x00\x00\x00\x00\x0bblahblah666\x06pirate\x03sea\x00\x00\n\x00\x01\xc0\x0c\x00\n\x00\x01\x00\x00\x00\x00\x00\tVACKD\x03\xc5\xe9\x01'

468 
my_dns
 = 
	$DNS
(
s
)

469 
as£π
 
my_dns
.
qd
[0].
«me
 ='bœhbœh666.pú©e.£a' 
™d
 \

470 
my_dns
.
™
[0].
nuŒ
 =
b
'5641434b4403c5e901'

471 
as£π
 
	`°r
(
s
Ë=
	$°r
(
my_dns
)

474 
def
 
	$ã°_txt_ª•⁄£
():

475 
buf
 = (

476 
b
'\x10\x32\x81\x80\x00\x01\x00\x01\x00\x00\x00\x00\x06\x67\x6f\x6f\x67\x6c\x65\x03\x63\x6f'

477 
b
'\x6d\x00\x00\x10\x00\x01\xc0\x0c\x00\x10\x00\x01\x00\x00\x01\x0e\x00\x10\x0f\x76\x3d\x73'

478 
b
'\x70\x66\x31\x20\x70\x74\x72\x20\x3f\x61\x6c\x6c')

479 
my_dns
 = 
	$DNS
(
buf
)

480 
my_º
 = 
my_dns
.
™
[0]

481 
as£π
 
my_º
.
ty≥
 =
DNS_TXT


482 
as£π
 
my_º
.
«me
 == 'google.com'

483 
as£π
 
my_º
.
ãxt
 == ['v=spf1Ötr ?all']

484 
as£π
 
	`°r
(
my_dns
Ë=
	$°r
(
buf
)

485 
as£π
 
	`byãs
(
my_dns
Ë=
buf


488 
def
 
	$ã°_rd©a_TXT
():

489 
º
 = 
DNS
.
	`RR
(

490 
ty≥
=
DNS_TXT
,

491 
ãxt
=[
b
'v=spf1Ötr ?all', b'a=something']

493 
∑ckd©a
 = 
º
.
	`∑ck_rd©a
(0, {
	}
})

494 
	gc‹ª˘
 = 
b
'\x0fv=spf1Ötr ?all\x0ba=something'

495 
as£π
 
∑ckd©a
 =
c‹ª˘


498 
def
 
	$ã°_rd©a_HINFO
():

499 
º
 = 
DNS
.
	`RR
(

500 
ty≥
=
DNS_HINFO
,

501 
ãxt
=[
b
'v=spf1Ötr ?all', b'a=something']

503 
∑ckd©a
 = 
º
.
	`∑ck_rd©a
(0, {
	}
})

504 
	gc‹ª˘
 = 
b
'\x0fv=spf1Ötr ?all\x0ba=something'

505 
as£π
 
∑ckd©a
 =
c‹ª˘


508 
def
 
	$ã°_dns_Àn
():

509 
my_dns
 = 
	$DNS
()

510 
as£π
 
	`Àn
(
my_dns
) == 12

513 
__«me__
 == '__main__':

514 #Run†
Æl
 
the
 
ã°
 
assocüãd
 
wôh
 
this
 
˛ass
/
fûe


515 
	$ã°_basic
()

516 
	$ã°_PTR
()

517 
	$ã°_OPT
()

518 
	$ã°_∑ck_«me
()

519 
	$ã°_øndom_d©a
()

520 
	$ã°_cúcuœr_poöãrs
()

521 
	$ã°_vîy_l⁄g_«me
()

522 
	$ã°_nuŒ_ª•⁄£
()

523 
	$ã°_txt_ª•⁄£
()

524 
	$ã°_dïªˇãd_mëhods
()

525 
	$ã°_dïªˇãd_mëhod_≥rf‹m™˚
()

526 
	`¥öt
('Tests Successful...')

	@dpkt.py

1 #$Id: 
dpkt
.
py
 43 2007-08-02 22:42:59
Z
 
j⁄
.
obîheide
 
$


2 #-*- 
codög
: 
utf
-8 -*-

4 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


6 
imp‹t
 
c›y


7 
imp‹t
 
ôîtoﬁs


8 
imp‹t
 
sockë


9 
imp‹t
 

10 
imp‹t
 
¨øy


12 
	g‰om
 .
com∑t
 
imp‹t
 
	gcom∑t_‹d
, 
	gcom∑t_izù
, 
ôîôems


15 
˛ass
 
	$Eº‹
(
Ex˚±i⁄
):

16 
∑ss


19 
˛ass
 
	$U≈ackEº‹
(
Eº‹
):

20 
∑ss


23 
˛ass
 
	$NìdD©a
(
U≈ackEº‹
):

24 
∑ss


27 
˛ass
 
	$PackEº‹
(
Eº‹
):

28 
∑ss


31 
˛ass
 
	$_MëaPackë
(
ty≥
):

32 
def
 
	$__√w__
(
˛s
, 
˛¢ame
, 
˛sba£s
, 
˛sdi˘
):

33 
t
 = 
ty≥
.
	$__√w__
(
˛s
, 
˛¢ame
, 
˛sba£s
, 
˛sdi˘
)

34 
°
 = 
	`gë©å
(
t
, '__hdr__', 
N⁄e
)

35 
°
 
is
 
nŸ
 
N⁄e
:

36 #XXX - 
__¶Ÿs__
 
⁄ly
 
¸óãd
 
ö
 
	`__√w__
()

37 
˛sdi˘
['__¶Ÿs__'] = [
x
[0] x 
ö
 
°
] + ['data']

38 
t
 = 
ty≥
.
	$__√w__
(
˛s
, 
˛¢ame
, 
˛sba£s
, 
˛sdi˘
)

39 
t
.
__hdr_fõlds__
 = [
x
[0] x 
ö
 
°
]

40 
t
.
__hdr_fmt__
 = 
	`gë©å
—, '__byã_‹dî__', '>'Ë+ ''.
	$joö
([
x
[1] x 
ö
 
°
])

41 
t
.
__hdr_Àn__
 = .
	$ˇlcsize
(
t
.
__hdr_fmt__
)

42 
t
.
__hdr_deÁu…s__
 = 
	`di˘
(
	$com∑t_izù
(

43 
t
.
__hdr_fõlds__
, [
x
[2] x 
ö
 
°
]))

44  
t


47 
˛ass
 
	`Packë
(
	`_MëaPackë
("Temp", (
obje˘
,), {
	}
})):

50 
Aâribuãs
:

51 
__hdr__
: 
Packë
 
hódî
 
should
 
be
 
deföed
 
as
 
a
 
li°
 
of


52 (
«me
, 
	g°ru˘fmt
, Ë
	gtu∂es
.

53 
	g__byã_‹dî__
: 
Byã
 
‹dî
, 
ˇn
 
be
 
£t
 
to
 
ovîride
 
the
  ('>')

55 
	gExam∂e
:

56 >>> 
˛ass
 
	$Foo
(
Packë
):

57 ... 
__hdr__
 = (('foo', 'I', 1), ('bar', 'H', 2), ('baz', '4s', 'quux'))

59 >>> 
foo
 = 
	`Foo
(
b¨
=3)

60 >>> 
foo


61 
	`Foo
(
b¨
=3)

62 >>> 
	`°r
(
foo
)

64 >>> 
foo
.
b¨


66 >>> 
foo
.
baz


68 >>> 
foo
.foo = 7

69 >>> 
foo
.
baz
 = 'whee'

70 >>> 
foo


71 
	`Foo
(
baz
='whì', 
foo
=7, 
b¨
=3)

72 >>> 
	`Foo
('hello, world!')

73 
	`Foo
(
baz
=' w‹', 
foo
=1751477356L, 
b¨
=28460, 
d©a
='ld!')

76 
def
 
	$__öô__
(
£lf
, *
¨gs
, **
kw¨gs
):

79 
Argumíts
:

81 
buf
 -- 
›ti⁄Æ
 
∑ckë
 
buf„r
 
to
 
u≈ack


83 
O±i⁄Æ
 
keyw‹d
 
¨gumíts
 
c‹ª•⁄d
 
to
 
membîs
Åÿ
£t


84 (
m©chög
 
fõlds
 
ö
 
£lf
.
__hdr__
, 
‹
 'data').

86 
£lf
.
d©a
 = 
b
''

87 
¨gs
:

88 
åy
:

89 
£lf
.
	$u≈ack
(
¨gs
[0])

90 
ex˚±
 .
îr‹
:

91 
	`Àn
(
¨gs
[0]Ë< 
£lf
.
__hdr_Àn__
:

92 
øi£
 
NìdD©a


93 
øi£
 
	`U≈ackEº‹
('invalid %s: %r' %

94 (
£lf
.
__˛ass__
.
__«me__
, 
¨gs
[0]))

96 
k
 
ö
 
£lf
.
__hdr_fõlds__
:

97 
	`£èâr
(
£lf
, 
k
, 
c›y
.
	$c›y
(
£lf
.
__hdr_deÁu…s__
[
k
]))

98 
k
, 
v
 
ö
 
	$ôîôems
(
kw¨gs
):

99 
	$£èâr
(
£lf
, 
k
, 
v
)

101 
def
 
	$__Àn__
(
£lf
):

102  
£lf
.
__hdr_Àn__
 + 
	$Àn
(
£lf
.
d©a
)

104 
def
 
	$__gëôem__
(
£lf
, 
k
):

105 
åy
:

106  
	$gë©å
(
£lf
, 
k
)

107 
ex˚±
 
AâribuãEº‹
:

108 
øi£
 
KeyEº‹


110 
def
 
	$__ª¥__
(
£lf
):

111 #CﬁÀ˘ 
™d
 
di•œy
 
¥Ÿocﬁ
 
fõlds
 
ö
 
‹dî
:

112 #1. 
public
 
fõlds
 
deföed
 
ö
 
__hdr__
, 
u∆ess
 
theú
 
vÆue
 
is
 

113 #2. 
¥›îtõs
 
dîived
 
‰om
 
_¥iv©e
 
fõlds
 
deföed
 
ö
 
__hdr__


114 #3. 
dy«miˇŒy
 
added
 
fõlds
 
‰om
 
£lf
.
__di˘__
, 
u∆ess
 
they
 
¨e
 
_¥iv©e


115 #4. 
£lf
.
d©a
 
whí
 
ô
'sÖresent

117 
l
 = []

118 #maöèö 
‹dî
 
of
 
fõlds
 
as
 
deföed
 
ö
 
__hdr__


119 
fõld_«me
, 
_
, _ 
ö
 
	`gë©å
(
£lf
, '__hdr__', []):

120 
fõld_vÆue
 = 
	$gë©å
(
£lf
, 
fõld_«me
)

121 
fõld_vÆue
 !
£lf
.
__hdr_deÁu…s__
[
fõld_«me
]:

122 
fõld_«me
[0] != '_':

123 
l
.
	`≠≥nd
('%s=%r' % (
fõld_«me
, 
fõld_vÆue
)) #(1)

125 #öãΩªà
_¥iv©e
 
fõlds
 
as
 
«me
 
of
 
¥›îtõs
 
joöed
 
by
 
undîsc‹es


126 
¥›_«me
 
ö
 
fõld_«me
.
	`•lô
('_'): #(2)

127 
	`isö°™˚
(
	`gë©å
(
£lf
.
__˛ass__
, 
¥›_«me
, 
N⁄e
), 
¥›îty
):

128 
l
.
	`≠≥nd
('%s=%r' % (
¥›_«me
, 
	$gë©å
(
£lf
, 
¥›_«me
)))

130 
l
.
	`exãnd
(

131 ['%s=%r' % (
©å_«me
, 
©å_vÆue
)

132 
©å_«me
, 
©å_vÆue
 
ö
 
	$ôîôems
(
£lf
.
__di˘__
)

133 
©å_«me
[0] !'_' #ex˛udê
_¥iv©e
 
©åibuãs


134 
™d
 
©å_«me
 !
£lf
.
d©a
.
__˛ass__
.
__«me__
.
	`lowî
()]Ë#ex˛udê
fõlds
 
like
 
ù
.
udp


136 
£lf
.
d©a
:

137 
l
.
	`≠≥nd
('d©a=%r' % 
£lf
.
d©a
)

138  '%s(%s)' % (
£lf
.
__˛ass__
.
__«me__
, ', '.
	$joö
(
l
))

140 
def
 
	$__°r__
(
£lf
):

141  
	`°r
(
£lf
.
	$__byãs__
())

143 
def
 
	$__byãs__
(
£lf
):

144  
£lf
.
	`∑ck_hdr
(Ë+ 
	$byãs
(
£lf
.
d©a
)

146 
def
 
	$∑ck_hdr
(
£lf
):

148 
åy
:

149  .
	`∑ck
(
£lf
.
__hdr_fmt__
,

150 *[
	$gë©å
(
£lf
, 
k
Ëk 
ö
 sñf.
__hdr_fõlds__
])

151 
ex˚±
 .
îr‹
:

152 
vÆs
 = []

153 
k
 
ö
 
£lf
.
__hdr_fõlds__
:

154 
v
 = 
	$gë©å
(
£lf
, 
k
)

155 
	$isö°™˚
(
v
, 
tu∂e
):

156 
vÆs
.
	$exãnd
(
v
)

158 
vÆs
.
	$≠≥nd
(
v
)

159 
åy
:

160  .
	$∑ck
(
£lf
.
__hdr_fmt__
, *
vÆs
)

161 
ex˚±
 .
îr‹
 
as
 
e
:

162 
øi£
 
	`PackEº‹
(
	$°r
(
e
))

164 
def
 
	$∑ck
(
£lf
):

166  
	$byãs
(
£lf
)

168 
def
 
	$u≈ack
(
£lf
, 
buf
):

170 
k
, 
v
 
ö
 
	`com∑t_izù
(
£lf
.
__hdr_fõlds__
,

171 .
	$u≈ack
(
£lf
.
__hdr_fmt__
, 
buf
[:£lf.
__hdr_Àn__
])):

172 
	$£èâr
(
£lf
, 
k
, 
v
)

173 
£lf
.
d©a
 = 
buf
[£lf.
__hdr_Àn__
:]

175 #XXX - ''.
	`joö
([(
	`Àn
(`
	`chr
(
x
)`)==3Ë
™d
 chr(xË
‹
 '.' x 
ö
 
	`ønge
(256)])

176 
__vis_fûãr
 = 
b
'................................ !"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[.]^_`abcdefghijklmnopqrstuvwxyz{|}~.................................................................................................................................'

179 
def
 
	$hexdump
(
buf
, 
Àngth
=16):

181 
n
 = 0

182 
ªs
 = []

183 
buf
:

184 
löe
, 
buf
 = buf[:
Àngth
], buf[length:]

185 
hexa
 = ' '.
	`joö
(['%02x' % 
	$com∑t_‹d
(
x
Ëx 
ö
 
löe
])

186 
löe
 =Üöe.
	`å™¶©e
(
__vis_fûãr
).
	`decode
('utf-8')

187 
ªs
.
	`≠≥nd
(' %04d: %-*†%s' % (
n
, 
Àngth
 * 3, 
hexa
, 
löe
))

188 
n
 +
Àngth


189  '\n'.
	$joö
(
ªs
)

192 
def
 
	$ö_cksum_add
(
s
, 
buf
):

193 
n
 = 
	$Àn
(
buf
)

194 
˙t
 = (
n


195 
a
 = 
¨øy
.
	`¨øy
('H', 
buf
[:
˙t
])

196 
˙t
 !
n
:

197 
a
.
	`≠≥nd
(
	`com∑t_‹d
(
buf
[-1]))

198  
s
 + 
	$sum
(
a
)

201 
def
 
	$ö_cksum_d⁄e
(
s
):

202 
s
 = (s >> 16) + (s & 0xffff)

203 
s
 += (s >> 16)

204  
sockë
.
	`¡ohs
(~
s
 & 0xffff)

207 
def
 
	$ö_cksum
(
buf
):

209  
	`ö_cksum_d⁄e
(
	$ö_cksum_add
(0, 
buf
))

212 
def
 
	$ã°_utûs
():

213 
__buf
 = 
b
'\x00\x01\x02\x03\x04\x05\x06\x07\x08\t\n\x0b\x0c\r\x0e'

214 
__hd
 = ' 0000: 00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e ...............'

215 
h
 = 
	$hexdump
(
__buf
)

216 
	$as£π
 (
h
 =
__hd
)

217 
c
 = 
	$ö_cksum
(
__buf
)

218 
	`as£π
 (
c
 == 51150)

	@dtp.py

1 #$Id: 
dç
.
py
 23 2006-11-08 15:45:33
Z
 
dugs⁄g
 
$


2 #-*- 
codög
: 
utf
-8 -*-

4 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


6 
imp‹t
 

8 
	g‰om
 . 
imp‹t
 
dpkt


11 
˛ass
 
	$DTP
(
dpkt
.
Packë
):

14 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

16 
Aâribuãs
:

17 
__hdr__
: 
Hódî
 
fõlds
 
of
 
DTP
.

18 
TODO
.

21 
__hdr__
 = (

23 Ë#ª° 
is
 
TLVs


25 
def
 
	$u≈ack
(
£lf
, 
buf
):

26 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

27 
buf
 = 
£lf
.
d©a


28 
tvs
 = []

29 
buf
:

30 
t
, 
l
 = .
	`u≈ack
('>HH', 
buf
[:4])

31 
v
, 
buf
 = buf[4:4 + 
l
], buf[4 +Ü:]

32 
tvs
.
	`≠≥nd
((
t
, 
v
))

33 
£lf
.
d©a
 = 
tvs


36 
TRUNK_NAME
 = 0x01

37 
MAC_ADDR
 = 0x04

	@edp.py

2 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


4 
imp‹t
 
dpkt


5 
imp‹t
 
sys


7 
˛ass
 
	$EDP
(
dpkt
.
Packë
):

8 
__hdr__
 = (

18 
def
 
	$__°r__
(
£lf
):

19 
nŸ
 
£lf
.
sum
:

20 
£lf
.
sum
 = 
dpkt
.
	`ö_cksum
(dpkt.
Packë
.
	$__°r__
(
£lf
))

21  
dpkt
.
Packë
.
	$__°r__
(
£lf
)

24 
˛ass
 
	$Te°EDP
(
obje˘
):

26 
Te°
 
basic
 
EDP
 
fun˘i⁄Æôy
.

29 @
˛assmëhod


30 
def
 
	$£tup_˛ass
(
˛s
):

31 
˛s
.
p
 = 
	`EDP
(
b
'\x01\x00\x01\x3c\x9e\x76\x00\x1b\x00\x00\x08\x00\x27-\x90\xed\x99\x02\x00$\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0f\x02\x02\x07\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x99\x01\x01\x04EXOS-2\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x99\x00\x00\x04')

33 
def
 
	$ã°_vîsi⁄
(
£lf
):

34 
	$as£π
 (
£lf
.
p
.
vîsi⁄
 == 1)

36 
def
 
	$ã°_ª£rved
(
£lf
):

37 
	$as£π
 (
£lf
.
p
.
ª£rved
 == 0)

39 
def
 
	$ã°_hÀn
(
£lf
):

40 
	$as£π
 (
£lf
.
p
.
hÀn
 == 316)

42 
def
 
	$ã°_sum
(
£lf
):

43 
	$as£π
 (
£lf
.
p
.
sum
 == 40566)

45 
def
 
	$ã°_£q
(
£lf
):

46 
	$as£π
 (
£lf
.
p
.
£q
 == 27)

48 
def
 
	$ã°_mid
(
£lf
):

49 
	$as£π
 (
£lf
.
p
.
mid
 == 0)

51 
def
 
	$ã°_mac
(
£lf
):

52 
	`as£π
 (
£lf
.
p
.
mac
 =
b
"\x08\x00'-\x90\xed")

	@esp.py

1 #$Id: 
e•
.
py
 23 2006-11-08 15:45:33
Z
 
dugs⁄g
 
$


2 #-*- 
codög
: 
utf
-8 -*-

4 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


6 
	g‰om
 . 
imp‹t
 
dpkt


9 
˛ass
 
	$ESP
(
dpkt
.
Packë
):

12 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

14 
Aâribuãs
:

15 
__hdr__
: 
Hódî
 
fõlds
 
of
 
ESP
.

16 
TODO
.

19 
__hdr__
 = (

	@ethernet.py

1 #$Id: 
ëhî√t
.
py
 65 2010-03-26 02:53:51
Z
 
dugs⁄g
 
$


2 #-*- 
codög
: 
utf
-8 -*-

4 
wôh
 
	gautom©ic
 802.1
	gq
, 
	gMPLS
, 
	gPPPoE
, 
™d
 
Cisco
 
ISL
 
	gdeˇpsuœti⁄
."""

5 
‰om
 
__futuª__
 
imp‹t
 
¥öt_fun˘i⁄


6 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


8 
imp‹t
 

9 
imp‹t
 
codecs


10 
‰om
 
zlib
 
imp‹t
 
¸c32


12 
	g‰om
 . 
imp‹t
 
dpkt


13 
	g‰om
 . 
imp‹t
 
Œc


14 
	g‰om
 .
com∑t
 
imp‹t
 
ôîôems


16 
	gåy
:

17 
isö°™˚
("", 
ba£°rög
)

18 
def
 
	$is°r
(
s
):

19  
	$isö°™˚
(
s
, 
ba£°rög
)

20 
ex˚±
 
NameEº‹
:

21 
def
 
	$is°r
(
s
):

22  
	$isö°™˚
(
s
, 
°r
)

24 
ETH_CRC_LEN
 = 4

25 
ETH_HDR_LEN
 = 14

27 
ETH_LEN_MIN
 = 64 #möimum 
‰ame
 
Àngth
 
wôh
 
CRC


28 
ETH_LEN_MAX
 = 1518 #maximum 
‰ame
 
Àngth
 
wôh
 
CRC


30 
ETH_MTU
 = (
ETH_LEN_MAX
 - 
ETH_HDR_LEN
 - 
ETH_CRC_LEN
)

31 
ETH_MIN
 = (
ETH_LEN_MIN
 - 
ETH_HDR_LEN
 - 
ETH_CRC_LEN
)

33 #Ethî√à
∑ylﬂd
 
ty≥s
 - 
hâp
:

34 
ETH_TYPE_EDP
 = 0x00bb #Exåemê
Nëw‹ks
 
Discovîy
 
PrŸocﬁ


35 
ETH_TYPE_PUP
 = 0x0200 #PUP 
¥Ÿocﬁ


36 
ETH_TYPE_IP
 = 0x0800 #IP 
¥Ÿocﬁ


37 
ETH_TYPE_ARP
 = 0x0806 #addªs†
ªsﬁuti⁄
 
¥Ÿocﬁ


38 
ETH_TYPE_AOE
 = 0x88a2 #AoE 
¥Ÿocﬁ


39 
ETH_TYPE_CDP
 = 0x2000 #Ciscÿ
Discovîy
 
PrŸocﬁ


40 
ETH_TYPE_DTP
 = 0x2004 #Ciscÿ
Dy«mic
 
Trunkög
 
PrŸocﬁ


41 
ETH_TYPE_REVARP
 = 0x8035 #ªvî£ 
addr
 
ªsﬁuti⁄
 
¥Ÿocﬁ


42 
ETH_TYPE_8021Q
 = 0x8100 #IEEE 802.1
Q
 
VLAN
 
èggög


43 
ETH_TYPE_IPX
 = 0x8137 #I¡î√tw‹k 
Packë
 
Exch™ge


44 
ETH_TYPE_IP6
 = 0x86DD #IPv6 
¥Ÿocﬁ


45 
ETH_TYPE_PPP
 = 0x880B #PPP

46 
ETH_TYPE_MPLS
 = 0x8847 #MPLS

47 
ETH_TYPE_MPLS_MCAST
 = 0x8848 #MPLS 
Mu…iˇ°


48 
ETH_TYPE_PPPoE_DISC
 = 0x8863 #PPP 
Ovî
 
Ethî√t
 
Discovîy
 
Sège


49 
ETH_TYPE_PPPoE
 = 0x8864 #PPP 
Ovî
 
Ethî√t
 
Sessi⁄
 
Sège


50 
ETH_TYPE_LLDP
 = 0x88CC #Lök 
Layî
 
Discovîy
 
PrŸocﬁ


51 
ETH_TYPE_TEB
 = 0x6558 #Tøn•¨íà
Ethî√t
 
Bridgög


54 
˛ass
 
	$Ethî√t
(
dpkt
.
Packë
):

57 
Ethî√t
 
II
, 
	`LLC
 (802.3+802.2), 
LLC
/
SNAP
, 
™d
 
Novñl
 
øw
 802.3,

58 
wôh
 
autom©ic
 802.1
q
, 
MPLS
, 
PPPoE
, 
™d
 
Cisco
 
ISL
 
deˇpsuœti⁄
.

60 
Aâribuãs
:

61 
__hdr__
: 
Hódî
 
fõlds
 
of
 
Ethî√t
.

62 
TODO
.

65 
__hdr__
 = (

68 ('ty≥', 'H', 
ETH_TYPE_IP
)

70 
_ty≥sw
 = {
	}
}

71 
_ty≥sw_ªv
 = {} #ªvî£ 
m≠pög


73 
def
 
	$__öô__
(
£lf
, *
¨gs
, **
kw¨gs
):

74 
dpkt
.
Packë
.
	$__öô__
(
£lf
, *
¨gs
, **
kw¨gs
)

75 #i‡
d©a
 
was
 
giví
 
ö
 
kw¨gs
, 
åy
 
to
 
u≈ack
 
ô


76 
£lf
.
d©a
:

77 
	$is°r
(
£lf
.
d©a
Ë
‹
 
	$isö°™˚
(
£lf
.
d©a
, 
byãs
):

78 
£lf
.
	$_u≈ack_d©a
(
£lf
.
d©a
)

80 
def
 
	$_u≈ack_d©a
(
£lf
, 
buf
):

81 
£lf
.
ty≥
 =
ETH_TYPE_8021Q
:

82 
£lf
.
vœn_ègs
 = []

84 #suµ‹à
up
 
to
 2 
	`ègs
 (
èggög
 
aka
 
QöQ
)

85 
_
 
ö
 
	$ønge
(2):

86 
èg
 = 
	$VLANèg8021Q
(
buf
)

87 
buf
 = buf[
èg
.
__hdr_Àn__
:]

88 
£lf
.
vœn_ègs
.
	$≠≥nd
(
èg
)

89 
£lf
.
ty≥
 = 
èg
.type

90 
£lf
.
ty≥
 !
ETH_TYPE_8021Q
:

92 #backw¨d 
com∑tibûôy
, 
u£
 
the
 1
°
 
èg


93 
£lf
.
vœnid
, sñf.
¥i‹ôy
, sñf.
cfi
 = sñf.
vœn_ègs
[0].
	$as_tu∂e
()

95 
ñif
 
£lf
.
ty≥
 =
ETH_TYPE_MPLS
 
‹
 sñf.ty≥ =
ETH_TYPE_MPLS_MCAST
:

96 
£lf
.
œbñs
 = [] #ﬁd 
li°
 
c⁄èöög
Üabñ†
as
 
tu∂es


97 
£lf
.
m∂s_œbñs
 = [] #√w 
li°
 
c⁄èöög
 
œbñs
 
as
 
ö°™˚s
 
of
 
MPLSœbñ


99 #XXX - 
max
 #o‡
œbñs
 
is
 
undeföed
, 
ju°
 
u£
 24

100 
i
 
ö
 
	$ønge
(24):

101 
lbl
 = 
	$MPLSœbñ
(
buf
)

102 
buf
 = buf[
lbl
.
__hdr_Àn__
:]

103 
£lf
.
m∂s_œbñs
.
	$≠≥nd
(
lbl
)

104 
£lf
.
œbñs
.
	`≠≥nd
(
lbl
.
	$as_tu∂e
())

105 
lbl
.
s
: #bŸtom 
of
 
°ack


107 
£lf
.
ty≥
 = 
ETH_TYPE_IP


109 
åy
:

110 
£lf
.
d©a
 = sñf.
_ty≥sw
[£lf.
ty≥
](
buf
)

111 
	`£èâr
(
£lf
, sñf.
d©a
.
__˛ass__
.
__«me__
.
	`lowî
(), self.data)

112 
	$ex˚±
 (
KeyEº‹
, 
dpkt
.
U≈ackEº‹
):

113 
£lf
.
d©a
 = 
buf


115 
def
 
	$u≈ack
(
£lf
, 
buf
):

116 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

117 
£lf
.
ty≥
 > 1500:

118 #Ethî√à
II


119 
£lf
.
	$_u≈ack_d©a
(
£lf
.
d©a
)

121 
	`ñif
 (
£lf
.
d°
.
	`°¨tswôh
(
b
'\x01\x00\x0c\x00\x00'Ë
‹


122 
£lf
.
d°
.
	`°¨tswôh
(
b
'\x03\x00\x0c\x00\x00')):

123 #Ciscÿ
ISL


124 
èg
 = 
	$VLANègISL
(
buf
)

125 
buf
 = buf[
èg
.
__hdr_Àn__
:]

126 
£lf
.
vœn_ègs
 = [
èg
]

127 
£lf
.
vœn
 = 
èg
.
id
 #backw¨d 
com∑tibûôy


128 
£lf
.
	$u≈ack
(
buf
)

130 
ñif
 
£lf
.
d©a
.
	`°¨tswôh
(
b
'\xff\xff'):

132 
£lf
.
ty≥
 = 
ETH_TYPE_IPX


133 
£lf
.
d©a
 = sñf.
ùx
 = sñf.
_ty≥sw
[
ETH_TYPE_IPX
](self.data[2:])

136 #IEEE 802.3 
Ethî√t
 - 
LLC


137 #åy 
to
 
u≈ack
 
FCS
 
hîe
; 
we
 
fﬁlow
 
the
 
ßme
 
heuri°ic
 
≠¥ﬂch
 
as
 
Wúesh¨k
:

138 #i‡
the
 
uµî
 
œyî
 
	`Àn
(
£lf
.
d©a
Ë
ˇn
 
be
 
fuŒy
 
decoded
 
™d
 
ªtu∫s
 
ôs
 
size
,

139 #™d 
thîe
'sá difference with size inÅhe Eth header,ÅhenássumeÅheÜast

140 #4 
byãs
 
is
 
the
 
FCS
 
™d
 
ªmaöög
 byã†
¨e
 
a
 
åaûî
.

141 
ëh_Àn
 = 
£lf
.
ty≥


142 
	`Àn
(
£lf
.
d©a
Ë> 
ëh_Àn
:

143 
èû_Àn
 = 
	`Àn
(
£lf
.
d©a
Ë- 
ëh_Àn


144 
èû_Àn
 >= 4:

145 
£lf
.
fcs
 = .
	`u≈ack
('>I', sñf.
d©a
[-4:])[0]

146 
£lf
.
åaûî
 = sñf.
d©a
[
ëh_Àn
:-4]

147 
£lf
.
d©a
 = sñf.
Œc
 =Ülc.
	$LLC
(
£lf
.
d©a
[:
ëh_Àn
])

149 
def
 
	$∑ck_hdr
(
£lf
):

150 
ègs_buf
 = 
b
''

151 
√w_ty≥
 = 
£lf
.
ty≥


152 
is_i¶
 = 
FÆ£
 #ISL 
wøps
 
Ethî√t
, 
this
 
dëîmöes
 
‹dî
 
of
 
∑ckög


154 #öôü»
ty≥
 
is
 
ba£d
 
⁄
 
√xt
 
œyî
, 
poöãd
 
by
 
£lf
.
d©a
;

155 #åy 
to
 
föd
 
™
 
ETH_TYPE
 
m©chög
 
the
 
d©a
 
˛ass


156 
	$isö°™˚
(
£lf
.
d©a
, 
dpkt
.
Packë
):

157 
√w_ty≥
 = 
£lf
.
_ty≥sw_ªv
.
	$gë
(
£lf
.
d©a
.
__˛ass__
, 
√w_ty≥
)

159 
	`gë©å
(
£lf
, 'm∂s_œbñs', 
N⁄e
):

160 #m¨k 
Æl
 
œbñs
 
wôh
 
s
=0, 
œ°
 
⁄e
 with s=1

161 
lbl
 
ö
 
£lf
.
m∂s_œbñs
:

162 
lbl
.
s
 = 0

163 
lbl
.
s
 = 1

165 #£à
íˇpsuœti⁄
 
ty≥


166 
	$nŸ
 (
£lf
.
ty≥
 =
ETH_TYPE_MPLS
 
‹
 sñf.ty≥ =
ETH_TYPE_MPLS_MCAST
):

167 
√w_ty≥
 = 
ETH_TYPE_MPLS


168 
ègs_buf
 = 
b
''.
	`joö
(
lbl
.
	$∑ck_hdr
(Ë
lbl
 
ö
 
£lf
.
m∂s_œbñs
)

170 
ñif
 
	`gë©å
(
£lf
, 'vœn_ègs', 
N⁄e
):

171 #£à
íˇpsuœti⁄
 
ty≥s


172 
t1
 = 
£lf
.
vœn_ègs
[0]

173 
	`Àn
(
£lf
.
vœn_ègs
) == 1:

174 
	$isö°™˚
(
t1
, 
VLANèg8021Q
):

175 
t1
.
ty≥
 = 
£lf
.type

176 
√w_ty≥
 = 
ETH_TYPE_8021Q


177 
ñif
 
	$isö°™˚
(
t1
, 
VLANègISL
):

178 
t1
.
ty≥
 = 0 #0 
móns
 
Ethî√t


179 
is_i¶
 = 
True


180 
ñif
 
	`Àn
(
£lf
.
vœn_ègs
) == 2:

181 
t2
 = 
£lf
.
vœn_ègs
[1]

182 
	$isö°™˚
(
t1
, 
VLANèg8021Q
Ë
™d
 
	$isö°™˚
(
t2
, 
VLANèg8021Q
):

183 
t2
.
ty≥
 = 
£lf
.type

184 
√w_ty≥
 = 
t1
.
ty≥
 = 
ETH_TYPE_8021Q


186 
øi£
 
dpkt
.
	`PackEº‹
('maximum is 2 VLANÅagsÖer Ethernet frame')

187 
ègs_buf
 = 
b
''.
	`joö
(
èg
.
	$∑ck_hdr
(Ë
èg
 
ö
 
£lf
.
vœn_ègs
)

189 #i‡
£lf
.
d©a
 
is
 
LLC
 
thí
 
this
 i†
IEEE
 802.3 
Ethî√t
 
™d
 sñf.
ty≥


190 #thí 
a˘uÆly
 
ícodes
 
the
 
Àngth
 
of
 
d©a


191 
	$isö°™˚
(
£lf
.
d©a
, 
Œc
.
LLC
):

192 
√w_ty≥
 = 
	$Àn
(
£lf
.
d©a
)

194 
hdr_buf
 = 
dpkt
.
Packë
.
	`∑ck_hdr
(
£lf
)[:-2] + .
	`∑ck
('>H', 
√w_ty≥
)

195 
nŸ
 
is_i¶
:

196  
hdr_buf
 + 
ègs_buf


198  
ègs_buf
 + 
hdr_buf


200 
def
 
	$__°r__
(
£lf
):

201 
èû
 = 
b
''

202 
	$isö°™˚
(
£lf
.
d©a
, 
Œc
.
LLC
):

203 
	`haßâr
(
£lf
, 'fcs'):

204 
£lf
.
fcs
:

205 
fcs
 = 
£lf
.fcs

207 #i‡
fcs
 
fõld
 
is
 
¥e£¡
 
but
 0/
N⁄e
, 
thí
 
compuã
 
ô
 
™d
 
add
 
to
 
the
 
èû


208 
fcs_buf
 = 
£lf
.
	`∑ck_hdr
(Ë+ 
	`byãs
(£lf.
d©a
Ë+ 
	`gë©å
(self, 'trailer', '')

209 #i‡
ISL
 
hódî
 
is
 
¥e£¡
, 
ex˛ude
 
ô
 
‰om
 
the
 
ˇlcuœti⁄


210 
	`gë©å
(
£lf
, 'vœn_ègs', 
N⁄e
):

211 
	$isö°™˚
(
£lf
.
vœn_ègs
[0], 
VLANègISL
):

212 
fcs_buf
 = fcs_buf[
VLANègISL
.
__hdr_Àn__
:]

213 
ªv¸c
 = 
	`¸c32
(
fcs_buf
) & 0xffffffff

214 
fcs
 = .
	`u≈ack
('<I', .
	`∑ck
('>I', 
ªv¸c
))[0] #bswap32

215 
èû
 = 
	`gë©å
(
£lf
, 'åaûî', 
b
''Ë+ .
	`∑ck
('>I', 
fcs
)

216  
	`°r
(
dpkt
.
Packë
.
	`__byãs__
(
£lf
Ë+ 
èû
)

218 
def
 
	$__Àn__
(
£lf
):

219 
ègs
 = 
	`gë©å
(
£lf
, 'mpls_labels', []) + getattr(self, 'vlan_tags', [])

220 
_Àn
 = 
dpkt
.
Packë
.
	`__Àn__
(
£lf
Ë+ 
	$sum
(
t
.
__hdr_Àn__
 à
ö
 
ègs
)

221 
	$isö°™˚
(
£lf
.
d©a
, 
Œc
.
LLC
Ë
™d
 
	`haßâr
(self, 'fcs'):

222 
_Àn
 +
	`Àn
(
	`gë©å
(
£lf
, 'trailer', '')) + 4

223  
_Àn


225 @
˛assmëhod


226 
def
 
	$£t_ty≥
(
˛s
, 
t
, 
pkt˛ass
):

227 
˛s
.
_ty≥sw
[
t
] = 
pkt˛ass


228 
˛s
.
_ty≥sw_ªv
[
pkt˛ass
] = 
t


230 @
˛assmëhod


231 
def
 
	$gë_ty≥
(
˛s
, 
t
):

232  
˛s
.
_ty≥sw
[
t
]

234 @
˛assmëhod


235 
def
 
	$gë_ty≥_ªv
(
˛s
, 
k
):

236  
˛s
.
_ty≥sw_ªv
[
k
]

239 #XXX -áuto-
lﬂd
 
Ethî√t
 
di•©ch
 
èbÀ
 
‰om
 
ETH_TYPE_
* 
deföôi⁄s


240 
def
 
	$__lﬂd_ty≥s
():

241 
g
 = 
	$globÆs
()

242 
k
, 
v
 
ö
 
	$ôîôems
(
g
):

243 
k
.
	`°¨tswôh
('ETH_TYPE_'):

244 
«me
 = 
k
[9:]

245 
mod«me
 = 
«me
.
	$lowî
()

246 
åy
:

247 
mod
 = 
	$__imp‹t__
(
mod«me
, 
g
, 
Àvñ
=1)

248 
Ethî√t
.
	`£t_ty≥
(
v
, 
	$gë©å
(
mod
, 
«me
))

249 
	$ex˚±
 (
Imp‹tEº‹
, 
AâribuãEº‹
):

251 #add 
™y
 
•ecül
 
ˇ£s
 
bñow


252 
Ethî√t
.
	$£t_ty≥
(
ETH_TYPE_TEB
, 
Ethî√t
)

255 
def
 
	$_mod_öô
():

257 
nŸ
 
Ethî√t
.
_ty≥sw
:

258 
	$__lﬂd_ty≥s
()

261 #Mis¯
¥Ÿocﬁs


264 
˛ass
 
	$MPLSœbñ
(
dpkt
.
Packë
):

267 
__hdr__
 = (

270 #fõld 
«mes
 
¨e
 
acc‹dög
 
to
 
RFC3032


272 
def
 
	$u≈ack
(
£lf
, 
buf
):

273 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

274 
£lf
.
vÆ
 = (£lf.
_vÆ_exp_s_âl
 & 0xfffff000Ë>> 12 #œbñ 
vÆue
, 20 
bôs


275 
£lf
.
exp
 = (£lf.
_vÆ_exp_s_âl
 & 0x00000e00Ë>> 9 #ex≥rimíè»
u£
, 3 
bôs


276 
£lf
.
s
 = (£lf.
_vÆ_exp_s_âl
 & 0x00000100Ë>> 8 #bŸtom 
of
 
°ack
 
Êag
, 1 
bô


277 
£lf
.
âl
 = sñf.
_vÆ_exp_s_âl
 & 0x000000f‡#timê
to
 
live
, 8 
bôs


278 
£lf
.
d©a
 = 
b
''

280 
def
 
	$∑ck_hdr
(
£lf
):

281 
£lf
.
_vÆ_exp_s_âl
 = (

282 ((
£lf
.
vÆ
 & 0xfffff) << 12) |

283 ((
£lf
.
exp
 & 7) << 9) |

284 ((
£lf
.
s
 & 1) << 8) |

285 ((
£lf
.
âl
 & 0xff))

287  
dpkt
.
Packë
.
	$∑ck_hdr
(
£lf
)

289 
def
 
	$as_tu∂e
(
£lf
): #backw¨d-
com∑tibÀ
 
ª¥e£¡©i⁄


290  (
£lf
.
vÆ
, sñf.
exp
, sñf.
âl
)

293 
˛ass
 
	$VLANèg8021Q
(
dpkt
.
Packë
):

296 
__hdr__
 = (

298 ('ty≥', 'H', 
ETH_TYPE_IP
)

301 
def
 
	$u≈ack
(
£lf
, 
buf
):

302 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

303 
£lf
.
¥i
 = (£lf.
_¥i_cfi_id
 & 0xe000Ë>> 13 #¥i‹ôy, 3 
bôs


304 
£lf
.
cfi
 = (£lf.
_¥i_cfi_id
 & 0x1000Ë>> 12 #ˇn⁄iˇ»
f‹m©
 
ödiˇt‹
, 1 
bô


305 
£lf
.
id
 = sñf.
_¥i_cfi_id
 & 0x0ff‡#VLAN id, 12 
bôs


306 
£lf
.
d©a
 = 
b
''

308 
def
 
	$∑ck_hdr
(
£lf
):

309 
£lf
.
_¥i_cfi_id
 = (

310 ((
£lf
.
¥i
 & 7) << 13) |

311 ((
£lf
.
cfi
 & 1) << 12) |

312 ((
£lf
.
id
 & 0xfff))

314  
dpkt
.
Packë
.
	$∑ck_hdr
(
£lf
)

316 
def
 
	$as_tu∂e
(
£lf
):

317  (
£lf
.
id
, sñf.
¥i
, sñf.
cfi
)

320 
˛ass
 
	$VLANègISL
(
dpkt
.
Packë
):

323 
__hdr__
 = (

324 ('da', '5s', 
b
'\x01\x00\x0c\x00\x00'),

328 ('¢≠', '3s', 
b
'\xaa\xaa\x03'),

329 ('hß', '3s', 
b
'\x00\x00\x0c'),

335 
def
 
	$u≈ack
(
£lf
, 
buf
):

336 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

337 
£lf
.
ty≥
 = (£lf.
_ty≥_¥i
 & 0xf0Ë>> 4 #íˇpsuœti⁄Åy≥, 4 
bôs
; 0 
móns
 
Ethî√t


338 
£lf
.
¥i
 = sñf.
_ty≥_¥i
 & 0x03 #u£∏
deföed
 
bôs
, 2 bô†
¨e
 
u£d
; 
móns
 
¥i‹ôy


339 
£lf
.
id
 = sñf.
_id_bpdu
 >> 1 #VLAN id

340 
£lf
.
bpdu
 = sñf.
_id_bpdu
 & 1

341 
£lf
.
d©a
 = 
b
''

343 
def
 
	$∑ck_hdr
(
£lf
):

344 
£lf
.
_ty≥_¥i
 = ((£lf.
ty≥
 & 0xfË<< 4Ë| (£lf.
¥i
 & 0x3)

345 
£lf
.
_id_bpdu
 = ((£lf.
id
 & 0x7fffË<< 1Ë| (£lf.
bpdu
 & 1)

346  
dpkt
.
Packë
.
	$∑ck_hdr
(
£lf
)

349 #Unô 
ã°s


352 
def
 
	$ã°_ëh
():

353 
‰om
 . 
imp‹t
 
ù
 #IPv6 
√eds
 
this
 
to
 
buûd
 
ôs
 
¥Ÿocﬁ
 
°ack


354 
‰om
 . 
imp‹t
 
ù6


355 
‰om
 . 
imp‹t
 
t˝


356 
s
 = (
b
'\x00\xb0\xd0\xe1\x80\x72\x00\x11\x24\x8c\x11\xde\x86\xdd\x60\x00\x00\x00'

357 
b
'\x00\x28\x06\x40\xfe\x80\x00\x00\x00\x00\x00\x00\x02\x11\x24\xff\xfe\x8c'

358 
b
'\x11\xde\xfe\x80\x00\x00\x00\x00\x00\x00\x02\xb0\xd0\xff\xfe\xe1\x80\x72'

359 
b
'\xcd\xd3\x00\x16\xff\x50\xd7\x13\x00\x00\x00\x00\xa0\x02\xff\xff\x67\xd3'

360 
b
'\x00\x00\x02\x04\x05\xa0\x01\x03\x03\x00\x01\x01\x08\x0a\x7d\x18\x3a\x61'

361 
b
'\x00\x00\x00\x00')

362 
ëh
 = 
	$Ethî√t
(
s
)

363 
as£π
 
ëh


364 
as£π
 
	$isö°™˚
(
ëh
.
d©a
, 
ù6
.
IP6
)

365 
as£π
 
	$isö°™˚
(
ëh
.
d©a
.d©a, 
t˝
.
TCP
)

366 
as£π
 
	`°r
(
ëh
Ë=
	$°r
(
s
)

367 
as£π
 
	`Àn
(
ëh
Ë=
	$Àn
(
s
)

370 
def
 
	$ã°_ëh_öô_wôh_d©a
():

371 #öôülizê
wôh
 
a
 
d©a
 
°rög
, 
ã°
 
th©
 
ô
 
gës
 
u≈acked


372 
‰om
 . 
imp‹t
 
¨p


373 
ëh1
 = 
	`Ethî√t
(

374 
d°
=
b
'PQRSTU', 
§c
=b'ABCDEF', 
ty≥
=
ETH_TYPE_ARP
,

375 
d©a
=
b
'\x00\x01\x08\x00\x06\x04\x00\x01123456abcd7890abwxyz')

376 
as£π
 
	$isö°™˚
(
ëh1
.
d©a
, 
¨p
.
ARP
)

378 #now 
öôülize
 
wôh
 
a
 
˛ass
, 
ã°
 
∑ckög


379 
ëh2
 = 
	`Ethî√t
(

380 
d°
=
b
'PQRSTU', 
§c
=b'ABCDEF',

381 
d©a
=
¨p
.
	`ARP
(
sha
=
b
'123456', 
•a
=b'abcd', 
tha
=b'7890ab', 
ça
=b'wxyz'))

382 
as£π
 
	`°r
(
ëh1
Ë=
	$°r
(
ëh2
)

383 
as£π
 
	`Àn
(
ëh1
Ë=
	$Àn
(
ëh2
)

386 
def
 
	$ã°_m∂s_œbñ
():

387 
s
 = 
b
'\x00\x01\x0b\xff'

388 
m
 = 
	$MPLSœbñ
(
s
)

389 
as£π
 
m
.
vÆ
 == 16

390 
as£π
 
m
.
exp
 == 5

391 
as£π
 
m
.
s
 == 1

392 
as£π
 
m
.
âl
 == 255

393 
as£π
 
	`°r
(
m
Ë=
	$°r
(
s
)

394 
as£π
 
	`Àn
(
m
Ë=
	$Àn
(
s
)

397 
def
 
	$ã°_802dŸ1q_èg
():

398 
s
 = 
b
'\xa0\x76\x01\x65'

399 
t
 = 
	$VLANèg8021Q
(
s
)

400 
as£π
 
t
.
¥i
 == 5

401 
as£π
 
t
.
cfi
 == 0

402 
as£π
 
t
.
id
 == 118

403 
as£π
 
	`°r
(
t
Ë=
	$°r
(
s
)

404 
t
.
cfi
 = 1

405 
as£π
 
	`°r
(
t
Ë=°r(
b
'\xb0\x76\x01\x65')

406 
as£π
 
	`Àn
(
t
Ë=
	$Àn
(
s
)

409 
def
 
	$ã°_i¶_èg
():

410 
s
 = (
b
'\x01\x00\x0c\x00\x00\x03\x00\x02\xfd\x2c\xb8\x97\x00\x00\xaa\xaa\x03\x00\x00\x00\x04\x57'

411 
b
'\x00\x00\x00\x00')

412 
t
 = 
	$VLANègISL
(
s
)

413 
as£π
 
t
.
¥i
 == 3

414 
as£π
 
t
.
id
 == 555

415 
as£π
 
t
.
bpdu
 == 1

416 
as£π
 
	`°r
(
t
Ë=
	$°r
(
s
)

417 
as£π
 
	`Àn
(
t
Ë=
	$Àn
(
s
)

420 
def
 
	$ã°_ëh_802dŸ1q
():

421 
‰om
 . 
imp‹t
 
ù


422 
s
 = (
b
'\x00\x60\x08\x9f\xb1\xf3\x00\x40\x05\x40\xef\x24\x81\x00\x90\x20\x08'

423 
b
'\x00\x45\x00\x00\x34\x3b\x64\x40\x00\x40\x06\xb7\x9b\x83\x97\x20\x81'

424 
b
'\x83\x97\x20\x15\x04\x95\x17\x70\x51\xd4\xee\x9c\x51\xa5\x5b\x36\x80'

425 
b
'\x10\x7c\x70\x12\xc7\x00\x00\x01\x01\x08\x0a\x00\x04\xf0\xd4\x01\x99'

426 
b
'\xa3\xfd')

427 
ëh
 = 
	$Ethî√t
(
s
)

428 
as£π
 
ëh
.
cfi
 == 1

429 
as£π
 
ëh
.
vœnid
 == 32

430 
as£π
 
ëh
.
¥i‹ôy
 == 4

431 
as£π
 
	`Àn
(
ëh
.
vœn_ègs
) == 1

432 
as£π
 
ëh
.
vœn_ègs
[0].
ty≥
 =
ETH_TYPE_IP


433 
as£π
 
	$isö°™˚
(
ëh
.
d©a
, 
ù
.
IP
)

436 
as£π
 
	`°r
(
ëh
Ë=°r(
s
), 'pack 1'

437 
as£π
 
	`°r
(
ëh
Ë=°r(
s
), 'pack 2'

438 
as£π
 
	`Àn
(
ëh
Ë=
	$Àn
(
s
)

440 #c⁄°ru˘i⁄ 
wôh
 
kw¨gs


441 
ëh2
 = 
	$Ethî√t
(
§c
=
ëh
.§c, 
d°
Ûth.d°, 
vœn_ègs
Ûth.vœn_ègs, 
d©a
=eth.data)

442 
as£π
 
	`°r
(
ëh2
Ë=
	$°r
(
s
)

444 #c⁄°ru˘i⁄ 
w
/
o
 
the
 
èg


445 
dñ
 
ëh
.
vœn_ègs
,Éth.
cfi
,Éth.
vœnid
,Éth.
¥i‹ôy


446 
as£π
 
	`°r
(
ëh
Ë=°r(
s
[:12] + 
b
'\x08\x00' + s[18:])

449 
def
 
	$ã°_ëh_802dŸ1q_°acked
(): #2 
VLAN
 
ègs


450 
‰om
 . 
imp‹t
 
¨p


451 
‰om
 . 
imp‹t
 
ù


452 
s
 = (
b
'\x00\x1b\xd4\x1b\xa4\xd8\x00\x13\xc3\xdf\xae\x18\x81\x00\x00\x76\x81\x00\x00\x0a\x08\x00'

453 
b
'\x45\x00\x00\x64\x00\x0f\x00\x00\xff\x01\x92\x9b\x0a\x76\x0a\x01\x0a\x76\x0a\x02\x08\x00'

454 
b
'\xce\xb7\x00\x03\x00\x00\x00\x00\x00\x00\x00\x1f\xaf\x70\xab\xcd\xab\xcd\xab\xcd\xab\xcd'

455 
b
'\xab\xcd\xab\xcd\xab\xcd\xab\xcd\xab\xcd\xab\xcd\xab\xcd\xab\xcd\xab\xcd\xab\xcd\xab\xcd'

456 
b
'\xab\xcd\xab\xcd\xab\xcd\xab\xcd\xab\xcd\xab\xcd\xab\xcd\xab\xcd\xab\xcd\xab\xcd\xab\xcd'

457 
b
'\xab\xcd\xab\xcd\xab\xcd\xab\xcd\xab\xcd\xab\xcd')

458 
ëh
 = 
	$Ethî√t
(
s
)

459 
as£π
 
ëh
.
ty≥
 =
ETH_TYPE_IP


460 
as£π
 
	`Àn
(
ëh
.
vœn_ègs
) == 2

461 
as£π
 
ëh
.
vœn_ègs
[0].
id
 == 118

462 
as£π
 
ëh
.
vœn_ègs
[1].
id
 == 10

463 
as£π
 
ëh
.
vœn_ègs
[0].
ty≥
 =
ETH_TYPE_8021Q


464 
as£π
 
ëh
.
vœn_ègs
[1].
ty≥
 =
ETH_TYPE_IP


465 
as£π
 [
t
.
	$as_tu∂e
(Ë
t
 
ö
 
ëh
.
vœn_ègs
] == [(118, 0, 0), (10, 0, 0)]

466 
as£π
 
	$isö°™˚
(
ëh
.
d©a
, 
ù
.
IP
)

469 
as£π
 
	`°r
(
ëh
Ë=°r(
s
), 'pack 1'

470 
as£π
 
	`°r
(
ëh
Ë=°r(
s
), 'pack 2'

471 
as£π
 
	`Àn
(
ëh
Ë=
	$Àn
(
s
)

473 #c⁄°ru˘i⁄ 
wôh
 
kw¨gs


474 
ëh2
 = 
	$Ethî√t
(
§c
=
ëh
.§c, 
d°
Ûth.d°, 
vœn_ègs
Ûth.vœn_ègs, 
d©a
=eth.data)

475 
as£π
 
	`°r
(
ëh2
Ë=
	$°r
(
s
)

477 #c⁄°ru˘i⁄ 
w
/
o
 
the
 
ègs


478 
dñ
 
ëh
.
vœn_ègs
,Éth.
cfi
,Éth.
vœnid
,Éth.
¥i‹ôy


479 
as£π
 
	`°r
(
ëh
Ë=°r(
s
[:12] + 
b
'\x08\x00' + s[22:])

481 #2 
VLAN
 
ègs
 + 
ARP


482 
s
 = (
b
'\xff\xff\xff\xff\xff\xff\xca\x03\x0d\xb4\x00\x1c\x81\x00\x00\x64\x81\x00\x00\xc8\x08\x06'

483 
b
'\x00\x01\x08\x00\x06\x04\x00\x01\xca\x03\x0d\xb4\x00\x1c\xc0\xa8\x02\xc8\x00\x00\x00\x00'

484 
b
'\x00\x00\xc0\xa8\x02\xfe\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00')

485 
ëh
 = 
	$Ethî√t
(
s
)

486 
as£π
 
	`Àn
(
ëh
.
vœn_ègs
) == 2

487 
as£π
 
ëh
.
vœn_ègs
[0].
ty≥
 =
ETH_TYPE_8021Q


488 
as£π
 
ëh
.
vœn_ègs
[1].
ty≥
 =
ETH_TYPE_ARP


489 
as£π
 
	$isö°™˚
(
ëh
.
d©a
, 
¨p
.
ARP
)

492 
def
 
	$ã°_ëh_m∂s_°acked
(): #2 
MPLS
 
œbñs


493 
‰om
 . 
imp‹t
 
ù


494 
s
 = (
b
'\x00\x30\x96\xe6\xfc\x39\x00\x30\x96\x05\x28\x38\x88\x47\x00\x01\x20\xff\x00\x01\x01\xff'

495 
b
'\x45\x00\x00\x64\x00\x50\x00\x00\xff\x01\xa7\x06\x0a\x1f\x00\x01\x0a\x22\x00\x01\x08\x00'

496 
b
'\xbd\x11\x0f\x65\x12\xa0\x00\x00\x00\x00\x00\x53\x9e\xe0\xab\xcd\xab\xcd\xab\xcd\xab\xcd'

497 
b
'\xab\xcd\xab\xcd\xab\xcd\xab\xcd\xab\xcd\xab\xcd\xab\xcd\xab\xcd\xab\xcd\xab\xcd\xab\xcd'

498 
b
'\xab\xcd\xab\xcd\xab\xcd\xab\xcd\xab\xcd\xab\xcd\xab\xcd\xab\xcd\xab\xcd\xab\xcd\xab\xcd'

499 
b
'\xab\xcd\xab\xcd\xab\xcd\xab\xcd\xab\xcd\xab\xcd')

500 
ëh
 = 
	$Ethî√t
(
s
)

501 
as£π
 
	`Àn
(
ëh
.
m∂s_œbñs
) == 2

502 
as£π
 
ëh
.
m∂s_œbñs
[0].
vÆ
 == 18

503 
as£π
 
ëh
.
m∂s_œbñs
[1].
vÆ
 == 16

504 
as£π
 
ëh
.
œbñs
 == [(18, 0, 255), (16, 0, 255)]

505 
as£π
 
	$isö°™˚
(
ëh
.
d©a
, 
ù
.
IP
)

508 
as£π
 
	`°r
(
ëh
Ë=°r(
s
), 'pack 1'

509 
as£π
 
	`°r
(
ëh
Ë=°r(
s
), 'pack 2'

510 
as£π
 
	`Àn
(
ëh
Ë=
	$Àn
(
s
)

512 #c⁄°ru˘i⁄ 
wôh
 
kw¨gs


513 
ëh2
 = 
	$Ethî√t
(
§c
=
ëh
.§c, 
d°
Ûth.d°, 
m∂s_œbñs
Ûth.m∂s_œbñs, 
d©a
=eth.data)

514 
as£π
 
	`°r
(
ëh2
Ë=
	$°r
(
s
)

516 #c⁄°ru˘i⁄ 
w
/
o
 
œbñs


517 
dñ
 
ëh
.
œbñs
,Éth.
m∂s_œbñs


518 
as£π
 
	`°r
(
ëh
Ë=°r(
s
[:12] + 
b
'\x08\x00' + s[22:])

521 
def
 
	$ã°_i¶_ëh_Œc_°p
(): #ISL - 802.3 
	`Ethî√t
(
w
/
FCS
Ë- 
LLC
 - 
STP


522 
‰om
 . 
imp‹t
 
°p


523 
s
 = (
b
'\x01\x00\x0c\x00\x00\x03\x00\x02\xfd\x2c\xb8\x97\x00\x00\xaa\xaa\x03\x00\x00\x00\x02\x9b'

524 
b
'\x00\x00\x00\x00\x01\x80\xc2\x00\x00\x00\x00\x02\xfd\x2c\xb8\x98\x00\x26\x42\x42\x03\x00'

525 
b
'\x00\x00\x00\x00\x80\x00\x00\x02\xfd\x2c\xb8\x83\x00\x00\x00\x00\x80\x00\x00\x02\xfd\x2c'

526 
b
'\xb8\x83\x80\x26\x00\x00\x14\x00\x02\x00\x0f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x41\xc6'

527 
b
'\x75\xd6')

528 
ëh
 = 
	$Ethî√t
(
s
)

529 
as£π
 
ëh
.
vœn
 == 333

530 
as£π
 
	`Àn
(
ëh
.
vœn_ègs
) == 1

531 
as£π
 
ëh
.
vœn_ègs
[0].
id
 == 333

532 
as£π
 
ëh
.
vœn_ègs
[0].
¥i
 == 3

534 #check 
th©
 
FCS
 
was
 
decoded


535 
as£π
 
ëh
.
fcs
 == 0x41c675d6

536 
as£π
 
ëh
.
åaûî
 =
b
'\x00' * 8

539 
as£π
 
	$isö°™˚
(
ëh
.
d©a
, 
Œc
.
LLC
)

540 
as£π
 
	$isö°™˚
(
ëh
.
d©a
.d©a, 
°p
.
STP
)

543 
as£π
 
	`°r
(
ëh
Ë=°r(
s
), 'pack 1'

544 
as£π
 
	`°r
(
ëh
Ë=°r(
s
), 'pack 2'

545 
as£π
 
	`Àn
(
ëh
Ë=
	$Àn
(
s
)

547 #c⁄°ru˘i⁄ 
wôh
 
kw¨gs


548 
ëh2
 = 
	$Ethî√t
(
§c
=
ëh
.§c, 
d°
Ûth.d°, 
vœn_ègs
Ûth.vœn_ègs, 
d©a
=eth.data)

549 
ëh2
.
åaûî
 = 
ëh
.trailer

550 
ëh2
.
fcs
 = 
N⁄e


551 #ã° 
FCS
 
compuèti⁄


552 
as£π
 
	`°r
(
ëh2
Ë=
	$°r
(
s
)

554 #c⁄°ru˘i⁄ 
w
/
o
 
the
 
ISL
 
èg


555 
dñ
 
ëh
.
vœn_ègs
,Éth.
vœn


556 
as£π
 
	`°r
(
ëh
Ë=
	$°r
(
s
[26:])

559 
def
 
	$ã°_ëh_Œc_¢≠_cdp
(): #802.3 
Ethî√t
 - 
LLC
/
SNAP
 - 
CDP


560 
‰om
 . 
imp‹t
 
cdp


561 
s
 = (
b
'\x01\x00\x0c\xcc\xcc\xcc\xc4\x022k\x00\x00\x01T\xaa\xaa\x03\x00\x00\x0c \x00\x02\xb4,B'

562 
b
'\x00\x01\x00\x06R2\x00\x05\x00\xffCisco IOS Software, 3700 Software (C3745-ADVENTERPRI'

563 
b
'SEK9_SNA-M), Version 12.4(25d), RELEASE SOFTWARE (fc1)\nTechnical Support: http://www.'

564 
b
'cisco.com/techsupport\nCopyright (c) 1986-2010 by Cisco Systems, Inc.\nCompiled Wed 18'

565 
b
'-Aug-10 08:18 byÖrod_rel_team\x00\x06\x00\x0eCisco 3745\x00\x02\x00\x11\x00\x00\x00\x01'

566 
b
'\x01\x01\xcc\x00\x04\n\x00\x00\x02\x00\x03\x00\x13FastEthernet0/0\x00\x04\x00\x08\x00'

567 
b
'\x00\x00)\x00\t\x00\x04\x00\x0b\x00\x05\x00')

568 
ëh
 = 
	$Ethî√t
(
s
)

571 
as£π
 
	$isö°™˚
(
ëh
.
d©a
, 
Œc
.
LLC
)

572 
as£π
 
	$isö°™˚
(
ëh
.
d©a
.d©a, 
cdp
.
CDP
)

573 
as£π
 
	`Àn
(
ëh
.
d©a
.d©a.d©aË=8 #numbî 
of
 
CDP
 
TLVs
; 
ísuªs
 
they
 
¨e
 
decoded


574 
as£π
 
	`°r
(
ëh
Ë=°r(
s
), 'pack 1'

575 
as£π
 
	`°r
(
ëh
Ë=°r(
s
), 'pack 2'

576 
as£π
 
	`Àn
(
ëh
Ë=
	$Àn
(
s
)

579 
def
 
	$ã°_ëh_Œc_ùx
(): #802.3 
Ethî√t
 - 
LLC
 - 
IPX


580 
‰om
 . 
imp‹t
 
ùx


581 
s
 = (
b
'\xff\xff\xff\xff\xff\xff\x00\xb0\xd0\x22\xf7\xf3\x00\x54\xe0\xe0\x03\xff\xff\x00\x50\x00'

582 
b
'\x14\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\x04\x55\x00\x00\x00\x00\x00\xb0\xd0\x22\xf7'

583 
b
'\xf3\x04\x55\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'

584 
b
'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x01\x02\x5f\x5f\x4d\x53\x42'

585 
b
'\x52\x4f\x57\x53\x45\x5f\x5f\x02\x01\x00')

586 
ëh
 = 
	$Ethî√t
(
s
)

589 
as£π
 
	$isö°™˚
(
ëh
.
d©a
, 
Œc
.
LLC
)

590 
as£π
 
	$isö°™˚
(
ëh
.
d©a
.d©a, 
ùx
.
IPX
)

591 
as£π
 
ëh
.
d©a
.d©a.
±
 == 0x14

592 
as£π
 
	`°r
(
ëh
Ë=°r(
s
), 'pack 1'

593 
as£π
 
	`°r
(
ëh
Ë=°r(
s
), 'pack 2'

594 
as£π
 
	`Àn
(
ëh
Ë=
	$Àn
(
s
)

597 
def
 
	$ã°_ëh_µp€
(): #Eth - 
PPPoE
 - 
IPv6
 - 
UDP
 - 
DHCP6


598 
‰om
 . 
imp‹t
 
ù
 #IPv6 
√eds
 
this
 
to
 
buûd
 
ôs
 
¥Ÿocﬁ
 
°ack


599 
‰om
 . 
imp‹t
 
ù6


600 
‰om
 . 
imp‹t
 
µp


601 
‰om
 . 
imp‹t
 
µp€


602 
‰om
 . 
imp‹t
 
udp


603 
s
 = (
b
'\xca\x01\x0e\x88\x00\x06\xcc\x05\x0e\x88\x00\x00\x88\x64\x11\x00\x00\x11\x00\x64\x57\x6e'

604 
b
'\x00\x00\x00\x00\x3a\x11\xff\xfe\x80\x00\x00\x00\x00\x00\x00\xce\x05\x0e\xff\xfe\x88\x00'

605 
b
'\x00\xff\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x02\x02\x22\x02\x23\x00'

606 
b
'\x3a\x1a\x67\x01\xfc\x24\xab\x00\x08\x00\x02\x05\xe9\x00\x01\x00\x0a\x00\x03\x00\x01\xcc'

607 
b
'\x05\x0e\x88\x00\x00\x00\x06\x00\x06\x00\x19\x00\x17\x00\x18\x00\x19\x00\x0c\x00\x09\x00'

608 
b
'\x01\x00\x00\x00\x00\x00\x00\x00\x00')

609 
ëh
 = 
	$Ethî√t
(
s
)

612 
as£π
 
	$isö°™˚
(
ëh
.
d©a
, 
µp€
.
PPPoE
)

613 
as£π
 
	$isö°™˚
(
ëh
.
d©a
.d©a, 
µp
.
PPP
)

614 
as£π
 
	$isö°™˚
(
ëh
.
d©a
.d©a.d©a, 
ù6
.
IP6
)

615 
as£π
 
	$isö°™˚
(
ëh
.
d©a
.d©a.d©a.d©a, 
udp
.
UDP
)

618 
as£π
 
	`°r
(
ëh
Ë=
	$°r
(
s
)

619 
as£π
 
	`Àn
(
ëh
Ë=
	$Àn
(
s
)

625 
__«me__
 == '__main__':

626 
	$ã°_ëh
()

627 
	$ã°_ëh_öô_wôh_d©a
()

628 
	$ã°_m∂s_œbñ
()

629 
	$ã°_802dŸ1q_èg
()

630 
	$ã°_i¶_èg
()

631 
	$ã°_ëh_802dŸ1q
()

632 
	$ã°_ëh_802dŸ1q_°acked
()

633 
	$ã°_ëh_m∂s_°acked
()

634 
	$ã°_i¶_ëh_Œc_°p
()

635 
	$ã°_ëh_Œc_¢≠_cdp
()

636 
	$ã°_ëh_Œc_ùx
()

637 
	$ã°_ëh_µp€
()

639 
	`¥öt
('Tests Successful...')

	@gre.py

1 #$Id: 
gª
.
py
 75 2010-08-03 14:42:19
Z
 
j⁄
.
obîheide
 
$


2 #-*- 
codög
: 
utf
-8 -*-

4 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


6 
imp‹t
 

7 
imp‹t
 
codecs


9 
	g‰om
 . 
imp‹t
 
dpkt


10 
	g‰om
 . 
imp‹t
 
ëhî√t


11 
	g‰om
 .
dec‹©‹s
 
imp‹t
 
dïªˇãd


12 
	g‰om
 .
com∑t
 
imp‹t
 
com∑t_izù


14 
	gGRE_CP
 = 0x8000 #Checksum 
Pª£¡


15 
GRE_RP
 = 0x4000 #Routög 
Pª£¡


16 
GRE_KP
 = 0x2000 #Key 
Pª£¡


17 
GRE_SP
 = 0x1000 #Sequí˚ 
Pª£¡


18 
GRE_SS
 = 0x0800 #Såi˘ 
Sour˚
 
Rouã


19 
GRE_AP
 = 0x0080 #AcknowÀdgmíà
Pª£¡


21 
GRE_›t_fõlds
 = (

22 (
GRE_CP
 | 
GRE_RP
, 'sum', 'H'), (
	gGRE_CP
 | 
	gGRE_RP
, 'off', 'H'),

23 (
	gGRE_KP
, 'key', 'I'), (
	gGRE_SP
, '£q', 'I'), (
	gGRE_AP
, 'ack', 'I')

27 
˛ass
 
	$GRE
(
dpkt
.
Packë
):

30 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

32 
Aâribuãs
:

33 
__hdr__
: 
Hódî
 
fõlds
 
of
 
GRE
.

34 
TODO
.

37 
__hdr__
 = (

41 
§e
 = ()

43 @
¥›îty


44 
def
 
	$v
(
£lf
):

45  
£lf
.
Êags
 & 0x7

47 @
v
.
£âî


48 
def
 
	$v
(
£lf
, 
v
):

49 
£lf
.
Êags
 = (£lf.Êag†& ~0x7Ë| (
v
 & 0x7)

51 @
¥›îty


52 
def
 
	$ªcur
(
£lf
):

53  (
£lf
.
Êags
 >> 5) & 0x7

55 @
ªcur
.
£âî


56 
def
 
	$ªcur
(
£lf
, 
v
):

57 
£lf
.
Êags
 = (£lf.Êag†& ~0xe0Ë| ((
v
 & 0x7) << 5)

59 
˛ass
 
	$SRE
(
dpkt
.
Packë
):

60 
__hdr__
 = [

66 
def
 
	$u≈ack
(
£lf
, 
buf
):

67 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

68 
£lf
.
d©a
 = sñf.d©a[:£lf.
Àn
]

70 
def
 
	$›t_fõlds_fmts
(
£lf
):

71 
£lf
.
v
 == 0:

72 
fõlds
, 
fmts
 = [], []

73 
›t_fõlds
 = 
GRE_›t_fõlds


75 
fõlds
, 
fmts
 = ['len', 'callid'], ['H', 'H']

76 
›t_fõlds
 = 
GRE_›t_fõlds
[-2:]

77 
Êags
, 
fõld
, 
fmt
 
ö
 
›t_fõlds
:

78 
£lf
.
Êags
 & flags:

79 
fõlds
.
	$≠≥nd
(
fõld
)

80 
fmts
.
	$≠≥nd
(
fmt
)

81  
fõlds
, 
fmts


83 
def
 
	$u≈ack
(
£lf
, 
buf
):

84 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

85 
fõlds
, 
fmts
 = 
£lf
.
	$›t_fõlds_fmts
()

86 
fõlds
:

87 
fmt
 = ''.
	$joö
(
fmts
)

88 
fméí
 = .
	$ˇlcsize
(
fmt
)

89 
vÆs
 = .
	`u≈ack
("!" + 
fmt
, 
£lf
.
d©a
[:
fméí
])

90 
£lf
.
d©a
 = sñf.d©a[
fméí
:]

91 
£lf
.
__di˘__
.
	`upd©e
(
	`di˘
(
	$com∑t_izù
(
fõlds
, 
vÆs
)))

92 
£lf
.
Êags
 & 
GRE_RP
:

93 
l
 = []

94 
True
:

95 
§e
 = 
£lf
.
	$SRE
(
£lf
.
d©a
)

96 
£lf
.
d©a
 = sñf.d©a[
	$Àn
(
§e
):]

97 
l
.
	$≠≥nd
(
§e
)

98 
nŸ
 
§e
.
Àn
:

100 
£lf
.
§e
 = 
l


101 
åy
:

102 
£lf
.
d©a
 = 
ëhî√t
.
Ethî√t
.
_ty≥sw
[£lf.
p
](self.data)

103 
	`£èâr
(
£lf
, sñf.
d©a
.
__˛ass__
.
__«me__
.
	`lowî
(), self.data)

104 
	$ex˚±
 (
KeyEº‹
, 
dpkt
.
U≈ackEº‹
):

105 #d©®
Æødy
 
£t


106 
∑ss


108 
def
 
	$__Àn__
(
£lf
):

109 
›t_fméí
 = .
	`ˇlcsize
(''.
	`joö
(
£lf
.
	`›t_fõlds_fmts
()[1]))

110  
£lf
.
__hdr_Àn__
 + 
›t_fméí
 + 
	`sum
(
	`m≠
(
Àn
, sñf.
§e
)Ë+ 
	$Àn
(
£lf
.
d©a
)

112 
def
 
	$__byãs__
(
£lf
):

113 
fõlds
, 
fmts
 = 
£lf
.
	$›t_fõlds_fmts
()

114 
fõlds
:

115 
vÆs
 = []

116 
f
 
ö
 
fõlds
:

117 
vÆs
.
	`≠≥nd
(
	$gë©å
(
£lf
, 
f
))

118 
›t_s
 = .
	`∑ck
(
b
''.
	`joö
(
fmts
), *
vÆs
)

120 
›t_s
 = 
b
''

121  
£lf
.
	`∑ck_hdr
(Ë+ 
›t_s
 + 
b
''.
	`joö
(
	`m≠
(
byãs
, sñf.
§e
)Ë+ 
	$byãs
(
£lf
.
d©a
)

124 
def
 
	$ã°_gª_v1
():

125 #Run†
Æl
 
the
 
ã°
 
assocüãd
 
wôh
 
this
 
˛ass
/
fûe


126 
s
 = 
codecs
.
	`decode
("3081880a0067178000068fb100083a76", 'hex'Ë+ 
b
"A" * 103

127 
g
 = 
	$GRE
(
s
)

129 
as£π
 
g
.
v
 == 1

130 
as£π
 
g
.
p
 == 0x880a

131 
as£π
 
g
.
£q
 == 430001

132 
as£π
 
g
.
ack
 == 539254

133 
as£π
 
g
.
ˇŒid
 == 6016

134 
as£π
 
g
.
Àn
 == 103

135 
as£π
 
g
.
d©a
 =
b
"A" * 103

136 
as£π
 
	`Àn
(
g
Ë=
	$Àn
(
s
)

138 
s
 = 
codecs
.
	`decode
("3001880a00b2001100083ab8", 'hex'Ë+ 
b
"A" * 178

139 
g
 = 
	$GRE
(
s
)

141 
as£π
 
g
.
v
 == 1

142 
as£π
 
g
.
p
 == 0x880a

143 
as£π
 
g
.
£q
 == 539320

144 
as£π
 
g
.
ˇŒid
 == 17

145 
as£π
 
g
.
Àn
 == 178

146 
as£π
 
g
.
d©a
 =
b
"A" * 178

147 
as£π
 
	`Àn
(
g
Ë=
	$Àn
(
s
)

149 
def
 
	$ã°_gª_Àn
():

150 
gª
 = 
	$GRE
()

151 
as£π
 
	`Àn
(
gª
) == 4

153 
__«me__
 == '__main__':

154 
	$ã°_gª_v1
()

155 
	`ã°_gª_Àn
()

	@gzip.py

1 #$Id: 
gzù
.
py
 23 2006-11-08 15:45:33
Z
 
dugs⁄g
 
$


2 #-*- 
codög
: 
utf
-8 -*-

4 
‰om
 
__futuª__
 
imp‹t
 
¥öt_fun˘i⁄


5 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


7 
imp‹t
 

8 
imp‹t
 
zlib


9 
imp‹t
 
böascii


11 
	g‰om
 . 
imp‹t
 
	gdpkt


15 
	gGZIP_MAGIC
 = 
b
'\x1f\x8b'

17 #Com¥essi⁄ 
mëhods


18 
GZIP_MSTORED
 = 0

19 
GZIP_MCOMPRESS
 = 1

20 
GZIP_MPACKED
 = 2

21 
GZIP_MLZHED
 = 3

22 
GZIP_MDEFLATE
 = 8

25 
GZIP_FTEXT
 = 0x01

26 
GZIP_FHCRC
 = 0x02

27 
GZIP_FEXTRA
 = 0x04

28 
GZIP_FNAME
 = 0x08

29 
GZIP_FCOMMENT
 = 0x10

30 
GZIP_FENCRYPT
 = 0x20

31 
GZIP_FRESERVED
 = 0xC0

34 
GZIP_OS_MSDOS
 = 0

35 
GZIP_OS_AMIGA
 = 1

36 
GZIP_OS_VMS
 = 2

37 
GZIP_OS_UNIX
 = 3

38 
GZIP_OS_VMCMS
 = 4

39 
GZIP_OS_ATARI
 = 5

40 
GZIP_OS_OS2
 = 6

41 
GZIP_OS_MACOS
 = 7

42 
GZIP_OS_ZSYSTEM
 = 8

43 
GZIP_OS_CPM
 = 9

44 
GZIP_OS_TOPS20
 = 10

45 
GZIP_OS_WIN32
 = 11

46 
GZIP_OS_QDOS
 = 12

47 
GZIP_OS_RISCOS
 = 13

48 
GZIP_OS_UNKNOWN
 = 255

50 
GZIP_FENCRYPT_LEN
 = 12

53 
˛ass
 
	$GzùExåa
(
dpkt
.
Packë
):

54 
__byã_‹dî__
 = '<'

55 
__hdr__
 = (

61 
˛ass
 
	$Gzù
(
dpkt
.
Packë
):

62 
__byã_‹dî__
 = '<'

63 
__hdr__
 = (

64 ('magic', '2s', 
GZIP_MAGIC
),

65 ('mëhod', 'B', 
GZIP_MDEFLATE
),

69 ('os', 'B', 
GZIP_OS_UNIX
),

71 ('exåa', '0s', ''), #XXX - 
GZIP_FEXTRA


72 ('fûíame', '0s', ''), #XXX - 
GZIP_FNAME


73 ('commít', '0s', ''Ë#XXX - 
GZIP_FCOMMENT


76 
def
 
	$u≈ack
(
£lf
, 
buf
):

77 
	`su≥r
(
Gzù
, 
£lf
).
	$u≈ack
(
buf
)

78 
£lf
.
Êags
 & 
GZIP_FEXTRA
:

79 
	`Àn
(
£lf
.
d©a
) < 2:

80 
øi£
 
dpkt
.
	`NìdD©a
('GzipÉxtra')

81 
n
 = .
	`u≈ack
('<H', 
£lf
.
d©a
[:2])[0]

82 
	`Àn
(
£lf
.
d©a
Ë< 2 + 
n
:

83 
øi£
 
dpkt
.
	`NìdD©a
('GzipÉxtra')

84 
£lf
.
exåa
 = 
	`GzùExåa
(£lf.
d©a
[2:2 + 
n
])

85 
£lf
.
d©a
 = sñf.d©a[2 + 
n
:]

86 
£lf
.
Êags
 & 
GZIP_FNAME
:

87 
n
 = 
£lf
.
d©a
.
	`föd
(
b
'\x00')

88 
n
 == -1:

89 
øi£
 
dpkt
.
	`NìdD©a
('GzipÉnd of fileÇameÇot found')

90 
£lf
.
fûíame
 = sñf.
d©a
[:
n
].
	`decode
('utf-8')

91 
£lf
.
d©a
 = sñf.d©a[
n
 + 1:]

92 
£lf
.
Êags
 & 
GZIP_FCOMMENT
:

93 
n
 = 
£lf
.
d©a
.
	`föd
(
b
'\x00')

94 
n
 == -1:

95 
øi£
 
dpkt
.
	`NìdD©a
('GzipÉnd of commentÇot found')

96 
£lf
.
commít
 = sñf.
d©a
[:
n
]

97 
£lf
.
d©a
 = sñf.d©a[
n
 + 1:]

98 
£lf
.
Êags
 & 
GZIP_FENCRYPT
:

99 
	`Àn
(
£lf
.
d©a
Ë< 
GZIP_FENCRYPT_LEN
:

100 
øi£
 
dpkt
.
	`NìdD©a
('GzipÉncrypt')

101 
£lf
.
d©a
 = sñf.d©a[
GZIP_FENCRYPT_LEN
:] #XXX - 
skù


102 
£lf
.
Êags
 & 
GZIP_FHCRC
:

103 
	`Àn
(
£lf
.
d©a
) < 2:

104 
øi£
 
dpkt
.
	`NìdD©a
('Gzip hcrc')

105 
£lf
.
d©a
 = sñf.d©a[2:] #XXX - 
skù


107 
def
 
	$∑ck_hdr
(
£lf
):

108 
l
 = []

109 
£lf
.
exåa
:

110 
£lf
.
Êags
 |
GZIP_FEXTRA


111 
s
 = 
	$byãs
(
£lf
.
exåa
)

112 
l
.
	`≠≥nd
(.
	`∑ck
('<H', 
	$Àn
(
s
)))

113 
l
.
	$≠≥nd
(
s
)

114 
£lf
.
fûíame
:

115 
£lf
.
Êags
 |
GZIP_FNAME


116 
l
.
	$≠≥nd
(
£lf
.
fûíame
)

117 
l
.
	`≠≥nd
(
b
'\x00')

118 
£lf
.
commít
:

119 
£lf
.
Êags
 |
GZIP_FCOMMENT


120 
l
.
	$≠≥nd
(
£lf
.
commít
)

121 
l
.
	`≠≥nd
(
b
'\x00')

122 
l
.
	`ö£π
(0, 
	`su≥r
(
Gzù
, 
£lf
).
	$∑ck_hdr
())

123  
b
''.
	$joö
(
l
)

125 
def
 
	$com¥ess
(
£lf
):

127 
c
 = 
zlib
.
	`com¥essobj
(9, zlib.
DEFLATED
, -zlib.
MAX_WBITS
,

128 
zlib
.
DEF_MEM_LEVEL
, 0)

129 
£lf
.
d©a
 = 
c
.
	$com¥ess
(
£lf
.
d©a
)

131 
def
 
	$decom¥ess
(
£lf
):

133 
d
 = 
zlib
.
	`decom¥essobj
(-zlib.
MAX_WBITS
)

134  
d
.
	$decom¥ess
(
£lf
.
d©a
)

137 
_hexdecode
 = 
böascii
.
a2b_hex


139 
˛ass
 
	$Te°Gzù
(
obje˘
):

143 @
˛assmëhod


144 
def
 
	$£tup_˛ass
(
˛s
):

145 
˛s
.
d©a
 = 
	`_hexdecode
(
b
'1F8B' #magic

146 
b
'080880C185560003' #header

147 
b
'68656C6C6F2E74787400' #filename

148 
b
'F348CDC9C95728CF2FCA4951E40200' #data

149 
b
'41E4A9B20D000000') #checksum

150 
˛s
.
p
 = 
	$Gzù
(
˛s
.
d©a
)

152 
def
 
	$ã°_mëhod
(
£lf
):

153 
	$as£π
 (
£lf
.
p
.
mëhod
 =
GZIP_MDEFLATE
)

155 
def
 
	$ã°_Êags
(
£lf
):

156 
	$as£π
 (
£lf
.
p
.
Êags
 =
GZIP_FNAME
)

158 
def
 
	$ã°_mtime
(
£lf
):

159 #Frò
J™
 01 00:00:00 2016 
UTC


160 
	$as£π
 (
£lf
.
p
.
mtime
 == 0x5685c180)

162 
def
 
	$ã°_xÊags
(
£lf
):

163 
	$as£π
 (
£lf
.
p
.
xÊags
 == 0)

165 
def
 
	$ã°_os
(
£lf
):

166 
	$as£π
 (
£lf
.
p
.
os
 =
GZIP_OS_UNIX
)

168 
def
 
	$ã°_fûíame
(
£lf
):

169 
	`as£π
 (
£lf
.
p
.
fûíame
 ="hñlo.txt"Ë#Æway†
	`°r
 (
utf
-8)

171 
def
 
	$ã°_decom¥ess
(
£lf
):

172 
	`as£π
 (
£lf
.
p
.
	`decom¥ess
(Ë=
b
"Hñlÿw‹ld!\n"Ë#Æway†
byãs


175 
__«me__
 == '__main__':

176 
imp‹t
 
sys


178 
gz
 = 
	`Gzù
(
	`›í
(
sys
.
¨gv
[1]).
	$ªad
())

179 
	`¥öt
(
	`ª¥
(
gz
),Ñïr(gz.
	`decom¥ess
()))

	@h225.py

1 #$Id: 
h225
.
py
 23 2006-11-08 15:45:33
Z
 
dugs⁄g
 
$


2 #-*- 
codög
: 
utf
-8 -*-

4 
‰om
 
__futuª__
 
imp‹t
 
¥öt_fun˘i⁄


5 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


7 
imp‹t
 

9 
	g‰om
 . 
imp‹t
 
dpkt


10 
	g‰om
 . 
imp‹t
 
	gçkt


13 #H225 
CÆl
 
Sig«lög


14 #
#CÆ»
mesßges
 
™d
 
öf‹m©i⁄
 
ñemíts
 (
IEs
Ë
¨e
 
deföed
 
by
 
Q
.931:

17 #
#Thê
U£r
-
to
-U£∏
IEs
 
of
 
H225
 
¨e
 
ícoded
 
by
 
PER
 o‡
ASN
.1.

20 #CÆ»
E°ablishmít
 
Mesßges


21 
	gALERTING
 = 1

22 
CALL_PROCEEDING
 = 2

23 
CONNECT
 = 7

24 
CONNECT_ACKNOWLEDGE
 = 15

25 
PROGRESS
 = 3

26 
SETUP
 = 5

27 
SETUP_ACKNOWLEDGE
 = 13

29 #CÆ»
Inf‹m©i⁄
 
Pha£
 
Mesßges


30 
RESUME
 = 38

31 
RESUME_ACKNOWLEDGE
 = 46

32 
RESUME_REJECT
 = 34

33 
SUSPEND
 = 37

34 
SUSPEND_ACKNOWLEDGE
 = 45

35 
SUSPEND_REJECT
 = 33

36 
USER_INFORMATION
 = 32

38 #CÆ»
CÀ¨ög
 
Mesßges


39 
DISCONNECT
 = 69

40 
RELEASE
 = 77

41 
RELEASE_COMPLETE
 = 90

42 
RESTART
 = 70

43 
RESTART_ACKNOWLEDGE
 = 78

45 #Mis˚Œ™eou†
Mesßges


46 
SEGMENT
 = 96

47 
CONGESTION_CONTROL
 = 121

48 
INFORMATION
 = 123

49 
NOTIFY
 = 110

50 
STATUS
 = 125

51 
STATUS_ENQUIRY
 = 117

53 #Ty≥ 1 
SögÀ
 
O˘ë
 
Inf‹m©i⁄
 
EÀmít
 
IDs


54 
RESERVED
 = 128

55 
SHIFT
 = 144

56 
CONGESTION_LEVEL
 = 176

57 
REPEAT_INDICATOR
 = 208

59 #Ty≥ 2 
SögÀ
 
O˘ë
 
Inf‹m©i⁄
 
EÀmít
 
IDs


60 
MORE_DATA
 = 160

61 
SENDING_COMPLETE
 = 161

63 #V¨übÀ 
Lígth
 
Inf‹m©i⁄
 
EÀmít
 
IDs


64 
SEGMENTED_MESSAGE
 = 0

65 
BEARER_CAPABILITY
 = 4

66 
CAUSE
 = 8

67 
CALL_IDENTITY
 = 16

68 
CALL_STATE
 = 20

69 
CHANNEL_IDENTIFICATION
 = 24

70 
PROGRESS_INDICATOR
 = 30

71 
NETWORK_SPECIFIC_FACILITIES
 = 32

72 
NOTIFICATION_INDICATOR
 = 39

73 
DISPLAY
 = 40

74 
DATE_TIME
 = 41

75 
KEYPAD_FACILITY
 = 44

76 
SIGNAL
 = 52

77 
INFORMATION_RATE
 = 64

78 
END_TO_END_TRANSIT_DELAY
 = 66

79 
TRANSIT_DELAY_SELECTION_AND_INDICATION
 = 67

80 
PACKET_LAYER_BINARY_PARAMETERS
 = 68

81 
PACKET_LAYER_WINDOW_SIZE
 = 69

82 
PACKET_SIZE
 = 70

83 
CLOSED_USER_GROUP
 = 71

84 
REVERSE_CHARGE_INDICATION
 = 74

85 
CALLING_PARTY_NUMBER
 = 108

86 
CALLING_PARTY_SUBADDRESS
 = 109

87 
CALLED_PARTY_NUMBER
 = 112

88 
CALLED_PARTY_SUBADDRESS
 = 113

89 
REDIRECTING_NUMBER
 = 116

90 
TRANSIT_NETWORK_SELECTION
 = 120

91 
RESTART_INDICATOR
 = 121

92 
LOW_LAYER_COMPATIBILITY
 = 124

93 
HIGH_LAYER_COMPATIBILITY
 = 125

94 
USER_TO_USER
 = 126

95 
ESCAPE_FOR_EXTENSION
 = 127

98 
˛ass
 
	$H225
(
dpkt
.
Packë
):

101 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

103 
Aâribuãs
:

104 
__hdr__
: 
Hódî
 
fõlds
 
of
 
H225
.

105 
TODO
.

108 
__hdr__
 = (

113 
def
 
	$u≈ack
(
£lf
, 
buf
):

114 #TPKT 
hódî


115 
£lf
.
çkt
 =Åpkt.
	$TPKT
(
buf
)

116 
£lf
.
çkt
.
v
 != 3:

117 
øi£
 
dpkt
.
	`U≈ackEº‹
('invalid TPKT version')

118 
£lf
.
çkt
.
rsvd
 != 0:

119 
øi£
 
dpkt
.
	`U≈ackEº‹
('invalid TPKTÑeserved value')

120 
n
 = 
£lf
.
çkt
.
Àn
 - sñf.çkt.
__hdr_Àn__


121 
n
 > 
	$Àn
(
£lf
.
çkt
.
d©a
):

122 
øi£
 
dpkt
.
	`U≈ackEº‹
('invalid TPKTÜength')

123 
buf
 = 
£lf
.
çkt
.
d©a


125 #Q.931 
∑ylﬂd


126 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

127 
buf
 = buf[
£lf
.
__hdr_Àn__
:]

128 
£lf
.
ªf_vÆ
 = 
buf
[:£lf.
ªf_Àn
]

129 
buf
 = buf[
£lf
.
ªf_Àn
:]

130 
£lf
.
ty≥
 = .
	`u≈ack
('B', 
buf
[:1])[0]

131 
buf
 = buf[1:]

133 #Inf‹m©i⁄ 
EÀmíts


134 
l
 = []

135 
buf
:

136 
õ
 = 
£lf
.
	$IE
(
buf
)

137 
l
.
	$≠≥nd
(
õ
)

138 
buf
 = buf[
	$Àn
(
õ
):]

139 
£lf
.
d©a
 = 
l


141 
def
 
	$__Àn__
(
£lf
):

142  
£lf
.
çkt
.
__hdr_Àn__
 + sñf.__hdr_Àn__ + 
	`sum
(
	$m≠
(
Àn
, 
£lf
.
d©a
))

144 
def
 
	$__byãs__
(
£lf
):

145  
£lf
.
çkt
.
	`∑ck_hdr
(Ë+ sñf.∑ck_hdr(Ë+ sñf.
ªf_vÆ
 + \

146 .
	`∑ck
('B', 
£lf
.
ty≥
Ë+ 
b
''.
	`joö
(
	$m≠
(
byãs
, 
£lf
.
d©a
))

148 
˛ass
 
	$IE
(
dpkt
.
Packë
):

149 
__hdr__
 = (

153 
def
 
	$u≈ack
(
£lf
, 
buf
):

154 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

155 
buf
 = buf[
£lf
.
__hdr_Àn__
:]

157 #sögÀ-
byã
 
IE


158 
£lf
.
ty≥
 & 0x80:

159 
£lf
.
Àn
 = 0

160 
£lf
.
d©a
 = 
N⁄e


161 #mu…i-
byã
 
IE


163 #•ecü»
PER
-
ícoded
 
UUIE


164 
£lf
.
ty≥
 =
USER_TO_USER
:

165 
£lf
.
Àn
 = .
	`u≈ack
('>H', 
buf
[:2])[0]

166 
buf
 = buf[2:]

167 #n‹mÆ 
TLV
-
like
 
IE


169 
£lf
.
Àn
 = .
	`u≈ack
('B', 
buf
[:1])[0]

170 
buf
 = buf[1:]

171 
£lf
.
d©a
 = 
buf
[:£lf.
Àn
]

173 
def
 
	$__Àn__
(
£lf
):

174 
£lf
.
ty≥
 & 0x80:

175 
n
 = 0

177 
£lf
.
ty≥
 =
USER_TO_USER
:

178 
n
 = 2

180 
n
 = 1

181  
£lf
.
__hdr_Àn__
 + sñf.
Àn
 + 
n


183 
def
 
	$__byãs__
(
£lf
):

184 
£lf
.
ty≥
 & 0x80:

185 
Àngth_°r
 = 
N⁄e


187 
£lf
.
ty≥
 =
USER_TO_USER
:

188 
Àngth_°r
 = .
	`∑ck
('>H', 
£lf
.
Àn
)

190 
Àngth_°r
 = .
	`∑ck
('B', 
£lf
.
Àn
)

191  .
	`∑ck
('B', 
£lf
.
ty≥
Ë+ 
Àngth_°r
 + sñf.
d©a


194 
__s
 = 
b
'\x03\x00\x04\x11\x08\x02\x54\x2b\x05\x04\x03\x88\x93\xa5\x28\x0e\x4a\x6f\x6e\x20\x4f\x62\x65\x72\x68\x65\x69\x64\x65\x00\x7e\x03\xf0\x05\x20\xb8\x06\x00\x08\x91\x4a\x00\x04\x01\x40\x0c\x00\x4a\x00\x6f\x00\x6e\x00\x20\x00\x4f\x00\x62\x00\x65\x00\x72\x00\x68\x00\x65\x00\x69\x00\x64\x00\x65\x22\xc0\x09\x00\x00\x3d\x06\x65\x6b\x69\x67\x61\x00\x00\x14\x32\x2e\x30\x2e\x32\x20\x28\x4f\x50\x41\x4c\x20\x76\x32\x2e\x32\x2e\x32\x29\x00\x00\x00\x01\x40\x15\x00\x74\x00\x63\x00\x70\x00\x24\x00\x68\x00\x33\x00\x32\x00\x33\x00\x2e\x00\x76\x00\x6f\x00\x78\x00\x67\x00\x72\x00\x61\x00\x74\x00\x69\x00\x61\x00\x2e\x00\x6f\x00\x72\x00\x67\x00\x42\x87\x23\x2c\x06\xb8\x00\x6a\x8b\x1d\x0c\xb7\x06\xdb\x11\x9e\xca\x00\x10\xa4\x89\x6d\x6a\x00\xc5\x1d\x80\x04\x07\x00\x0a\x00\x01\x7a\x75\x30\x11\x00\x5e\x88\x1d\x0c\xb7\x06\xdb\x11\x9e\xca\x00\x10\xa4\x89\x6d\x6a\x82\x2b\x0e\x30\x40\x00\x00\x06\x04\x01\x00\x4c\x10\x09\x00\x00\x3d\x0f\x53\x70\x65\x65\x78\x20\x62\x73\x34\x20\x57\x69\x64\x65\x36\x80\x11\x1c\x00\x01\x00\x98\xa0\x26\x41\x13\x8a\x00\x98\xa0\x26\x41\x13\x8b\x26\x00\x00\x64\x0c\x10\x09\x00\x00\x3d\x0f\x53\x70\x65\x65\x78\x20\x62\x73\x34\x20\x57\x69\x64\x65\x36\x80\x0b\x0d\x00\x01\x00\x98\xa0\x26\x41\x13\x8b\x00\x2a\x40\x00\x00\x06\x04\x01\x00\x4c\x10\x09\x00\x00\x3d\x09\x69\x4c\x42\x43\x2d\x31\x33\x6b\x33\x80\x11\x1c\x00\x01\x00\x98\xa0\x26\x41\x13\x8a\x00\x98\xa0\x26\x41\x13\x8b\x20\x00\x00\x65\x0c\x10\x09\x00\x00\x3d\x09\x69\x4c\x42\x43\x2d\x31\x33\x6b\x33\x80\x0b\x0d\x00\x01\x00\x98\xa0\x26\x41\x13\x8b\x00\x20\x40\x00\x00\x06\x04\x01\x00\x4e\x0c\x03\x00\x83\x00\x80\x11\x1c\x00\x01\x00\x98\xa0\x26\x41\x13\x8a\x00\x98\xa0\x26\x41\x13\x8b\x16\x00\x00\x66\x0e\x0c\x03\x00\x83\x00\x80\x0b\x0d\x00\x01\x00\x98\xa0\x26\x41\x13\x8b\x00\x4b\x40\x00\x00\x06\x04\x01\x00\x4c\x10\xb5\x00\x53\x4c\x2a\x02\x00\x00\x00\x00\x00\x40\x01\x00\x00\x40\x01\x02\x00\x08\x00\x00\x00\x00\x00\x31\x00\x01\x00\x40\x1f\x00\x00\x59\x06\x00\x00\x41\x00\x00\x00\x02\x00\x40\x01\x00\x00\x80\x11\x1c\x00\x01\x00\x98\xa0\x26\x41\x13\x8a\x00\x98\xa0\x26\x41\x13\x8b\x41\x00\x00\x67\x0c\x10\xb5\x00\x53\x4c\x2a\x02\x00\x00\x00\x00\x00\x40\x01\x00\x00\x40\x01\x02\x00\x08\x00\x00\x00\x00\x00\x31\x00\x01\x00\x40\x1f\x00\x00\x59\x06\x00\x00\x41\x00\x00\x00\x02\x00\x40\x01\x00\x00\x80\x0b\x0d\x00\x01\x00\x98\xa0\x26\x41\x13\x8b\x00\x32\x40\x00\x00\x06\x04\x01\x00\x4c\x10\x09\x00\x00\x3d\x11\x53\x70\x65\x65\x78\x20\x62\x73\x34\x20\x4e\x61\x72\x72\x6f\x77\x33\x80\x11\x1c\x00\x01\x00\x98\xa0\x26\x41\x13\x8a\x00\x98\xa0\x26\x41\x13\x8b\x28\x00\x00\x68\x0c\x10\x09\x00\x00\x3d\x11\x53\x70\x65\x65\x78\x20\x62\x73\x34\x20\x4e\x61\x72\x72\x6f\x77\x33\x80\x0b\x0d\x00\x01\x00\x98\xa0\x26\x41\x13\x8b\x00\x1d\x40\x00\x00\x06\x04\x01\x00\x4c\x60\x1d\x80\x11\x1c\x00\x01\x00\x98\xa0\x26\x41\x13\x8a\x00\x98\xa0\x26\x41\x13\x8b\x13\x00\x00\x69\x0c\x60\x1d\x80\x0b\x0d\x00\x01\x00\x98\xa0\x26\x41\x13\x8b\x00\x1d\x40\x00\x00\x06\x04\x01\x00\x4c\x20\x1d\x80\x11\x1c\x00\x01\x00\x98\xa0\x26\x41\x13\x8a\x00\x98\xa0\x26\x41\x13\x8b\x13\x00\x00\x6a\x0c\x20\x1d\x80\x0b\x0d\x00\x01\x00\x98\xa0\x26\x41\x13\x8b\x00\x01\x00\x01\x00\x01\x00\x01\x00\x81\x03\x02\x80\xf8\x02\x70\x01\x06\x00\x08\x81\x75\x00\x0b\x80\x13\x80\x01\xf4\x00\x01\x00\x00\x01\x00\x00\x01\x00\x00\x0c\xc0\x01\x00\x01\x80\x0b\x80\x00\x00\x20\x20\x09\x00\x00\x3d\x0f\x53\x70\x65\x65\x78\x20\x62\x73\x34\x20\x57\x69\x64\x65\x36\x80\x00\x01\x20\x20\x09\x00\x00\x3d\x09\x69\x4c\x42\x43\x2d\x31\x33\x6b\x33\x80\x00\x02\x24\x18\x03\x00\xe6\x00\x80\x00\x03\x20\x20\xb5\x00\x53\x4c\x2a\x02\x00\x00\x00\x00\x00\x40\x01\x00\x00\x40\x01\x02\x00\x08\x00\x00\x00\x00\x00\x31\x00\x01\x00\x40\x1f\x00\x00\x59\x06\x00\x00\x41\x00\x00\x00\x02\x00\x40\x01\x00\x00\x80\x00\x04\x20\x20\x09\x00\x00\x3d\x11\x53\x70\x65\x65\x78\x20\x62\x73\x34\x20\x4e\x61\x72\x72\x6f\x77\x33\x80\x00\x05\x20\xc0\xef\x80\x00\x06\x20\x40\xef\x80\x00\x07\x08\xe0\x03\x51\x00\x80\x01\x00\x80\x00\x08\x08\xd0\x03\x51\x00\x80\x01\x00\x80\x00\x09\x83\x01\x50\x80\x00\x0a\x83\x01\x10\x80\x00\x0b\x83\x01\x40\x00\x80\x01\x03\x06\x00\x00\x00\x01\x00\x02\x00\x03\x00\x04\x00\x05\x00\x06\x01\x00\x07\x00\x08\x00\x00\x09\x01\x00\x0a\x00\x0b\x07\x01\x00\x32\x80\xa6\xff\x4c\x02\x80\x01\x80'

197 
def
 
	$ã°_∑ck
():

198 
h
 = 
	$H225
(
__s
)

199 
	`as£π
 (
__s
 =
	$byãs
(
h
))

202 
def
 
	$ã°_u≈ack
():

203 
h
 = 
	$H225
(
__s
)

204 
	$as£π
 (
h
.
çkt
.
v
 == 3)

205 
	$as£π
 (
h
.
çkt
.
rsvd
 == 0)

206 
	$as£π
 (
h
.
çkt
.
Àn
 == 1041)

207 
	$as£π
 (
h
.
¥Ÿo
 == 8)

208 
	$as£π
 (
h
.
ty≥
 =
SETUP
)

209 
	`as£π
 (
	`Àn
(
h
.
d©a
) == 3)

211 
õ
 = 
h
.
d©a
[0]

212 
	$as£π
 (
õ
.
ty≥
 =
BEARER_CAPABILITY
)

213 
	$as£π
 (
õ
.
Àn
 == 3)

214 
õ
 = 
h
.
d©a
[1]

215 
	$as£π
 (
õ
.
ty≥
 =
DISPLAY
)

216 
	$as£π
 (
õ
.
Àn
 == 14)

217 
õ
 = 
h
.
d©a
[2]

218 
	$as£π
 (
õ
.
ty≥
 =
USER_TO_USER
)

219 
	$as£π
 (
õ
.
Àn
 == 1008)

222 
__«me__
 == '__main__':

223 
	$ã°_∑ck
()

224 
	$ã°_u≈ack
()

225 
	`¥öt
('Tests Successful...')

	@hsrp.py

1 #$Id: 
h§p
.
py
 23 2006-11-08 15:45:33
Z
 
dugs⁄g
 
$


2 #-*- 
codög
: 
utf
-8 -*-

4 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


6 
	g‰om
 . 
imp‹t
 
	gdpkt


9 
	gHELLO
 = 0

10 
COUP
 = 1

11 
RESIGN
 = 2

14 
INITIAL
 = 0x00

15 
LEARN
 = 0x01

16 
LISTEN
 = 0x02

17 
SPEAK
 = 0x04

18 
STANDBY
 = 0x08

19 
ACTIVE
 = 0x10

22 
˛ass
 
	$HSRP
(
dpkt
.
Packë
):

25 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

27 
Aâribuãs
:

28 
__hdr__
: 
Hódî
 
fõlds
 
of
 
HSRP
.

29 
TODO
.

32 
__hdr__
 = (

	@http.py

1 #$Id: 
hâp
.
py
 86 2013-03-05 19:25:19
Z
 
™dªwÊƒ
@
gmaû
.
com
 
$


2 #-*- 
codög
: 
utf
-8 -*-

4 
‰om
 
__futuª__
 
imp‹t
 
¥öt_fun˘i⁄


5 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


6 
	gåy
:

7 
‰om
 
cﬁÀ˘i⁄s
 
imp‹t
 
OrdîedDi˘


8 
ex˚±
 
Imp‹tEº‹
:

10 
OrdîedDi˘
 = 
di˘


12 
‰om
 . 
imp‹t
 
dpkt


13 
‰om
 .
com∑t
 
imp‹t
 
ByãsIO
, 
ôîôems


16 
def
 
	$∑r£_hódîs
(
f
):

18 
d
 = 
	$OrdîedDi˘
()

20 #Thê
fﬁlowög
 
logic
 
covîs
 
two
 
köds
 
of
 
lo›
 
exô
 
¸ôîü
.

21 #1Ë
If
 
the
 
hódî
 
is
 
vÆid
, 
whí
 
we
 
ªached
Åhê
íd
 
of
Åhe header,

22 #f.
	`ªadlöe
(Ë
would
  
wôh
 '\r\n', 
thí
 
a·î
 
	`°rù
(),

23 #wê
ˇn
  
the
 
lo›
.

24 #2Ë
If
 
this
 
is
 
a
 
weúd
 
hódî
, 
which
 dÿ
nŸ
 
íds
 
wôh
 '\r\n',

25 #f.
	`ªadlöe
(Ë
would
  
wôh
 '', 
thí
 
a·î
 
	`°rù
(),

26 #wê
°ûl
 
gë
 
™
 
em±y
 
°rög
, 
Æso
  
the
 
lo›
.

27 
löe
 = 
f
.
	`ªadlöe
().
	`°rù
().
	`decode
("ascii", "ignore")

28 
nŸ
 
löe
:

30 
l
 = 
löe
.
	`•lô
(':', 1)

31 
	`Àn
(
l
[0].
	`•lô
()) != 1:

32 
øi£
 
dpkt
.
	`U≈ackEº‹
('övÆid hódî: %r' % 
löe
)

33 
k
 = 
l
[0].
	$lowî
()

34 
v
 = 
	`Àn
(
l
Ë!1 
™d
Ü[1].
	$l°rù
(Ë
‹
 ''

35 
k
 
ö
 
d
:

36 
nŸ
 
	$ty≥
(
d
[
k
]Ë
is
 
li°
:

37 
d
[
k
] = [d[k]]

38 
d
[
k
].
	$≠≥nd
(
v
)

40 
d
[
k
] = 
v


41  
d


44 
def
 
	$∑r£_body
(
f
, 
hódîs
):

46 
hódîs
.
	`gë
('å™s„r-ícodög', '').
	`lowî
() == 'chunked':

47 
l
 = []

48 
found_íd
 = 
FÆ£


50 
åy
:

51 
sz
 = 
f
.
	`ªadlöe
().
	`•lô
(
N⁄e
, 1)[0]

52 
ex˚±
 
IndexEº‹
:

53 
øi£
 
dpkt
.
	`U≈ackEº‹
('missing chunk size')

54 
n
 = (
sz
, 16)

55 
n
 == 0:

56 
found_íd
 = 
True


57 
buf
 = 
f
.
	$ªad
(
n
)

58 
f
.
	`ªadlöe
().
	$°rù
():

60 
n
 
™d
 
	`Àn
(
buf
) ==Ç:

61 
l
.
	$≠≥nd
(
buf
)

64 
nŸ
 
found_íd
:

65 
øi£
 
dpkt
.
	`NìdD©a
('prematureÉnd of chunked body')

66 
body
 = 
b
''.
	$joö
(
l
)

67 
ñif
 'c⁄ã¡-Àngth' 
ö
 
hódîs
:

68 
n
 = (
hódîs
['content-length'])

69 
body
 = 
f
.
	$ªad
(
n
)

70 
	`Àn
(
body
Ë!
n
:

71 
øi£
 
dpkt
.
	`NìdD©a
('sh‹àbody (missög %d byãs)' % (
n
 - 
	$Àn
(
body
)))

72 
ñif
 'c⁄ã¡-ty≥' 
ö
 
hódîs
:

73 
body
 = 
f
.
	$ªad
()

75 #XXX - 
√ed
 
to
 
h™dÀ
 
HTTP
/0.9

76 
body
 = 
b
''

77  
body


80 
˛ass
 
	$Mesßge
(
dpkt
.
Packë
):

83 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

85 
Aâribuãs
:

86 
__hdr__
: 
Hódî
 
fõlds
 
of
 
HTTP
.

87 
TODO
.

90 
__mëa˛ass__
 = 
ty≥


91 
__hdr_deÁu…s__
 = {
	}
}

92 
hódîs
 = 
N⁄e


93 
body
 = 
N⁄e


95 
def
 
	$__öô__
(
£lf
, *
¨gs
, **
kw¨gs
):

96 
¨gs
:

97 
£lf
.
	$u≈ack
(
¨gs
[0])

99 
£lf
.
hódîs
 = 
	$OrdîedDi˘
()

100 
£lf
.
body
 = 
b
''

101 
£lf
.
d©a
 = 
b
''

102 #NOTE: 
ch™gög
 
this
 
to
 
ôîôems
 
bªaks
 
py3
 
com∑tibûôy


103 
k
, 
v
 
ö
 
£lf
.
__hdr_deÁu…s__
.
	$ôems
():

104 
	$£èâr
(
£lf
, 
k
, 
v
)

105 
k
, 
v
 
ö
 
	$ôîôems
(
kw¨gs
):

106 
	$£èâr
(
£lf
, 
k
, 
v
)

108 
def
 
	$u≈ack
(
£lf
, 
buf
, 
is_body_Ælowed
=
True
):

109 
f
 = 
	$ByãsIO
(
buf
)

110 #P¨£ 
hódîs


111 
£lf
.
hódîs
 = 
	$∑r£_hódîs
(
f
)

112 #P¨£ 
body


113 
is_body_Ælowed
:

114 
£lf
.
body
 = 
	$∑r£_body
(
f
, 
£lf
.
hódîs
)

115 #Savê
the
 
ª°


116 
£lf
.
d©a
 = 
f
.
	$ªad
()

118 
def
 
	$∑ck_hdr
(
£lf
):

119  ''.
	`joö
(['%s: %s\r\n' % 
t
 à
ö
 
	`ôîôems
(
£lf
.
hódîs
)])

121 
def
 
	$__Àn__
(
£lf
):

122  
	`Àn
(
	$°r
(
£lf
))

124 
def
 
	$__°r__
(
£lf
):

125  '%s\r\n%s' % (
£lf
.
	`∑ck_hdr
(), sñf.
body
.
	`decode
("utf8", "ignore"))

127 
def
 
	$__byãs__
(
£lf
):

128 #NŸ 
usög
 
byã
 
öãΩﬁ©i⁄
 
to
 
¥e£rve
 
Pyth⁄
 3.4 
com∑tibûôy
. 
The
 
exåa


129 #\
r
\
n
 
d€¢
'àgëÅrimmed fromÅhêbyãs, sÿô'
s
 
√˚sßry
 
to
 
omô
 
the
 
•acög


130 #⁄ê
whí
 
buûdög
 
the
 
ouçut
 
thîe
'sÇo body

131 
£lf
.
body
:

132  
£lf
.
	`∑ck_hdr
().
	`ícode
("ascii", "ign‹e"Ë+ 
b
'\r\n' + sñf.
body


134  
£lf
.
	`∑ck_hdr
().
	`ícode
("ascii", "ignore")

137 
˛ass
 
	$Reque°
(
Mesßge
):

140 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

142 
Aâribuãs
:

143 
__hdr__
: 
Hódî
 
fõlds
 
of
 
HTTP
 
ªque°
.

144 
TODO
.

147 
__hdr_deÁu…s__
 = {

151 
	}
}

152 
__mëhods
 = 
di˘
.
‰omkeys
((

165 
	g__¥Ÿo
 = 'HTTP'

167 
def
 
	$u≈ack
(
£lf
, 
buf
):

168 
f
 = 
	$ByãsIO
(
buf
)

169 
löe
 = 
f
.
	`ªadlöe
().
	`decode
("ascii", "ignore")

170 
l
 = 
löe
.
	`°rù
().
	$•lô
()

171 
	`Àn
(
l
) < 2:

172 
øi£
 
dpkt
.
	`U≈ackEº‹
('övÆidÑeque°: %r' % 
löe
)

173 
l
[0] 
nŸ
 
ö
 
£lf
.
__mëhods
:

174 
øi£
 
dpkt
.
	`U≈ackEº‹
('övÆid hâ∞mëhod: %r' % 
l
[0])

175 
	`Àn
(
l
) == 2:

176 #HTTP/0.9 
d€s
 
nŸ
 
•ecify
 
a
 
vîsi⁄
 
ö
 
the
 
ªque°
 
löe


177 
£lf
.
vîsi⁄
 = '0.9'

179 
nŸ
 
l
[2].
	$°¨tswôh
(
£lf
.
__¥Ÿo
):

180 
øi£
 
dpkt
.
	`U≈ackEº‹
('övÆid hâ∞vîsi⁄: %r' % 
l
[2])

181 
£lf
.
vîsi⁄
 = 
l
[2][
	`Àn
(£lf.
__¥Ÿo
) + 1:]

182 
£lf
.
mëhod
 = 
l
[0]

183 
£lf
.
uri
 = 
l
[1]

184 
Mesßge
.
	`u≈ack
(
£lf
, 
f
.
	$ªad
())

186 
def
 
	$__°r__
(
£lf
):

187  '%†%†%s/%s\r\n' % (
£lf
.
mëhod
, sñf.
uri
, sñf.
__¥Ÿo
,

188 
£lf
.
vîsi⁄
Ë+ 
Mesßge
.
	$__°r__
(
£lf
)

190 
def
 
	$__byãs__
(
£lf
):

191 
°r_out
 = '%†%†%s/%s\r\n' % (
£lf
.
mëhod
, sñf.
uri
, sñf.
__¥Ÿo
,

192 
£lf
.
vîsi⁄
)

193  
°r_out
.
	`ícode
("ascii", "ign‹e"Ë+ 
Mesßge
.
	$__byãs__
(
£lf
)

196 
˛ass
 
	$Re•⁄£
(
Mesßge
):

199 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

201 
Aâribuãs
:

202 
__hdr__
: 
Hódî
 
fõlds
 
of
 
HTTP
 
Re•⁄£
.

203 
TODO
.

206 
__hdr_deÁu…s__
 = {

210 
	}
}

211 
__¥Ÿo
 = 'HTTP'

213 
def
 
	$u≈ack
(
£lf
, 
buf
):

214 
f
 = 
	$ByãsIO
(
buf
)

215 
löe
 = 
f
.
	$ªadlöe
()

216 
l
 = 
löe
.
	`°rù
().
	`decode
("ascii", "ign‹e").
	$•lô
(
N⁄e
, 2)

217 
	`Àn
(
l
Ë< 2 
‹
 
nŸ
Ü[0].
	$°¨tswôh
(
£lf
.
__¥Ÿo
Ë
‹
 
nŸ
 
l
[1].
	$isdigô
():

218 
øi£
 
dpkt
.
	`U≈ackEº‹
('övÆidÑe•⁄£: %r' % 
löe
)

219 
£lf
.
vîsi⁄
 = 
l
[0][
	`Àn
(£lf.
__¥Ÿo
) + 1:]

220 
£lf
.
°©us
 = 
l
[1]

221 
£lf
.
ªas⁄
 = 
l
[2] 
	`Àn
(l) > 2 ''

222 #RFC 
Sec
 4.3.

224 #F‹ 
ª•⁄£
 
mesßges
, 
whëhî
 
‹
 
nŸ
 
a
 
mesßge
-
body
 
is
 
ö˛uded
 
wôh


225 #®
mesßge
 
is
 
dïídít
 
⁄
 
bŸh
 
the
 
ªque°
 
mëhod
 
™d
Åhê
ª•⁄£


226 #°©u†
	`code
 (
£˘i⁄
 6.1.1). 
AŒ
 
ª•⁄£s
 
to
 
the
 
HEAD
 
ªque°
 
mëhod


227 #MUST 
NOT
 
ö˛ude
 
a
 
mesßge
-
body
, 
eví
 
though
 
the
 
¥e£n˚
 
of
 
ítôy
-

228 #hódî 
fõlds
 
might
 
Àad
 
⁄e
 
to
 
bñõve
 
they
 do. 
AŒ
 1xx

229 #(
öf‹m©i⁄Æ
), 204 (
no
 
c⁄ã¡
), 
™d
 304 (
nŸ
 
modifõd
Ë
ª•⁄£s


230 #MUST 
NOT
 
ö˛ude
 
a
 
mesßge
-
body
. 
AŒ
 
Ÿhî
 
ª•⁄£s
 do includeá

231 #mesßge-
body
, 
Æthough
 
ô
 
MAY
 
be
 
of
 
zîo
 
Àngth
.

232 
is_body_Ælowed
 = (
£lf
.
°©us
Ë>200 
™d
 204 != (self.status) != 304

233 
Mesßge
.
	`u≈ack
(
£lf
, 
f
.
	`ªad
(), 
is_body_Ælowed
)

235 
def
 
	$__°r__
(
£lf
):

236  '%s/%†%†%s\r\n' % (
£lf
.
__¥Ÿo
, sñf.
vîsi⁄
, sñf.
°©us
,

237 
£lf
.
ªas⁄
Ë+ 
Mesßge
.
	$__°r__
(
£lf
)

239 
def
 
	$__byãs__
(
£lf
):

240 
°r_out
 = '%s/%†%†%s\r\n' % (
£lf
.
__¥Ÿo
, sñf.
vîsi⁄
, sñf.
°©us
,

241 
£lf
.
ªas⁄
Ë+ 
Mesßge
.
	$__°r__
(
£lf
)

242  
°r_out
.
	`ícode
("ascii", "ign‹e"Ë+ 
Mesßge
.
	$__byãs__
(
£lf
)

245 
def
 
	$ã°_∑r£_ªque°
():

246 
s
 = 
b
"""POST /main/redirect/ab/1,295,,00.html HTTP/1.0\r\nReferer: http://www.email.com/login/snap/login.jhtml\r\nConnection: Keep-Alive\r\nUser-Agent: Mozilla/4.75 [en] (X11; U; OpenBSD 2.8 i386; Nav)\r\nHost:Ütd.snap.com\r\nAccept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, image/png, */*\r\nAccept-Encoding: gzip\r\nAccept-Language:Én\r\nAccept-Charset: iso-8859-1,*,utf-8\r\nContent-type:ápplication/x-www-form-urlencoded\r\nContent-length: 61\r\n\r\nsn=em&mn=dtest4&pw=this+is+atest&fr=true&login=Sign+in&od=www"""

247 
r
 = 
	$Reque°
(
s
)

248 
as£π
 
r
.
mëhod
 == 'POST'

249 
as£π
 
r
.
uri
 == '/main/redirect/ab/1,295,,00.html'

250 
as£π
 
r
.
body
 =
b
'sn=em&mn=dtest4&pw=this+is+atest&fr=true&login=Sign+in&od=www'

251 
as£π
 
r
.
hódîs
['content-type'] == 'application/x-www-form-urlencoded'

252 
åy
:

253 
	$Reque°
(
s
[:60])

254 
as£π
 'invalid headersÖarsed!'

255 
ex˚±
 
dpkt
.
U≈ackEº‹
:

256 
∑ss


259 
def
 
	$ã°_f‹m©_ªque°
():

260 
r
 = 
	$Reque°
()

261 
as£π
 
	`°r
(
r
) == 'GET / HTTP/1.0\r\n\r\n'

262 
r
.
mëhod
 = 'POST'

263 
r
.
uri
 = '/foo/bar/baz.html'

264 
r
.
hódîs
['content-type'] = 'text/plain'

265 
r
.
hódîs
['content-length'] = '5'

266 
r
.
body
 = 
b
'hello'

267 
s
 = 
	$°r
(
r
)

268 
as£π
 
s
.
	`°¨tswôh
('POST /foo/bar/baz.html HTTP/1.0\r\n')

269 
as£π
 
s
.
	`ídswôh
('\r\n\r\nhello')

270 
as£π
 '\r\nc⁄ã¡-Àngth: 5\r\n' 
ö
 
s


271 
as£π
 '\r\nc⁄ã¡-ty≥:Åext/∂aö\r\n' 
ö
 
s


272 
s
 = 
	$byãs
(
r
)

273 
as£π
 
s
.
	`°¨tswôh
(
b
'POST /foo/bar/baz.html HTTP/1.0\r\n')

274 
as£π
 
s
.
	`ídswôh
(
b
'\r\n\r\nhello')

275 
as£π
 
b
'\r\nc⁄ã¡-Àngth: 5\r\n' 
ö
 
s


276 
as£π
 
b
'\r\nc⁄ã¡-ty≥:Åext/∂aö\r\n' 
ö
 
s


277 
r
 = 
	`Reque°
(
	$byãs
(
r
))

278 
as£π
 
	`byãs
(
r
Ë=
s


281 
def
 
	$ã°_chunked_ª•⁄£
():

282 
s
 = 
b
"""HTTP/1.1 200 OK\r\nCache-c⁄åﬁ:Ço-ˇche\r\nPøgma:Ço-ˇche\r\nC⁄ã¡-Ty≥:Åext/javas¸ùt; ch¨£t=utf-8\r\nC⁄ã¡-Encodög: gzù\r\nTøns„r-Encodög: chunked\r\nSë-Cookõ: S=gmaû˜gg:gmaû_yj=v2s:gm¥oxy=JkU; Domaö=.googÀ.com; P©h=/\r\nSîvî: GFE/1.3\r\nD©e: M⁄, 12 De¯2005 22:33:23 GMT\r\n\r\«\r\n\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\x00\r\n152\r\nm\x91MO\xc4 \x10\x86\xef\x„\n\x82\xc9\x9eXJK\xe9\xb6\xì\xc1\xe8\x1e6\x9e4\xf1\xe0a5\x86R\xda\x12Yh\x80\xba\xÁ\xef\x85\xì\x1a/\xf21\x99\x0c\xef0<\xc3\x81\xa0\xc3\x01\xe6\x10\xc1<\xa7eYT5\xa1\xa4\xac\xe1\xdb\x15:\xa4\x9d\x0c\xÁ5K\x00\xf6.\xØ\xeb\x86\xd5y\xcdHY\x954\x8e\xbc*h\x8c\x8e!L7Y\xe6\'\xeb\x82WZ\xcf>8\x1ed\x87\x851X\xd8c\xe6\xbc\x17Z\x89\x8f\xa¯\x84e\xde\n!]\x96\x17i\xb5\x02{{\xc2z0\x1e\x0f#7\x9cw3v\x992\x9d\xfc\xc2c8\xó[/EP\xd6\xbc\x˚\x84\xd0\x˚\xab\xf7`\'\x1f\xacS\xd2\xc7\xd2\xfb\x94\x02N\xdc\x04\x0f\xì\xba\x19X\x03TtW\xd7\xb4\xd9\x92\n\xbcX\xa7;\xb0\x9b\'\x10$?F\xfd\xf3CzPt\x8aU\xef\xb8\xc8\x8b-\x18\xed\xec<\xe0\x83\x85\x08!\xf8"[\
xb0
\
xd3j
\
x82h
\
x93
\
xb8
\
xcf
\
xd8
\
x9b
\
xba
\
xda
\
xd0
\
x92
\
x14
\
xa4a
\
rc
\
ªM
\
xfd
\
x87
=
X
;
h
\
xd9j
;\
xe0db
\
x17
\
xc2
\
x02
\
xbd
\
xb0F
\
xc2ö
#\
xfb
:\
xb6
\
xc4x
\
x15
\
xd6
\
x9f
\
x8a
\
xaf
\xcf)\
x0b
^\
xbc
\
xe7i
\
x11
\
x80
\
x8b
\
x00D
\
x01
\xd8/\
x82x
\
xf6
\xd8\
	`xf7J
(\
x´
/\
x11p
\
x1f
+\
xc4p
\
t
:\
x„
\xfd\
xdf
\
xa3Y
\
xÁ
\
x´4
\
x7f
\
x00
\
xc5
\
xa5
\
x95
\
xa1
\
xe2
\x01\x00\x00\
r
\
n0
\r\
n
\r\n"""

283 
r
 = 
	$Re•⁄£
(
s
)

284 
as£π
 
r
.
vîsi⁄
 == '1.1'

285 
as£π
 
r
.
°©us
 == '200'

286 
as£π
 
r
.
ªas⁄
 == 'OK'

289 
def
 
	$ã°_mu…icookõ_ª•⁄£
():

290 
s
 = 
b
"""HTTP/1.x 200 OK\r\nSet-Cookie: first_cookie=cookie1;Öath=/; domain=.example.com\r\nSet-Cookie: second_cookie=cookie2;Öath=/; domain=.example.com\r\nContent-Length: 0\r\n\r\n"""

291 
r
 = 
	$Re•⁄£
(
s
)

292 
as£π
 
	`ty≥
(
r
.
hódîs
['£t-cookõ']Ë
is
 
li°


293 
as£π
 
	`Àn
(
r
.
hódîs
['set-cookie']) == 2

296 
def
 
	$ã°_n‹ós⁄_ª•⁄£
():

297 
s
 = 
b
"""HTTP/1.1 200 \r\n\r\n"""

298 
r
 = 
	$Re•⁄£
(
s
)

299 
as£π
 
r
.
ªas⁄
 == ''

300 
as£π
 
	`byãs
(
r
Ë=
s


303 
def
 
	$ã°_body_f‹biddí_ª•⁄£
():

304 
s
 = 
b
'HTTP/1.1 304 Not Modified\r\n'\

305 
b
'Content-Type:Åext/css\r\n'\

306 
b
'Last-Modified: Wed, 14 Jan 2009 16:42:11 GMT\r\n'\

307 
b
'ETag: "3a7-496e15e3"\r\n'\

308 
b
'Cache-Control:Örivate, max-age=414295\r\n'\

309 
b
'Date: Wed, 22 Sep 2010 17:55:54 GMT\r\n'\

310 
b
'Connection: keep-alive\r\n'\

311 
b
'Vary: Accept-Encoding\r\n\r\n'\

312 
b
'HTTP/1.1 200 OK\r\n'\

313 
b
'Server: Sun-ONE-Web-Server/6.1\r\n'\

314 
b
'ntCoent-length: 257\r\n'\

315 
b
'Content-Type:ápplication/x-javascript\r\n'\

316 
b
'Last-Modified: Wed, 06 Jan 2010 19:34:06 GMT\r\n'\

317 
b
'ETag: "101-4b44e5ae"\r\n'\

318 
b
'Accept-Ranges: bytes\r\n'\

319 
b
'Content-Encoding: gzip\r\n'\

320 
b
'Cache-Control:Örivate, max-age=439726\r\n'\

321 
b
'Date: Wed, 22 Sep 2010 17:55:54 GMT\r\n'\

322 
b
'Connection: keep-alive\r\n'\

323 
b
'Vary: Accept-Encoding\r\n'

324 
ªsu…
 = []

325 
s
:

326 
msg
 = 
	$Re•⁄£
(
s
)

327 
s
 = 
msg
.
d©a


328 
ªsu…
.
	$≠≥nd
(
msg
)

330 #thê
£c⁄d
 
HTTP
 
ª•⁄£
 
should
 
be
 
™
 
°™dÆ⁄e
 
mesßge


331 
as£π
 
	`Àn
(
ªsu…
) == 2

334 
def
 
	$ã°_ªque°_vîsi⁄
():

335 
s
 = 
b
"""GET / HTTP/1.0\r\n\r\n"""

336 
r
 = 
	$Reque°
(
s
)

337 
as£π
 
r
.
mëhod
 == 'GET'

338 
as£π
 
r
.
uri
 == '/'

339 
as£π
 
r
.
vîsi⁄
 == '1.0'

341 
s
 = 
b
"""GET /\r\n\r\n"""

342 
r
 = 
	$Reque°
(
s
)

343 
as£π
 
r
.
mëhod
 == 'GET'

344 
as£π
 
r
.
uri
 == '/'

345 
as£π
 
r
.
vîsi⁄
 == '0.9'

347 
s
 = 
b
"""GET / CHEESE/1.0\r\n\r\n"""

348 
åy
:

349 
	$Reque°
(
s
)

350 
as£π
 "invalidÖrotocol versionÖarsed!"

351 
ex˚±
:

352 
∑ss


355 
def
 
	$ã°_övÆid_hódî
():

356 #vÆid 
hódî
.

357 
s
 = 
b
'POST /main/redirect/ab/1,295,,00.html HTTP/1.0\r\n' \

358 
b
'Referer: http://www.email.com/login/snap/login.jhtml\r\n' \

359 
b
'Connection: Keep-Alive\r\n' \

360 
b
'User-Agent: Mozilla/4.75 [en] (X11; U; OpenBSD 2.8 i386; Nav)\r\n' \

361 
b
'Host:Ütd.snap.com\r\n' \

362 
b
'Accept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, image/png, */*\r\n' \

363 
b
'Accept-Encoding: gzip\r\n' \

364 
b
'Accept-Language:Én\r\n' \

365 
b
'Accept-Charset: iso-8859-1,*,utf-8\r\n' \

366 
b
'Content-type:ápplication/x-www-form-urlencoded\r\n' \

367 
b
'Content-length: 61\r\n\r\n' \

368 
b
'sn=em&mn=dtest4&pw=this+is+atest&fr=true&login=Sign+in&od=www'

369 
r
 = 
	$Reque°
(
s
)

370 
as£π
 
r
.
mëhod
 == 'POST'

371 
as£π
 
r
.
uri
 == '/main/redirect/ab/1,295,,00.html'

372 
as£π
 
r
.
body
 =
b
'sn=em&mn=dtest4&pw=this+is+atest&fr=true&login=Sign+in&od=www'

373 
as£π
 
r
.
hódîs
['content-type'] == 'application/x-www-form-urlencoded'

375 #övÆid 
hódî
.

376 
s_weúd_íd
 = 
b
'POST /main/redirect/ab/1,295,,00.html HTTP/1.0\r\n' \

377 
b
'Referer: http://www.email.com/login/snap/login.jhtml\r\n' \

378 
b
'Connection: Keep-Alive\r\n' \

379 
b
'User-Agent: Mozilla/4.75 [en] (X11; U; OpenBSD 2.8 i386; Nav)\r\n' \

380 
b
'Host:Ütd.snap.com\r\n' \

381 
b
'Accept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, image/png, */*\r\n' \

382 
b
'Accept-Encoding: gzip\r\n' \

383 
b
'Accept-Language:Én\r\n' \

384 
b
'Accept-Charset: iso-8859-1,*,utf-8\r\n' \

385 
b
'Content-type:ápplication/x-www-form-urlencoded\r\n' \

386 
b
'Cookie: TrackID=1PWdcr3MO_C611BGW'

387 
r
 = 
	$Reque°
(
s_weúd_íd
)

388 
as£π
 
r
.
mëhod
 == 'POST'

389 
as£π
 
r
.
uri
 == '/main/redirect/ab/1,295,,00.html'

390 
as£π
 
r
.
hódîs
['content-type'] == 'application/x-www-form-urlencoded'

392 #messy 
hódî
.

393 
s_messy_hódî
 = 
b
'aaaaaaaaa\r\nbbbbbbbbb'

394 
åy
:

395 
r
 = 
	$Reque°
(
s_messy_hódî
)

396 
ex˚±
 
dpkt
.
U≈ackEº‹
:

397 
as£π
 
True


398 #I‡
the
 
hâp
 
ªque°
 
is
 
buût
 
suc˚ssfuŒy
 
‹
 
øi£d
 
ex˚±i⁄s


399 #Ÿhî 
th™
 
U≈ackEº‹
, 
thí
  
a
 
Ál£
 
as£πi⁄
.

400 
ex˚±
:

401 
as£π
 
FÆ£


403 
as£π
 
FÆ£


406 
def
 
	$ã°_gzù_ª•⁄£
():

407 
imp‹t
 
zlib


408 #vÆid 
ª•⁄£
, 
com¥es£d
 
usög
 
gzù


409 
s
 = 
b
'HTTP/1.0 200 OK\r\n' \

410 
b
'Server: SimpleHTTP/0.6 Python/2.7.12\r\n' \

411 
b
'Date: Fri, 10 Mar 2017 20:43:08 GMT\r\n' \

412 
b
'Content-type:Åext/plain\r\n' \

413 
b
'Content-Encoding: gzip\r\n' \

414 
b
'Content-Length: 68\r\n' \

415 
b
'Last-Modified: Fri, 10 Mar 2017 20:40:43 GMT\r\n\r\n' \

416 
b
'\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\x03\x0b\xc9\xc8,V\x00\xa2D' \

417 
b
'\x85\xb2\xd4\xa2J\x85\xe2\xdc\xc4\x9c\x1c\x85\xb4\xcc\x9cT\x85\x92' \

418 
b
'|\x85\x92\xd4\xe2\x12\x85\xf4\xaa\xcc\x02\x85\xa2\xd4\xe2\x82\xfc' \

419 
b
'\xbc\xe2\xd4b=.\x00\x01(m\xad2\x00\x00\x00'

420 
r
 = 
	$Re•⁄£
(
s
)

421 
as£π
 
r
.
vîsi⁄
 == '1.0'

422 
as£π
 
r
.
°©us
 == '200'

423 
as£π
 
r
.
ªas⁄
 == 'OK'

424 #Makê
a
 
zlib
 
com¥ess‹
 
wôh
 
the
 
≠¥›rüã
 
gzù
 
›ti⁄s


425 
decom¥ess‹
 = 
zlib
.
	`decom¥essobj
(16 + zlib.
MAX_WBITS
)

426 
body
 = 
decom¥ess‹
.
	$decom¥ess
(
r
.
body
)

427 
as£π
 
body
.
	`°¨tswôh
(
b
'This isá very small file')

430 
__«me__
 == '__main__':

431 #Run†
Æl
 
the
 
ã°
 
assocüãd
 
wôh
 
this
 
˛ass
/
fûe


432 
	$ã°_∑r£_ªque°
()

433 
	$ã°_f‹m©_ªque°
()

434 
	$ã°_chunked_ª•⁄£
()

435 
	$ã°_mu…icookõ_ª•⁄£
()

436 
	$ã°_n‹ós⁄_ª•⁄£
()

437 
	$ã°_ªque°_vîsi⁄
()

438 
	$ã°_övÆid_hódî
()

439 
	$ã°_body_f‹biddí_ª•⁄£
()

440 
	`¥öt
('Tests Successful...')

	@http2.py

1 #-*- 
codög
: 
utf
-8 -*-

4 
imp‹t
 

5 
imp‹t
 
codecs


7 
	g‰om
 . 
imp‹t
 
dpkt


10 
	gHTTP2_PREFACE
 = 
b
'\x50\x52\x49\x20\x2a\x20\x48\x54\x54\x50\x2f\x32\x2e\x30\x0d\x0a\x0d\x0a\x53\x4d\x0d\x0a\x0d\x0a'

12 #Fømê
ty≥s


13 
HTTP2_FRAME_DATA
 = 0

14 
HTTP2_FRAME_HEADERS
 = 1

15 
HTTP2_FRAME_PRIORITY
 = 2

16 
HTTP2_FRAME_RST_STREAM
 = 3

17 
HTTP2_FRAME_SETTINGS
 = 4

18 
HTTP2_FRAME_PUSH_PROMISE
 = 5

19 
HTTP2_FRAME_PING
 = 6

20 
HTTP2_FRAME_GOAWAY
 = 7

21 
HTTP2_FRAME_WINDOW_UPDATE
 = 8

22 
HTTP2_FRAME_CONTINUATION
 = 9

25 
HTTP2_FLAG_END_STREAM
 = 0x01 #f‹ 
DATA
 
™d
 
HEADERS
 
‰ames


26 
HTTP2_FLAG_ACK
 = 0x01 #f‹ 
SETTINGS
 
™d
 
PING
 
‰ames


27 
HTTP2_FLAG_END_HEADERS
 = 0x04

28 
HTTP2_FLAG_PADDED
 = 0x08

29 
HTTP2_FLAG_PRIORITY
 = 0x20

32 
HTTP2_SETTINGS_HEADER_TABLE_SIZE
 = 0x1

33 
HTTP2_SETTINGS_ENABLE_PUSH
 = 0x2

34 
HTTP2_SETTINGS_MAX_CONCURRENT_STREAMS
 = 0x3

35 
HTTP2_SETTINGS_INITIAL_WINDOW_SIZE
 = 0x4

36 
HTTP2_SETTINGS_MAX_FRAME_SIZE
 = 0x5

37 
HTTP2_SETTINGS_MAX_HEADER_LIST_SIZE
 = 0x6

39 #Eº‹ 
codes


40 
HTTP2_NO_ERROR
 = 0x0

41 
HTTP2_PROTOCOL_ERROR
 = 0x1

42 
HTTP2_INTERNAL_ERROR
 = 0x2

43 
HTTP2_FLOW_CONTROL_ERROR
 = 0x3

44 
HTTP2_SETTINGS_TIMEOUT
 = 0x4

45 
HTTP2_STREAM_CLOSED
 = 0x5

46 
HTTP2_FRAME_SIZE_ERROR
 = 0x6

47 
HTTP2_REFUSED_STREAM
 = 0x7

48 
HTTP2_CANCEL
 = 0x8

49 
HTTP2_COMPRESSION_ERROR
 = 0x9

50 
HTTP2_CONNECT_ERROR
 = 0xa

51 
HTTP2_ENHANCE_YOUR_CALM
 = 0xb

52 
HTTP2_INADEQUATE_SECURITY
 = 0xc

53 
HTTP2_HTTP_1_1_REQUIRED
 = 0xd

55 
îr‹_code_°r
 = {

56 
HTTP2_NO_ERROR
: 'NO_ERROR',

57 
HTTP2_PROTOCOL_ERROR
: 'PROTOCOL_ERROR',

58 
HTTP2_INTERNAL_ERROR
: 'INTERNAL_ERROR',

59 
HTTP2_FLOW_CONTROL_ERROR
: 'FLOW_CONTROL_ERROR',

60 
HTTP2_SETTINGS_TIMEOUT
: 'SETTINGS_TIMEOUT',

61 
HTTP2_STREAM_CLOSED
: 'STREAM_CLOSED',

62 
HTTP2_FRAME_SIZE_ERROR
: 'FRAME_SIZE_ERROR',

63 
HTTP2_REFUSED_STREAM
: 'REFUSED_STREAM',

64 
HTTP2_CANCEL
: 'CANCEL',

65 
HTTP2_COMPRESSION_ERROR
: 'COMPRESSION_ERROR',

66 
HTTP2_CONNECT_ERROR
: 'CONNECT_ERROR',

67 
HTTP2_ENHANCE_YOUR_CALM
: 'ENHANCE_YOUR_CALM',

68 
HTTP2_INADEQUATE_SECURITY
: 'INADEQUATE_SECURITY',

69 
HTTP2_HTTP_1_1_REQUIRED
: 'HTTP_1_1_REQUIRED',

73 
˛ass
 
	$HTTP2Ex˚±i⁄
(
Ex˚±i⁄
):

74 
∑ss


77 
˛ass
 
	$PªÁ˚
(
dpkt
.
Packë
):

78 
__hdr__
 = (

79 ('¥eÁ˚', '24s', 
HTTP2_PREFACE
),

82 
def
 
	$u≈ack
(
£lf
, 
buf
):

83 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

84 
£lf
.
¥eÁ˚
 !
HTTP2_PREFACE
:

85 
øi£
 
	`HTTP2Ex˚±i⁄
('Invalid HTTP/2Öreface')

86 
£lf
.
d©a
 = ''

89 
˛ass
 
	$Føme
(
dpkt
.
Packë
):

92 
An
 
HTTP
/2 
‰ame
 
as
 
deföed
 
ö
 
RFC
 7540

95 #°ru˘.
u≈ack
 
ˇn
't handleÅhe 3-byte int, so weÖarse itás bytes

96 #(
™d
 
°‹e
 
ô
 
as
 
byãs
 
so
 
dpkt
 
d€¢
't get confused),ándÅurn it into

97 #™ 
ö
 
a
 
u£r
-
Ácög
 
¥›îty


98 
__hdr__
 = (

105 
def
 
	$u≈ack
(
£lf
, 
buf
):

106 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

107 #⁄ly 
èke
 
the
 
right
 
numbî
 
of
 
byãs


108 
£lf
.
d©a
 = sñf.d©a[:£lf.
Àngth
]

109 
	`Àn
(
£lf
.
d©a
Ë!£lf.
Àngth
:

110 
øi£
 
dpkt
.
NìdD©a


112 @
¥›îty


113 
def
 
	$Àngth
(
£lf
):

114  .
	`u≈ack
('!I', 
b
'\x00' + 
£lf
.
Àngth_byãs
)[0]

116 
˛ass
 
	$Pri‹ôy
(
dpkt
.
Packë
):

119 
Paylﬂd
 
of
 
a
 
PRIORITY
 
‰ame
, 
Æso
 
u£d
 
ö
 
HEADERS
 fømê
wôh
 
FLAG_PRIORITY
.

121 
Also
 
u£d
 
ö
 
the
 
HEADERS
 
‰ame
 thê
PRIORITY
 
Êag
 
is
 
£t
.

124 
__hdr__
 = (

129 
def
 
	$u≈ack
(
£lf
, 
buf
):

130 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

131 
	`Àn
(
£lf
.
d©a
) != 0:

132 
øi£
 
	`HTTP2Ex˚±i⁄
('InvalidÇumber of bytes in PRIORITY frame')

133 
£lf
.
ex˛usive
 = (£lf.
°ªam_dï
 & 0x80000000) != 0

134 
£lf
.
°ªam_dï
 &= 0x7fffffff

135 
£lf
.
weight
 += 1

137 
˛ass
 
	$Sëtög
(
dpkt
.
Packë
):

140 
A
 
key
-
vÆue
 
∑ú
 
u£d
 
ö
 
the
 
SETTINGS
 
‰ame
.

143 
__hdr__
 = (

149 
˛ass
 
	$PaddedFøme
(
Føme
):

152 
Ab°ø˘
 
˛ass
 
‰ame
 
ty≥s
 
th©
 
suµ‹t
 
the
 
FLAG_PADDED
 
Êag
: 
DATA
,

153 
HEADERS
 
™d
 
PUSH_PROMISE
.

156 
def
 
	$u≈ack
(
£lf
, 
buf
):

157 
Føme
.
	$u≈ack
(
£lf
, 
buf
)

158 
£lf
.
Êags
 & 
HTTP2_FLAG_PADDED
:

159 
£lf
.
Àngth
 == 0:

160 
øi£
 
	`HTTP2Ex˚±i⁄
('MissingÖaddingÜength in PADDED frame')

161 
£lf
.
∑d_Àngth
 = .
	`u≈ack
('B', sñf.
d©a
[0:1])[0]

162 
£lf
.
Àngth
 <£lf.
∑d_Àngth
:

163 
øi£
 
	`HTTP2Ex˚±i⁄
('MissingÖadding bytes in PADDED frame')

164 
£lf
.
u≈added_d©a
 = sñf.
d©a
[1:-£lf.
∑d_Àngth
]

166 
£lf
.
u≈added_d©a
 = sñf.
d©a


168 
˛ass
 
	$D©aFøme
(
PaddedFøme
):

171 
Føme
 
of
 
ty≥
 
DATA
.

174 @
¥›îty


175 
def
 
	$∑ylﬂd
(
£lf
):

176  
£lf
.
u≈added_d©a


178 
˛ass
 
	$HódîsFøme
(
PaddedFøme
):

181 
Føme
 
of
 
ty≥
 
HEADERS
.

184 
def
 
	$u≈ack
(
£lf
, 
buf
):

185 
PaddedFøme
.
	$u≈ack
(
£lf
, 
buf
)

186 
£lf
.
Êags
 & 
HTTP2_FLAG_PRIORITY
:

187 
	`Àn
(
£lf
.
u≈added_d©a
) < 5:

188 
øi£
 
	`HTTP2Ex˚±i⁄
('Missing stream dependency in HEADERS frame with PRIORITY flag')

189 
£lf
.
¥i‹ôy
 = 
	$Pri‹ôy
(
£lf
.
u≈added_d©a
[:5])

190 
£lf
.
block_‰agmít
 = sñf.
u≈added_d©a
[5:]

192 
£lf
.
block_‰agmít
 = sñf.
u≈added_d©a


194 
˛ass
 
	$Pri‹ôyFøme
(
Føme
):

197 
Føme
 
of
 
ty≥
 
PRIORITY
.

200 
def
 
	$u≈ack
(
£lf
, 
buf
):

201 
Føme
.
	$u≈ack
(
£lf
, 
buf
)

202 
£lf
.
¥i‹ôy
 = 
	$Pri‹ôy
(
£lf
.
d©a
)

204 
˛ass
 
	$RSTSåómFøme
(
Føme
):

207 
Føme
 
of
 
ty≥
 
RST_STREAM
.

210 
def
 
	$u≈ack
(
£lf
, 
buf
):

211 
Føme
.
	$u≈ack
(
£lf
, 
buf
)

212 
£lf
.
Àngth
 != 4:

213 
øi£
 
	`HTTP2Ex˚±i⁄
('InvalidÇumber of bytes in RST_STREAM frame (must be 4)')

214 
£lf
.
îr‹_code
 = .
	`u≈ack
('!I', sñf.
d©a
)[0]

216 
˛ass
 
	$SëtögsFøme
(
Føme
):

219 
Føme
 
of
 
ty≥
 
SETTINGS
.

222 
def
 
	$u≈ack
(
£lf
, 
buf
):

223 
Føme
.
	$u≈ack
(
£lf
, 
buf
)

224 
£lf
.
Àngth
 % 6 != 0:

225 
øi£
 
	`HTTP2Ex˚±i⁄
('InvalidÇumber of bytes in SETTINGS frame (must be multiple of 6)')

226 
£lf
.
£âögs
 = []

227 
i
 = 0

228 
i
 < 
£lf
.
Àngth
:

229 
£lf
.
£âögs
.
	`≠≥nd
(
	`Sëtög
(£lf.
d©a
[
i
:i+6]))

230 
i
 += 6

232 
˛ass
 
	$PushPromi£Føme
(
PaddedFøme
):

235 
Føme
 
of
 
ty≥
 
PUSH_PROMISE
.

238 
def
 
	$u≈ack
(
£lf
, 
buf
):

239 
PaddedFøme
.
	$u≈ack
(
£lf
, 
buf
)

240 
	`Àn
(
£lf
.
u≈added_d©a
) < 4:

241 
øi£
 
	`HTTP2Ex˚±i⁄
('MissingÖromised stream ID in PUSH_PROMISE frame')

242 
£lf
.
¥omi£d_id
 = .
	`u≈ack
('!I', sñf.
d©a
[:4])[0]

243 
£lf
.
block_‰agmít
 = sñf.
u≈added_d©a
[4:]

245 
˛ass
 
	$PögFøme
(
Føme
):

248 
Føme
 
of
 
ty≥
 
PING
.

251 
def
 
	$u≈ack
(
£lf
, 
buf
):

252 
Føme
.
	$u≈ack
(
£lf
, 
buf
)

253 
£lf
.
Àngth
 != 8:

254 
øi£
 
	`HTTP2Ex˚±i⁄
('InvalidÇumber of bytes in PING frame (must be 8)')

256 
˛ass
 
	$GoAwayFøme
(
Føme
):

259 
Føme
 
of
 
ty≥
 
GO_AWAY
.

262 
def
 
	$u≈ack
(
£lf
, 
buf
):

263 
Føme
.
	$u≈ack
(
£lf
, 
buf
)

264 
£lf
.
Àngth
 < 8:

265 
øi£
 
	`HTTP2Ex˚±i⁄
('InvalidÇumber of bytes in GO_AWAY frame')

266 
£lf
.
œ°_°ªam_id
 = .
	`u≈ack
('!I', sñf.
d©a
[:4])[0]

267 
£lf
.
îr‹_code
 = .
	`u≈ack
('!I', sñf.
d©a
[4:8])[0]

268 
£lf
.
debug_d©a
 = sñf.
d©a
[8:]

270 
˛ass
 
	$WödowUpd©eFøme
(
Føme
):

273 
Føme
 
of
 
ty≥
 
WINDOW_UPDATE
.

276 
def
 
	$u≈ack
(
£lf
, 
buf
):

277 
Føme
.
	$u≈ack
(
£lf
, 
buf
)

278 
£lf
.
Àngth
 != 4:

279 
øi£
 
	`HTTP2Ex˚±i⁄
('InvalidÇumber of bytes in WINDOW_UPDATE frame (must be 4)')

280 
£lf
.
wödow_ö¸emít
 = .
	`u≈ack
('!I', sñf.
d©a
)[0]

282 
˛ass
 
	$C⁄töu©i⁄Føme
(
Føme
):

285 
Føme
 
of
 
ty≥
 
CONTINUATION
.

288 
def
 
	$u≈ack
(
£lf
, 
buf
):

289 
Føme
.
	$u≈ack
(
£lf
, 
buf
)

290 
£lf
.
block_‰agmít
 = sñf.
d©a


293 
FRAME_TYPES
 = {

294 
HTTP2_FRAME_DATA
: ('DATA', 
D©aFøme
),

295 
HTTP2_FRAME_HEADERS
: ('HEADERS', 
HódîsFøme
),

296 
HTTP2_FRAME_PRIORITY
: ('PRIORITY', 
Pri‹ôyFøme
),

297 
HTTP2_FRAME_RST_STREAM
: ('RST_STREAM', 
RSTSåómFøme
),

298 
HTTP2_FRAME_SETTINGS
: ('SETTINGS', 
SëtögsFøme
),

299 
HTTP2_FRAME_PUSH_PROMISE
: ('PUSH_PROMISE', 
PushPromi£Føme
),

300 
HTTP2_FRAME_PING
: ('PING', 
PögFøme
),

301 
HTTP2_FRAME_GOAWAY
: ('GOAWAY', 
GoAwayFøme
),

302 
HTTP2_FRAME_WINDOW_UPDATE
: ('WINDOW_UPDATE', 
WödowUpd©eFøme
),

303 
HTTP2_FRAME_CONTINUATION
: ('CONTINUATION', 
C⁄töu©i⁄Føme
),

304 
	}
}

307 
˛ass
 
	$FømeFa˘‹y
(
obje˘
):

308 
def
 
	$__√w__
(
˛s
, 
buf
):

309 
	`Àn
(
buf
) < 4:

310 
øi£
 
dpkt
.
NìdD©a


311 
t
 = .
	`u≈ack
('B', 
buf
[3:4])[0]

312 
‰ame_ty≥
 = 
FRAME_TYPES
.
	$gë
(
t
, 
N⁄e
)

313 
‰ame_ty≥
 
is
 
N⁄e
:

314 
øi£
 
	`HTTP2Ex˚±i⁄
('InvÆid fømêty≥: ' + 
	$hex
(
t
))

315  
‰ame_ty≥
[1](
buf
)

318 
def
 
	$‰ame_mu…i_Á˘‹y
(
buf
, 
¥eÁ˚
=
FÆ£
):

320 
Aâem±
 
to
 
∑r£
 
⁄e
 
‹
 
m‹e
 
Føme
's out of buf

322 
Args
:

323 
buf
: 
°rög
 
c⁄èöög
 
HTTP
/2 
‰ames
. 
May
 
have
 
™
 
öcom∂ëe
 
‰ame
 
©
 
the


324 
íd
.

325 
¥eÁ˚
: 
ex≥˘
 
™
 
HTTP
/2ÖªÁ˚ 
©
 
the
 
begönög
 
of
Åhê
buf„r
.

327 
Rëu∫s
:

328 [
Føme
]

329 , 
tŸÆ
 
byãs
 
c⁄sumed
, !
	$Àn
(
buf
Ë
™
 
öcom∂ëe
 
‰ame
 
was
 
À·
 
©


330 
the
 
íd
.

332 
i
 = 0

333 
n
 = 
	$Àn
(
buf
)

334 
‰ames
 = []

336 
¥eÁ˚
:

337 
åy
:

338 
p
 = 
	$PªÁ˚
(
buf
)

339 
i
 +
	$Àn
(
p
)

340 
ex˚±
 
dpkt
.
NìdD©a
:

343 
i
 < 
n
:

344 
åy
:

345 
‰ame
 = 
	$FømeFa˘‹y
(
buf
[
i
:])

346 
‰ames
.
	$≠≥nd
(
‰ame
)

347 
i
 +
	$Àn
(
‰ame
)

348 
ex˚±
 
dpkt
.
NìdD©a
:

350  
‰ames
, 
i


353 
˛ass
 
	$Te°Føme
(
obje˘
):

357 @
˛assmëhod


358 
def
 
	$£tup_˛ass
(
˛s
):

359 #Fú° 
TLS
 
AµD©a
 
ªc‹d
 
£¡
 
by
 
	`Fúefox
 (
de¸y±ed
)

360 
ªc‹d
 = 
codecs
.
	`decode
(
b
'505249202a20485454502f322e300d0a'

361 
b
'0d0a534d0d0a0d0a00000c0400000000'

362 
b
'00000400020000000500004000000004'

363 
b
'08000000000000bf0001000005020000'

364 
b
'00000300000000c80000050200000000'

365 
b
'05000000006400000502000000000700'

366 
b
'00000000000005020000000009000000'

367 
b
'070000000502000000000b0000000300', 'hex')

368 
˛s
.
‰ames
, cls.
i
 = 
	$‰ame_mu…i_Á˘‹y
(
ªc‹d
, 
¥eÁ˚
=
True
)

370 
def
 
	$ã°_‰ame
(
£lf
):

371 
imp‹t
 
pyã°


373 
pyã°
.
	`øi£s
(
dpkt
.
NìdD©a
, 
Føme
, 
codecs
.
	`decode
(
b
'000001' #length

374 
b
'0000' #ty≥, 
Êags


375 
b
'dódbìf' #°ªam 
id


378 
def
 
	$ã°_d©a
(
£lf
):

379 #Padded 
DATA
 
‰ame


380 
‰ame_d©a_∑dded
 = 
	`FømeFa˘‹y
(
codecs
.
	`decode
(
b
'000008' #length

381 
b
'0008' #ty≥, 
Êags


382 
b
'12345678' #°ªam 
id


383 
b
'05' #∑d 
Àngth


384 
b
'abcd' #data

385 
b
'1122334455' #padding

387 
	$as£π
 (
‰ame_d©a_∑dded
.
Àngth
 == 8)

388 
	$as£π
 (
‰ame_d©a_∑dded
.
ty≥
 =
HTTP2_FRAME_DATA
)

389 
	$as£π
 (
‰ame_d©a_∑dded
.
Êags
 =
HTTP2_FLAG_PADDED
)

390 
	$as£π
 (
‰ame_d©a_∑dded
.
°ªam_id
 == 0x12345678)

391 
	`as£π
 (
‰ame_d©a_∑dded
.
d©a
 =
b
'\x05\xAB\xCD\x11\x22\x33\x44\x55')

392 
	$as£π
 (
‰ame_d©a_∑dded
.
∑d_Àngth
 == 5)

393 
	`as£π
 (
‰ame_d©a_∑dded
.
u≈added_d©a
 =
b
'\xAB\xCD')

394 
	`as£π
 (
‰ame_d©a_∑dded
.
∑ylﬂd
 =
b
'\xAB\xCD')

396 #em±y 
DATA
 
‰ame


397 
‰ame_d©a_em±y_íd
 = 
	`FømeFa˘‹y
(
codecs
.
	`decode
(
b
'000000' #length

398 
b
'0001' #ty≥, 
Êags


399 
b
'dódbìf' #°ªam 
id


401 
	$as£π
 (
‰ame_d©a_em±y_íd
.
Àngth
 == 0)

402 
	$as£π
 (
‰ame_d©a_em±y_íd
.
ty≥
 =
HTTP2_FRAME_DATA
)

403 
	$as£π
 (
‰ame_d©a_em±y_íd
.
Êags
 =
HTTP2_FLAG_END_STREAM
)

404 
	$as£π
 (
‰ame_d©a_em±y_íd
.
°ªam_id
 == 0xdeadbeef)

405 
	`as£π
 (
‰ame_d©a_em±y_íd
.
d©a
 =
b
'')

406 
	`as£π
 (
‰ame_d©a_em±y_íd
.
u≈added_d©a
 =
b
'')

407 
	`as£π
 (
‰ame_d©a_em±y_íd
.
∑ylﬂd
 =
b
'')

409 
imp‹t
 
pyã°


410 #InvÆid 
∑ddög


411 
wôh
 
pyã°
.
	$øi£s
(
HTTP2Ex˚±i⁄
Ë
as
 
e
:

412 
x
 = 
	`D©aFøme
(
codecs
.
	`decode
(
b
'000000' #length

413 
b
'0008' #ty≥, 
Êags


414 
b
'12345678' #°ªam 
id


415 
b
'' #missög 
∑ddög


417 
	`as£π
 (
	`°r
(
e
.
vÆue
) == 'MissingÖaddingÜength in PADDED frame')

419 
wôh
 
pyã°
.
	$øi£s
(
HTTP2Ex˚±i⁄
Ë
as
 
e
:

420 
x
 = 
	`D©aFøme
(
codecs
.
	`decode
(
b
'000001' #length

421 
b
'0008' #ty≥, 
Êags


422 
b
'12345678' #°ªam 
id


423 
b
'01'

424 
b
'' #missög 
∑ddög
 
byãs


426 
	`as£π
 (
	`°r
(
e
.
vÆue
) == 'MissingÖadding bytes in PADDED frame')

428 
def
 
	$ã°_hódîs
(
£lf
):

429 
‰ame_hódîs
 = 
	`FømeFa˘‹y
(
codecs
.
	`decode
(
b
'000003' #length

430 
b
'0100' #ty≥, 
Êags


431 
b
'dódbìf' #°ªam 
id


432 
b
'f00bØ' #block 
‰agmít


434 
	$as£π
 (
‰ame_hódîs
.
Àngth
 == 3)

435 
	$as£π
 (
‰ame_hódîs
.
ty≥
 =
HTTP2_FRAME_HEADERS
)

436 
	$as£π
 (
‰ame_hódîs
.
Êags
 == 0)

437 
	$as£π
 (
‰ame_hódîs
.
°ªam_id
 == 0xdeadbeef)

438 
	`as£π
 (
‰ame_hódîs
.
d©a
 =
b
'\xF0\x0B\xAA')

439 
	`as£π
 (
‰ame_hódîs
.
u≈added_d©a
 =
b
'\xF0\x0B\xAA')

440 
	`as£π
 (
‰ame_hódîs
.
block_‰agmít
 =
b
'\xF0\x0B\xAA')

442 
‰ame_hódîs_¥io
 = 
	`FømeFa˘‹y
(
codecs
.
	`decode
(
b
'000008' #length

443 
b
'0120' #ty≥, 
Êags


444 
b
'dódbìf' #°ªam 
id


445 
b
'cafebabe10' #priority

446 
b
'f00bØ' #block 
‰agmít


448 
	$as£π
 (
‰ame_hódîs_¥io
.
Àngth
 == 8)

449 
	$as£π
 (
‰ame_hódîs_¥io
.
ty≥
 =
HTTP2_FRAME_HEADERS
)

450 
	$as£π
 (
‰ame_hódîs_¥io
.
Êags
 =
HTTP2_FLAG_PRIORITY
)

451 
	$as£π
 (
‰ame_hódîs_¥io
.
°ªam_id
 == 0xdeadbeef)

452 
	`as£π
 (
‰ame_hódîs_¥io
.
d©a
 =
b
'\xCA\xFE\xBA\xBE\x10\xF0\x0B\xAA')

453 
	`as£π
 (
‰ame_hódîs_¥io
.
u≈added_d©a
 =
b
'\xCA\xFE\xBA\xBE\x10\xF0\x0B\xAA')

454 
	$as£π
 (
‰ame_hódîs_¥io
.
¥i‹ôy
.
ex˛usive
 =
True
)

455 
	$as£π
 (
‰ame_hódîs_¥io
.
¥i‹ôy
.
°ªam_dï
 == 0x4afebabe)

456 
	$as£π
 (
‰ame_hódîs_¥io
.
¥i‹ôy
.
weight
 == 0x11)

457 
	`as£π
 (
‰ame_hódîs_¥io
.
block_‰agmít
 =
b
'\xF0\x0B\xAA')

459 
imp‹t
 
pyã°


460 #InvÆid 
¥i‹ôy


461 
wôh
 
pyã°
.
	$øi£s
(
HTTP2Ex˚±i⁄
Ë
as
 
e
:

462 
x
 = 
	`HódîsFøme
(
codecs
.
	`decode
(
b
'000002' #length

463 
b
'0120' #ty≥, 
Êags


464 
b
'dódbìf' #°ªam 
id


465 
b
'1234' #övÆid 
¥i‹ôy


467 
	`as£π
 (
	`°r
(
e
.
vÆue
) == 'Missing stream dependency in HEADERS frame with PRIORITY flag')

469 
def
 
	$ã°_¥i‹ôy
(
£lf
):

470 
‰ame_¥i‹ôy
 = 
	`FømeFa˘‹y
(
codecs
.
	`decode
(
b
'000005' #length

471 
b
'0200' #ty≥, 
Êags


472 
b
'dódbìf' #°ªam 
id


473 
b
'ˇ„babe' #°ªam 
dï


474 
b
'12' #weight

476 
	$as£π
 (
‰ame_¥i‹ôy
.
Àngth
 == 5)

477 
	$as£π
 (
‰ame_¥i‹ôy
.
ty≥
 =
HTTP2_FRAME_PRIORITY
)

478 
	$as£π
 (
‰ame_¥i‹ôy
.
Êags
 == 0)

479 
	$as£π
 (
‰ame_¥i‹ôy
.
°ªam_id
 == 0xdeadbeef)

480 
	`as£π
 (
‰ame_¥i‹ôy
.
d©a
 =
b
'\xCA\xFE\xBA\xBE\x12')

481 
	`as£π
 (
‰ame_¥i‹ôy
.
¥i‹ôy
.
d©a
 =
b
'')

482 
	$as£π
 (
‰ame_¥i‹ôy
.
¥i‹ôy
.
ex˛usive
 =
True
)

483 
	$as£π
 (
‰ame_¥i‹ôy
.
¥i‹ôy
.
°ªam_dï
 == 0x4afebabe)

484 
	$as£π
 (
‰ame_¥i‹ôy
.
¥i‹ôy
.
weight
 == 0x13)

486 
imp‹t
 
pyã°


487 #InvÆid 
Àngth


488 
wôh
 
pyã°
.
	$øi£s
(
HTTP2Ex˚±i⁄
Ë
as
 
e
:

489 
x
 = 
	`Pri‹ôyFøme
(
codecs
.
	`decode
(
b
'000006' #length

490 
b
'0200' #ty≥, 
Êags


491 
b
'dódbìf' #°ªam 
id


492 
b
'ˇ„babe' #°ªam 
dï


493 
b
'12' #weight

494 
b
'00' #u√x≥˘ed 
addôi⁄Æ
 
∑ylﬂd


496 
	`as£π
 (
	`°r
(
e
.
vÆue
) == 'InvalidÇumber of bytes in PRIORITY frame')

498 
def
 
	$ã°_r°_°ªam
(
£lf
):

499 
‰ame_r°
 = 
	`FømeFa˘‹y
(
codecs
.
	`decode
(
b
'000004' #length

500 
b
'0300' #ty≥, 
Êags


501 
b
'dódbìf' #°ªam 
id


502 
b
'0000000c' #îr‹ 
code


504 
	$as£π
 (
‰ame_r°
.
Àngth
 == 4)

505 
	$as£π
 (
‰ame_r°
.
ty≥
 =
HTTP2_FRAME_RST_STREAM
)

506 
	$as£π
 (
‰ame_r°
.
Êags
 == 0)

507 
	$as£π
 (
‰ame_r°
.
°ªam_id
 == 0xdeadbeef)

508 
	`as£π
 (
‰ame_r°
.
d©a
 =
b
'\x00\x00\x00\x0c')

509 
	$as£π
 (
‰ame_r°
.
îr‹_code
 =
HTTP2_INADEQUATE_SECURITY
)

511 
imp‹t
 
pyã°


512 #InvÆid 
Àngth


513 
wôh
 
pyã°
.
	$øi£s
(
HTTP2Ex˚±i⁄
Ë
as
 
e
:

514 
x
 = 
	`RSTSåómFøme
(
codecs
.
	`decode
(
b
'000005' #length

515 
b
'0300' #ty≥, 
Êags


516 
b
'dódbìf' #°ªam 
id


517 
b
'0000000c' #îr‹ 
code


518 
b
'00' #u√x≥˘ed 
addôi⁄Æ
 
∑ylﬂd


520 
	`as£π
 (
	`°r
(
e
.
vÆue
) == 'InvalidÇumber of bytes in RST_STREAM frame (must be 4)')

522 
def
 
	$ã°_£âögs
(
£lf
):

523 
‰ame_£âögs
 = 
	`FømeFa˘‹y
(
codecs
.
	`decode
(
b
'00000c' #length

524 
b
'0400' #ty≥, 
Êags


525 
b
'00000000' #°ªam 
id


527 
b
'0004' #£âög 
id


528 
b
'00020000' #£âög 
vÆue


529 
b
'0005' #£âög 
id


530 
b
'00004000' #£âög 
vÆue


532 
	$as£π
 (
‰ame_£âögs
.
Àngth
 == 12)

533 
	$as£π
 (
‰ame_£âögs
.
ty≥
 =
HTTP2_FRAME_SETTINGS
)

534 
	$as£π
 (
‰ame_£âögs
.
Êags
 == 0)

535 
	$as£π
 (
‰ame_£âögs
.
°ªam_id
 == 0)

536 
	`as£π
 (
	`Àn
(
‰ame_£âögs
.
£âögs
) == 2)

537 
	$as£π
 (
‰ame_£âögs
.
£âögs
[0].
idítifõr
 =
HTTP2_SETTINGS_INITIAL_WINDOW_SIZE
)

538 
	$as£π
 (
‰ame_£âögs
.
£âögs
[0].
vÆue
 == 0x20000)

539 
	$as£π
 (
‰ame_£âögs
.
£âögs
[1].
idítifõr
 =
HTTP2_SETTINGS_MAX_FRAME_SIZE
)

540 
	$as£π
 (
‰ame_£âögs
.
£âögs
[1].
vÆue
 == 0x4000)

542 #Sëtög†
ack
, 
wôh
 
em±y
 
∑ylﬂd


543 
‰ame_£âögs_ack
 = 
	`FømeFa˘‹y
(
codecs
.
	`decode
(
b
'000000' #length

544 
b
'0401' #ty≥, 
Êags


545 
b
'00000000' #°ªam 
id


547 
	$as£π
 (
‰ame_£âögs_ack
.
Àngth
 == 0)

548 
	$as£π
 (
‰ame_£âögs_ack
.
ty≥
 =
HTTP2_FRAME_SETTINGS
)

549 
	$as£π
 (
‰ame_£âögs_ack
.
Êags
 =
HTTP2_FLAG_ACK
)

550 
	$as£π
 (
‰ame_£âögs_ack
.
°ªam_id
 == 0)

551 
	`as£π
 (
	`Àn
(
‰ame_£âögs_ack
.
£âögs
) == 0)

553 
imp‹t
 
pyã°


554 #InvÆid 
Àngth


555 
wôh
 
pyã°
.
	$øi£s
(
HTTP2Ex˚±i⁄
Ë
as
 
e
:

556 
x
 = 
	`SëtögsFøme
(
codecs
.
	`decode
(
b
'000005' #length

557 
b
'0400' #ty≥, 
Êags


558 
b
'dódbìf' #°ªam 
id


559 
b
'1234567890' #övÆid 
Àngth


561 
	`as£π
 (
	`°r
(
e
.
vÆue
) == 'InvalidÇumber of bytes in SETTINGS frame (must be multiple of 6)')

563 
def
 
	$ã°_push_¥omi£
(
£lf
):

564 
‰ame_µ
 = 
	`FømeFa˘‹y
(
codecs
.
	`decode
(
b
'000007' #length

565 
b
'0500' #ty≥, 
Êags


566 
b
'dódbìf' #°ªam 
id


567 
b
'ˇ„babe' #¥omi£d 
id


568 
b
'123456' #somê
block
 
‰agmít


570 
	$as£π
 (
‰ame_µ
.
Àngth
 == 7)

571 
	$as£π
 (
‰ame_µ
.
ty≥
 =
HTTP2_FRAME_PUSH_PROMISE
)

572 
	$as£π
 (
‰ame_µ
.
Êags
 == 0)

573 
	$as£π
 (
‰ame_µ
.
°ªam_id
 == 0xdeadbeef)

574 
	$as£π
 (
‰ame_µ
.
¥omi£d_id
 == 0xcafebabe)

575 
	`as£π
 (
‰ame_µ
.
block_‰agmít
 =
b
'\x12\x34\x56')

577 
imp‹t
 
pyã°


578 #InvÆid 
Àngth


579 
wôh
 
pyã°
.
	$øi£s
(
HTTP2Ex˚±i⁄
Ë
as
 
e
:

580 
x
 = 
	`PushPromi£Føme
(
codecs
.
	`decode
(
b
'000003' #length

581 
b
'0500' #ty≥, 
Êags


582 
b
'dódbìf' #°ªam 
id


583 
b
'ˇ„ba' #missög 
¥omi£d
 
id


585 
	`as£π
 (
	`°r
(
e
.
vÆue
) == 'MissingÖromised stream ID in PUSH_PROMISE frame')

587 
def
 
	$ã°_pög
(
£lf
):

588 
‰ame_pög
 = 
	`FømeFa˘‹y
(
codecs
.
	`decode
(
b
'000008' #length

589 
b
'0600' #ty≥, 
Êags


590 
b
'dódbìf' #°ªam 
id


591 
b
'ˇ„babe12345678' #u£∏
d©a


593 
	$as£π
 (
‰ame_pög
.
Àngth
 == 8)

594 
	$as£π
 (
‰ame_pög
.
ty≥
 =
HTTP2_FRAME_PING
)

595 
	$as£π
 (
‰ame_pög
.
Êags
 == 0)

596 
	$as£π
 (
‰ame_pög
.
°ªam_id
 == 0xdeadbeef)

597 
	`as£π
 (
‰ame_pög
.
d©a
 =
b
'\xCA\xFE\xBA\xBE\x12\x34\x56\x78')

599 
imp‹t
 
pyã°


600 #InvÆid 
Àngth


601 
wôh
 
pyã°
.
	$øi£s
(
HTTP2Ex˚±i⁄
Ë
as
 
e
:

602 
x
 = 
	`PögFøme
(
codecs
.
	`decode
(
b
'000005' #length

603 
b
'0600' #ty≥, 
Êags


604 
b
'dódbìf' #°ªam 
id


605 
b
'1234567890' #övÆid 
Àngth


607 
	`as£π
 (
	`°r
(
e
.
vÆue
) == 'InvalidÇumber of bytes in PING frame (must be 8)')

609 
def
 
	$ã°_gﬂway
(
£lf
):

610 
‰ame_gﬂway
 = 
	`FømeFa˘‹y
(
codecs
.
	`decode
(
b
'00000a' #length

611 
b
'0700' #ty≥, 
Êags


612 
b
'dódbìf' #°ªam 
id


613 
b
'00000000' #œ° 
°ªam
 
id


614 
b
'00000000' #îr‹ 
code


615 
b
'ˇ„' #debug 
d©a


617 
	$as£π
 (
‰ame_gﬂway
.
Àngth
 == 10)

618 
	$as£π
 (
‰ame_gﬂway
.
ty≥
 =
HTTP2_FRAME_GOAWAY
)

619 
	$as£π
 (
‰ame_gﬂway
.
Êags
 == 0)

620 
	$as£π
 (
‰ame_gﬂway
.
°ªam_id
 == 0xdeadbeef)

621 
	$as£π
 (
‰ame_gﬂway
.
œ°_°ªam_id
 == 0)

622 
	$as£π
 (
‰ame_gﬂway
.
îr‹_code
 =
HTTP2_NO_ERROR
)

623 
	`as£π
 (
‰ame_gﬂway
.
debug_d©a
 =
b
'\xCA\xFE')

625 
imp‹t
 
pyã°


626 #InvÆid 
Àngth


627 
wôh
 
pyã°
.
	$øi£s
(
HTTP2Ex˚±i⁄
Ë
as
 
e
:

628 
x
 = 
	`GoAwayFøme
(
codecs
.
	`decode
(
b
'000005' #length

629 
b
'0700' #ty≥, 
Êags


630 
b
'dódbìf' #°ªam 
id


631 
b
'1234567890' #övÆid 
Àngth


633 
	`as£π
 (
	`°r
(
e
.
vÆue
) == 'InvalidÇumber of bytes in GO_AWAY frame')

635 
def
 
	$ã°_wödow_upd©e
(
£lf
):

636 
‰ame_wu
 = 
	`FømeFa˘‹y
(
codecs
.
	`decode
(
b
'000004' #length

637 
b
'0800' #ty≥, 
Êags


638 
b
'dódbìf' #°ªam 
id


639 
b
'12345678' #wödow 
ö¸emít


641 
	$as£π
 (
‰ame_wu
.
Àngth
 == 4)

642 
	$as£π
 (
‰ame_wu
.
ty≥
 =
HTTP2_FRAME_WINDOW_UPDATE
)

643 
	$as£π
 (
‰ame_wu
.
Êags
 == 0)

644 
	$as£π
 (
‰ame_wu
.
°ªam_id
 == 0xdeadbeef)

645 
	$as£π
 (
‰ame_wu
.
wödow_ö¸emít
 == 0x12345678)

647 
imp‹t
 
pyã°


648 #InvÆid 
Àngth


649 
wôh
 
pyã°
.
	$øi£s
(
HTTP2Ex˚±i⁄
Ë
as
 
e
:

650 
x
 = 
	`WödowUpd©eFøme
(
codecs
.
	`decode
(
b
'000005' #length

651 
b
'0800' #ty≥, 
Êags


652 
b
'dódbìf' #°ªam 
id


653 
b
'1234567890' #övÆid 
Àngth


655 
	`as£π
 (
	`°r
(
e
.
vÆue
) == 'InvalidÇumber of bytes in WINDOW_UPDATE frame (must be 4)')

657 
def
 
	$ã°_c⁄töu©i⁄
(
£lf
):

658 
‰ame_c⁄t
 = 
	`FømeFa˘‹y
(
codecs
.
	`decode
(
b
'000003' #length

659 
b
'0900' #ty≥, 
Êags


660 
b
'dódbìf' #°ªam 
id


661 
b
'f00bØ' #block 
‰agmít


663 
	$as£π
 (
‰ame_c⁄t
.
Àngth
 == 3)

664 
	$as£π
 (
‰ame_c⁄t
.
ty≥
 =
HTTP2_FRAME_CONTINUATION
)

665 
	$as£π
 (
‰ame_c⁄t
.
Êags
 == 0)

666 
	$as£π
 (
‰ame_c⁄t
.
°ªam_id
 == 0xdeadbeef)

667 
	`as£π
 (
‰ame_c⁄t
.
block_‰agmít
 =
b
'\xF0\x0B\xAA')

670 
def
 
	$ã°_Á˘‹y
(
£lf
):

671 
imp‹t
 
pyã°


673 
pyã°
.
	`øi£s
(
dpkt
.
NìdD©a
, 
FømeFa˘‹y
, 
codecs
.
	`decode
(
b
'000000', 'hex'))

675 #InvÆid 
ty≥


676 
wôh
 
pyã°
.
	$øi£s
(
HTTP2Ex˚±i⁄
Ë
as
 
e
:

677 
x
 = 
	`FømeFa˘‹y
(
codecs
.
	`decode
(
b
'000000' #length

678 
b
'abcd' #ty≥, 
Êags


679 
b
'dódbìf' #°ªam 
id


681 
	`as£π
 (
	`°r
(
e
.
vÆue
) == 'Invalid frameÅype: 0xab')

683 
def
 
	$ã°_¥eÁ˚
(
£lf
):

684 
imp‹t
 
pyã°


686 
pyã°
.
	`øi£s
(
dpkt
.
NìdD©a
, 
PªÁ˚
,

687 
codecs
.
	`decode
(
b
'505249202a20485454502f322e300d0a', 'hex'))

688 
pyã°
.
	`øi£s
(
dpkt
.
NìdD©a
, 
PªÁ˚
, 
b
'\x00' * 23)

689 
wôh
 
pyã°
.
	$øi£s
(
HTTP2Ex˚±i⁄
Ë
as
 
e
:

690 
x
 = 
	`PªÁ˚
(
b
'\x00' * 24)

691 
	`as£π
 (
	`°r
(
e
.
vÆue
) == 'Invalid HTTP/2Öreface')

693 
def
 
	$ã°_mu…i
(
£lf
):

694 
	$as£π
 (
£lf
.
i
 == 128)

695 
	`as£π
 (
	`Àn
(
£lf
.
‰ames
) == 7)

697 
	$as£π
 (
£lf
.
‰ames
[0].
Àngth
 == 12)

698 
	$as£π
 (
£lf
.
‰ames
[1].
Àngth
 == 4)

699 
	$as£π
 (
£lf
.
‰ames
[2].
Àngth
 == 5)

700 
	$as£π
 (
£lf
.
‰ames
[3].
Àngth
 == 5)

701 
	$as£π
 (
£lf
.
‰ames
[4].
Àngth
 == 5)

702 
	$as£π
 (
£lf
.
‰ames
[5].
Àngth
 == 5)

703 
	$as£π
 (
£lf
.
‰ames
[6].
Àngth
 == 5)

705 
	$as£π
 (
£lf
.
‰ames
[0].
ty≥
 =
HTTP2_FRAME_SETTINGS
)

706 
	$as£π
 (
£lf
.
‰ames
[1].
ty≥
 =
HTTP2_FRAME_WINDOW_UPDATE
)

707 
	$as£π
 (
£lf
.
‰ames
[2].
ty≥
 =
HTTP2_FRAME_PRIORITY
)

708 
	$as£π
 (
£lf
.
‰ames
[3].
ty≥
 =
HTTP2_FRAME_PRIORITY
)

709 
	$as£π
 (
£lf
.
‰ames
[4].
ty≥
 =
HTTP2_FRAME_PRIORITY
)

710 
	$as£π
 (
£lf
.
‰ames
[5].
ty≥
 =
HTTP2_FRAME_PRIORITY
)

711 
	$as£π
 (
£lf
.
‰ames
[6].
ty≥
 =
HTTP2_FRAME_PRIORITY
)

713 
	$as£π
 (
£lf
.
‰ames
[0].
Êags
 == 0)

714 
	$as£π
 (
£lf
.
‰ames
[1].
Êags
 == 0)

715 
	$as£π
 (
£lf
.
‰ames
[2].
Êags
 == 0)

716 
	$as£π
 (
£lf
.
‰ames
[3].
Êags
 == 0)

717 
	$as£π
 (
£lf
.
‰ames
[4].
Êags
 == 0)

718 
	$as£π
 (
£lf
.
‰ames
[5].
Êags
 == 0)

719 
	$as£π
 (
£lf
.
‰ames
[6].
Êags
 == 0)

721 
	$as£π
 (
£lf
.
‰ames
[0].
°ªam_id
 == 0)

722 
	$as£π
 (
£lf
.
‰ames
[1].
°ªam_id
 == 0)

723 
	$as£π
 (
£lf
.
‰ames
[2].
°ªam_id
 == 3)

724 
	$as£π
 (
£lf
.
‰ames
[3].
°ªam_id
 == 5)

725 
	$as£π
 (
£lf
.
‰ames
[4].
°ªam_id
 == 7)

726 
	$as£π
 (
£lf
.
‰ames
[5].
°ªam_id
 == 9)

727 
	$as£π
 (
£lf
.
‰ames
[6].
°ªam_id
 == 11)

729 
‰ames
, 
i
 = 
	`‰ame_mu…i_Á˘‹y
(

730 
codecs
.
	`decode
(
b
'505249202a20485454502f322e300d0a', 'hex'),

731 
¥eÁ˚
=
True
)

732 
	`as£π
 (
	`Àn
(
‰ames
) == 0)

733 
	$as£π
 (
i
 == 0)

735 #O∆y 
¥eÁ˚
 
was
 
∑r£d


736 
‰ames
, 
i
 = 
	`‰ame_mu…i_Á˘‹y
(

737 
codecs
.
	`decode
(
b
'505249202a20485454502f322e300d0a'

738 
b
'0d0a534d0d0a0d0a00000c0400000000', 'hex'),

739 
¥eÁ˚
=
True
)

740 
	`as£π
 (
	`Àn
(
‰ames
) == 0)

741 
	`as£π
 (
i
 == 24)

	@icmp.py

1 #$Id: 
icmp
.
py
 45 2007-08-03 00:05:22
Z
 
j⁄
.
obîheide
 
$


2 #-*- 
codög
: 
utf
-8 -*-

4 
‰om
 
__futuª__
 
imp‹t
 
¥öt_fun˘i⁄


5 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


7 
	g‰om
 . 
imp‹t
 
	gdpkt


9 #Ty≥†(
icmp_ty≥
Ë
™d
 
codes
 (
icmp_code
) -

12 
	gICMP_CODE_NONE
 = 0 #f‹ 
ty≥s
 
wôhout
 
codes


13 
ICMP_ECHOREPLY
 = 0 #echÿ
ª∂y


14 
ICMP_UNREACH
 = 3 #de° 
uƒóchabÀ
, 
	gcodes
:

15 
ICMP_UNREACH_NET
 = 0 #bad 
√t


16 
ICMP_UNREACH_HOST
 = 1 #bad 
ho°


17 
ICMP_UNREACH_PROTO
 = 2 #bad 
¥Ÿocﬁ


18 
ICMP_UNREACH_PORT
 = 3 #bad 
p‹t


19 
ICMP_UNREACH_NEEDFRAG
 = 4 #IP_DF 
ˇu£d
 
dr›


20 
ICMP_UNREACH_SRCFAIL
 = 5 #§¯
rouã
 
Áûed


21 
ICMP_UNREACH_NET_UNKNOWN
 = 6 #unknow¿
√t


22 
ICMP_UNREACH_HOST_UNKNOWN
 = 7 #unknow¿
ho°


23 
ICMP_UNREACH_ISOLATED
 = 8 #§¯
ho°
 
isﬁ©ed


24 
ICMP_UNREACH_NET_PROHIB
 = 9 #f‹ 
¸y±o
 
devs


25 
ICMP_UNREACH_HOST_PROHIB
 = 10 #ditto

26 
ICMP_UNREACH_TOSNET
 = 11 #bad 
tos
 
√t


27 
ICMP_UNREACH_TOSHOST
 = 12 #bad 
tos
 
ho°


28 
ICMP_UNREACH_FILTER_PROHIB
 = 13 #¥ohibôed 
ac˚ss


29 
ICMP_UNREACH_HOST_PRECEDENCE
 = 14 #¥e˚dí˚ 
îr‹


30 
ICMP_UNREACH_PRECEDENCE_CUTOFF
 = 15 #¥e˚dí˚ 
cutoff


31 
ICMP_SRCQUENCH
 = 4 #∑ckë 
lo°
, 
¶ow
 
down


32 
	gICMP_REDIRECT
 = 5 #sh‹ã∏
rouã
, 
	gcodes
:

33 
ICMP_REDIRECT_NET
 = 0 #f‹ 
√tw‹k


34 
ICMP_REDIRECT_HOST
 = 1 #f‹ 
ho°


35 
ICMP_REDIRECT_TOSNET
 = 2 #f‹ 
tos
 
™d
 
√t


36 
ICMP_REDIRECT_TOSHOST
 = 3 #f‹ 
tos
 
™d
 
ho°


37 
ICMP_ALTHOSTADDR
 = 6 #Æã∫©ê
ho°
 
addªss


38 
ICMP_ECHO
 = 8 #echÿ
£rvi˚


39 
ICMP_RTRADVERT
 = 9 #rouã∏
advîti£
, 
	gcodes
:

40 
ICMP_RTRADVERT_NORMAL
 = 0 #normal

41 
ICMP_RTRADVERT_NOROUTE_COMMON
 = 16 #£À˘ivê
routög


42 
ICMP_RTRSOLICIT
 = 10 #rouã∏
sﬁicô©i⁄


43 
ICMP_TIMEXCEED
 = 11 #timê
ex˚eded
, 
	gcode
:

44 
ICMP_TIMEXCEED_INTRANS
 = 0 #âl==0 
ö
 
å™sô


45 
ICMP_TIMEXCEED_REASS
 = 1 #âl==0 
ö
 
ªass


46 
ICMP_PARAMPROB
 = 12 #ù 
hódî
 
bad


47 
ICMP_PARAMPROB_ERRATPTR
 = 0 #ªq. 
›t
. 
ab£¡


48 
ICMP_PARAMPROB_OPTABSENT
 = 1 #ªq. 
›t
. 
ab£¡


49 
ICMP_PARAMPROB_LENGTH
 = 2 #bad 
Àngth


50 
ICMP_TSTAMP
 = 13 #time°am∞
ªque°


51 
ICMP_TSTAMPREPLY
 = 14 #time°am∞
ª∂y


52 
ICMP_INFO
 = 15 #öf‹m©i⁄ 
ªque°


53 
ICMP_INFOREPLY
 = 16 #öf‹m©i⁄ 
ª∂y


54 
ICMP_MASK
 = 17 #addªs†
mask
 
ªque°


55 
ICMP_MASKREPLY
 = 18 #addªs†
mask
 
ª∂y


56 
ICMP_TRACEROUTE
 = 30 #traceroute

57 
ICMP_DATACONVERR
 = 31 #d©®
c⁄vîsi⁄
 
îr‹


58 
ICMP_MOBILE_REDIRECT
 = 32 #mobûê
ho°
 
ªdúe˘


59 
ICMP_IP6_WHEREAREYOU
 = 33 #IPv6 
whîe
-
¨e
-
you


60 
ICMP_IP6_IAMHERE
 = 34 #IPv6 
i
-
am
-
hîe


61 
ICMP_MOBILE_REG
 = 35 #mobûê
ªgi°øti⁄
 
ªq


62 
ICMP_MOBILE_REGREPLY
 = 36 #mobûê
ªgi°øti⁄
 
ª∂y


63 
ICMP_DNS
 = 37 #domaö 
«me
 
ªque°


64 
ICMP_DNSREPLY
 = 38 #domaö 
«me
 
ª∂y


65 
ICMP_SKIP
 = 39 #SKIP

66 
ICMP_PHOTURIS
 = 40 #Photuris

67 
ICMP_PHOTURIS_UNKNOWN_INDEX
 = 0 #unknow¿
£c
 
ödex


68 
ICMP_PHOTURIS_AUTH_FAILED
 = 1 #auth 
Áûed


69 
ICMP_PHOTURIS_DECOMPRESS_FAILED
 = 2 #decom¥es†
Áûed


70 
ICMP_PHOTURIS_DECRYPT_FAILED
 = 3 #de¸y± 
Áûed


71 
ICMP_PHOTURIS_NEED_AUTHN
 = 4 #nÿ
authítiˇti⁄


72 
ICMP_PHOTURIS_NEED_AUTHZ
 = 5 #nÿ
auth‹iz©i⁄


73 
ICMP_TYPE_MAX
 = 40

76 
˛ass
 
	$ICMP
(
dpkt
.
Packë
):

79 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

81 
Aâribuãs
:

82 
__hdr__
: 
Hódî
 
fõlds
 
of
 
ICMP
.

83 
TODO
.

86 
__hdr__
 = (

92 
˛ass
 
	$Echo
(
dpkt
.
Packë
):

93 
__hdr__
 = (('id', 'H', 0), ('seq', 'H', 0))

95 
˛ass
 
	$QuŸe
(
dpkt
.
Packë
):

96 
__hdr__
 = (('pad', 'I', 0),)

98 
def
 
	$u≈ack
(
£lf
, 
buf
):

99 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

100 
‰om
 . 
imp‹t
 
ù


101 
£lf
.
d©a
 = sñf.
ù
 = ip.
	$IP
(
£lf
.
d©a
)

103 
˛ass
 
	$Uƒóch
(
QuŸe
):

104 
__hdr__
 = (('pad', 'H', 0), ('mtu', 'H', 0))

106 
˛ass
 
	$Quích
(
QuŸe
):

107 
∑ss


109 
˛ass
 
	$Redúe˘
(
QuŸe
):

110 
__hdr__
 = (('gw', 'I', 0),)

112 
˛ass
 
	$P¨amProbe
(
QuŸe
):

113 
__hdr__
 = (('ptr', 'B', 0), ('pad1', 'B', 0), ('pad2', 'H', 0))

115 
˛ass
 
	$TimeEx˚ed
(
QuŸe
):

116 
∑ss


118 
_ty≥sw
 = {0: 
Echo
, 3: 
Uƒóch
, 4: 
Quích
, 5: 
Redúe˘
, 8: Echo, 11: 
TimeEx˚ed
}

120 
def
 
	$u≈ack
(
£lf
, 
buf
):

121 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

122 
åy
:

123 
£lf
.
d©a
 = sñf.
_ty≥sw
[£lf.
ty≥
](self.data)

124 
	`£èâr
(
£lf
, sñf.
d©a
.
__˛ass__
.
__«me__
.
	`lowî
(), self.data)

125 
	$ex˚±
 (
KeyEº‹
, 
dpkt
.
U≈ackEº‹
):

126 
∑ss


128 
def
 
	$__byãs__
(
£lf
):

129 
nŸ
 
£lf
.
sum
:

130 
£lf
.
sum
 = 
dpkt
.
	`ö_cksum
(dpkt.
Packë
.
	$__byãs__
(
£lf
))

131  
dpkt
.
Packë
.
	$__byãs__
(
£lf
)

134 
def
 
	$ã°_icmp
():

135 
s
 = (

136 
b
'\x03\x0a\x6b\x19\x00\x00\x00\x00\x45\x00\x00\x28\x94\x1f\x00\x00\xe3\x06\x99\xb4\x23\x2b'

137 
b
'\x24\x00\xde\x8e\x84\x42\xab\xd1\x00\x50\x00\x35\xe1\x29\x20\xd9\x00\x00\x00\x22\x9b\xf0'

138 
b
'\xe2\x04\x65\x6b'

140 
r
 = 
	$ICMP
(
s
)

141 
as£π
 
	`byãs
(
r
Ë=
s


144 
s
 = (

145 
b
'\x00\x00\x53\x87\x00\x01\x03\xd6\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e'

146 
b
'\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x41\x42\x43\x44\x45\x46\x47\x48\x49'

148 
p
 = 
	`ICMP
(

149 
ty≥
=0,

150 
sum
=0x5387,

151 
d©a
=
ICMP
.
	`Echo
(

152 
id
=1,

153 
£q
=0x03d6,

154 
d©a
=
b
'ABCDEFGHIJKLMNOPQRSTUVWABCDEFGHI'

157 
as£π
 
	`byãs
(
p
Ë=
s


159 #ã° 
checksum


160 
p
 = 
	`ICMP
(

161 
ty≥
=0,

162 
d©a
=
ICMP
.
	`Echo
(

163 
id
=1,

164 
£q
=0x03d6,

165 
d©a
=
b
'ABCDEFGHIJKLMNOPQRSTUVWABCDEFGHI'

168 
as£π
 
	`byãs
(
p
Ë=
s


169 
as£π
 
p
.
sum
 == 0x5387

172 
__«me__
 == '__main__':

173 
	$ã°_icmp
()

174 
	`¥öt
('Tests Successful...')

	@icmp6.py

1 #$Id: 
icmp6
.
py
 23 2006-11-08 15:45:33
Z
 
dugs⁄g
 
$


2 #-*- 
codög
: 
utf
-8 -*-

4 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


6 
	g‰om
 . 
imp‹t
 
dpkt


8 
	gICMP6_DST_UNREACH
 = 1 #de° 
uƒóchabÀ
, 
	gcodes
:

9 
ICMP6_PACKET_TOO_BIG
 = 2 #∑ckë 
too
 
big


10 
ICMP6_TIME_EXCEEDED
 = 3 #timê
ex˚eded
, 
	gcode
:

11 
ICMP6_PARAM_PROB
 = 4 #ù6 
hódî
 
bad


13 
ICMP6_ECHO_REQUEST
 = 128 #echÿ
£rvi˚


14 
ICMP6_ECHO_REPLY
 = 129 #echÿ
ª∂y


15 
MLD_LISTENER_QUERY
 = 130 #mu…iˇ° 
li°íî
 
quîy


16 
MLD_LISTENER_REPORT
 = 131 #mu…iˇ° 
li°íî
 
ªp‹t


17 
MLD_LISTENER_DONE
 = 132 #mu…iˇ° 
li°íî
 
d⁄e


19 #RFC2292 
de˛s


20 
ICMP6_MEMBERSHIP_QUERY
 = 130 #grou∞
membîshù
 
quîy


21 
ICMP6_MEMBERSHIP_REPORT
 = 131 #grou∞
membîshù
 
ªp‹t


22 
ICMP6_MEMBERSHIP_REDUCTION
 = 132 #grou∞
membîshù
 
ãrmö©i⁄


24 
ND_ROUTER_SOLICIT
 = 133 #rouã∏
sﬁicô©i⁄


25 
ND_ROUTER_ADVERT
 = 134 #rouã∏
advîtismít


26 
ND_NEIGHBOR_SOLICIT
 = 135 #√ighb‹ 
sﬁicô©i⁄


27 
ND_NEIGHBOR_ADVERT
 = 136 #√ighb‹ 
advîtismít


28 
ND_REDIRECT
 = 137 #redirect

30 
ICMP6_ROUTER_RENUMBERING
 = 138 #rouã∏
ªnumbîög


32 
ICMP6_WRUREQUEST
 = 139 #whÿ
¨e
 
you
 
ªque°


33 
ICMP6_WRUREPLY
 = 140 #whÿ
¨e
 
you
 
ª∂y


34 
ICMP6_FQDN_QUERY
 = 139 #FQDN 
quîy


35 
ICMP6_FQDN_REPLY
 = 140 #FQDN 
ª∂y


36 
ICMP6_NI_QUERY
 = 139 #nodê
öf‹m©i⁄
 
ªque°


37 
ICMP6_NI_REPLY
 = 140 #nodê
öf‹m©i⁄
 
ª∂y


39 
ICMP6_MAXTYPE
 = 201

42 
˛ass
 
	$ICMP6
(
dpkt
.
Packë
):

45 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

47 
Aâribuãs
:

48 
__hdr__
: 
Hódî
 
fõlds
 
of
 
ICMPv6
.

49 
TODO
.

52 
__hdr__
 = (

58 
˛ass
 
	$Eº‹
(
dpkt
.
Packë
):

59 
__hdr__
 = (('pad', 'I', 0), )

61 
def
 
	$u≈ack
(
£lf
, 
buf
):

62 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

63 
‰om
 . 
imp‹t
 
ù6


64 
£lf
.
d©a
 = sñf.
ù6
 = ip6.
	$IP6
(
£lf
.
d©a
)

66 
˛ass
 
	$Uƒóch
(
Eº‹
): 
∑ss


68 
˛ass
 
	$TooBig
(
Eº‹
):

69 
__hdr__
 = (('mtu', 'I', 1232), )

71 
˛ass
 
	$TimeEx˚ed
(
Eº‹
): 
∑ss


73 
˛ass
 
	$P¨amProb
(
Eº‹
):

74 
__hdr__
 = (('ptr', 'I', 0), )

76 
˛ass
 
	$Echo
(
dpkt
.
Packë
):

77 
__hdr__
 = (('id', 'H', 0), ('seq', 'H', 0))

79 
_ty≥sw
 = {1: 
Uƒóch
, 2: 
TooBig
, 3: 
TimeEx˚ed
, 4: 
P¨amProb
, 128: 
Echo
, 129: 
	}
Echo}

81 
def
 
	$u≈ack
(
£lf
, 
buf
):

82 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

83 
åy
:

84 
£lf
.
d©a
 = sñf.
_ty≥sw
[£lf.
ty≥
](self.data)

85 
	`£èâr
(
£lf
, sñf.
d©a
.
__˛ass__
.
__«me__
.
	`lowî
(), self.data)

86 
	$ex˚±
 (
KeyEº‹
, 
dpkt
.
U≈ackEº‹
):

87 
∑ss


	@ieee80211.py

1 #$Id: 80211.
py
 53 2008-12-18 01:22:57
Z
 
j⁄
.
obîheide
 
$


2 #-*- 
codög
: 
utf
-8 -*-

4 
‰om
 
__futuª__
 
imp‹t
 
¥öt_fun˘i⁄


5 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


7 
imp‹t
 
sockë


8 
imp‹t
 

10 
	g‰om
 . 
imp‹t
 
dpkt


11 
	g‰om
 .
dec‹©‹s
 
imp‹t
 
	gdïªˇãd


13 #Fømê
Ty≥s


14 
	gMGMT_TYPE
 = 0

15 
CTL_TYPE
 = 1

16 
DATA_TYPE
 = 2

18 #Fømê
Sub
-
Ty≥s


19 
M_ASSOC_REQ
 = 0

20 
M_ASSOC_RESP
 = 1

21 
M_REASSOC_REQ
 = 2

22 
M_REASSOC_RESP
 = 3

23 
M_PROBE_REQ
 = 4

24 
M_PROBE_RESP
 = 5

25 
M_BEACON
 = 8

26 
M_ATIM
 = 9

27 
M_DISASSOC
 = 10

28 
M_AUTH
 = 11

29 
M_DEAUTH
 = 12

30 
M_ACTION
 = 13

31 
C_BLOCK_ACK_REQ
 = 8

32 
C_BLOCK_ACK
 = 9

33 
C_PS_POLL
 = 10

34 
C_RTS
 = 11

35 
C_CTS
 = 12

36 
C_ACK
 = 13

37 
C_CF_END
 = 14

38 
C_CF_END_ACK
 = 15

39 
D_DATA
 = 0

40 
D_DATA_CF_ACK
 = 1

41 
D_DATA_CF_POLL
 = 2

42 
D_DATA_CF_ACK_POLL
 = 3

43 
D_NULL
 = 4

44 
D_CF_ACK
 = 5

45 
D_CF_POLL
 = 6

46 
D_CF_ACK_POLL
 = 7

47 
D_QOS_DATA
 = 8

48 
D_QOS_CF_ACK
 = 9

49 
D_QOS_CF_POLL
 = 10

50 
D_QOS_CF_ACK_POLL
 = 11

51 
D_QOS_NULL
 = 12

52 
D_QOS_CF_POLL_EMPTY
 = 14

54 
TO_DS_FLAG
 = 10

55 
FROM_DS_FLAG
 = 1

56 
INTER_DS_FLAG
 = 11

58 #Bôshi·†
Føme
 
C⁄åﬁ


59 
_VERSION_MASK
 = 0x0300

60 
_TYPE_MASK
 = 0x0c00

61 
_SUBTYPE_MASK
 = 0xf000

62 
_TO_DS_MASK
 = 0x0001

63 
_FROM_DS_MASK
 = 0x0002

64 
_MORE_FRAG_MASK
 = 0x0004

65 
_RETRY_MASK
 = 0x0008

66 
_PWR_MGT_MASK
 = 0x0010

67 
_MORE_DATA_MASK
 = 0x0020

68 
_WEP_MASK
 = 0x0040

69 
_ORDER_MASK
 = 0x0080

70 
_VERSION_SHIFT
 = 8

71 
_TYPE_SHIFT
 = 10

72 
_SUBTYPE_SHIFT
 = 12

73 
_TO_DS_SHIFT
 = 0

74 
_FROM_DS_SHIFT
 = 1

75 
_MORE_FRAG_SHIFT
 = 2

76 
_RETRY_SHIFT
 = 3

77 
_PWR_MGT_SHIFT
 = 4

78 
_MORE_DATA_SHIFT
 = 5

79 
_WEP_SHIFT
 = 6

80 
_ORDER_SHIFT
 = 7

83 
IE_SSID
 = 0

84 
IE_RATES
 = 1

85 
IE_FH
 = 2

86 
IE_DS
 = 3

87 
IE_CF
 = 4

88 
IE_TIM
 = 5

89 
IE_IBSS
 = 6

90 
IE_HT_CAPA
 = 45

91 
IE_ESR
 = 50

92 
IE_HT_INFO
 = 61

94 
FCS_LENGTH
 = 4

96 
FRAMES_WITH_CAPABILITY
 = [
M_BEACON
, 
M_ASSOC_RESP
, 
M_ASSOC_REQ
, 
M_REASSOC_REQ
, ]

98 #Block 
Ack
 
c⁄åﬁ
 
c⁄°™ts


99 
	g_ACK_POLICY_SHIFT
 = 0

100 
_MULTI_TID_SHIFT
 = 1

101 
_COMPRESSED_SHIFT
 = 2

102 
_TID_SHIFT
 = 12

104 
_ACK_POLICY_MASK
 = 0x0001

105 
_MULTI_TID_MASK
 = 0x0002

106 
_COMPRESSED_MASK
 = 0x0004

107 
_TID_MASK
 = 0xf000

109 
_COMPRESSED_BMP_LENGTH
 = 8

110 
_BMP_LENGTH
 = 128

112 #A˘i⁄ 
‰ame
 
ˇãg‹õs


113 
BLOCK_ACK
 = 3

115 #Block 
ack
 
ˇãg‹y
 
a˘i⁄
 
codes


116 
BLOCK_ACK_CODE_REQUEST
 = 0

117 
BLOCK_ACK_CODE_RESPONSE
 = 1

120 
˛ass
 
	$IEEE80211
(
dpkt
.
Packë
):

123 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

125 
Aâribuãs
:

126 
__hdr__
: 
Hódî
 
fõlds
 
of
 
IEEE802
.11.

127 
TODO
.

130 
__hdr__
 = (

135 @
¥›îty


136 
def
 
	$vîsi⁄
(
£lf
):

137  (
£lf
.
‰ame˘l
 & 
_VERSION_MASK
Ë>> 
_VERSION_SHIFT


139 @
vîsi⁄
.
£âî


140 
def
 
	$vîsi⁄
(
£lf
, 
vÆ
):

141 
£lf
.
‰ame˘l
 = (
vÆ
 << 
_VERSION_SHIFT
Ë| (£lf.‰ame˘»& ~
_VERSION_MASK
)

143 @
¥›îty


144 
def
 
	$ty≥
(
£lf
):

145  (
£lf
.
‰ame˘l
 & 
_TYPE_MASK
Ë>> 
_TYPE_SHIFT


147 @
ty≥
.
£âî


148 
def
 
	$ty≥
(
£lf
, 
vÆ
):

149 
£lf
.
‰ame˘l
 = (
vÆ
 << 
_TYPE_SHIFT
Ë| (£lf.‰ame˘»& ~
_TYPE_MASK
)

151 @
¥›îty


152 
def
 
	$subty≥
(
£lf
):

153  (
£lf
.
‰ame˘l
 & 
_SUBTYPE_MASK
Ë>> 
_SUBTYPE_SHIFT


155 @
subty≥
.
£âî


156 
def
 
	$subty≥
(
£lf
, 
vÆ
):

157 
£lf
.
‰ame˘l
 = (
vÆ
 << 
_SUBTYPE_SHIFT
Ë| (£lf.‰ame˘»& ~
_SUBTYPE_MASK
)

159 @
¥›îty


160 
def
 
	$to_ds
(
£lf
):

161  (
£lf
.
‰ame˘l
 & 
_TO_DS_MASK
Ë>> 
_TO_DS_SHIFT


163 @
to_ds
.
£âî


164 
def
 
	$to_ds
(
£lf
, 
vÆ
):

165 
£lf
.
‰ame˘l
 = (
vÆ
 << 
_TO_DS_SHIFT
Ë| (£lf.‰ame˘»& ~
_TO_DS_MASK
)

167 @
¥›îty


168 
def
 
	$‰om_ds
(
£lf
):

169  (
£lf
.
‰ame˘l
 & 
_FROM_DS_MASK
Ë>> 
_FROM_DS_SHIFT


171 @
‰om_ds
.
£âî


172 
def
 
	$‰om_ds
(
£lf
, 
vÆ
):

173 
£lf
.
‰ame˘l
 = (
vÆ
 << 
_FROM_DS_SHIFT
Ë| (£lf.‰ame˘»& ~
_FROM_DS_MASK
)

175 @
¥›îty


176 
def
 
	$m‹e_‰ag
(
£lf
):

177  (
£lf
.
‰ame˘l
 & 
_MORE_FRAG_MASK
Ë>> 
_MORE_FRAG_SHIFT


179 @
m‹e_‰ag
.
£âî


180 
def
 
	$m‹e_‰ag
(
£lf
, 
vÆ
):

181 
£lf
.
‰ame˘l
 = (
vÆ
 << 
_MORE_FRAG_SHIFT
Ë| (£lf.‰ame˘»& ~
_MORE_FRAG_MASK
)

183 @
¥›îty


184 
def
 
	$ªåy
(
£lf
):

185  (
£lf
.
‰ame˘l
 & 
_RETRY_MASK
Ë>> 
_RETRY_SHIFT


187 @
ªåy
.
£âî


188 
def
 
	$ªåy
(
£lf
, 
vÆ
):

189 
£lf
.
‰ame˘l
 = (
vÆ
 << 
_RETRY_SHIFT
Ë| (£lf.‰ame˘»& ~
_RETRY_MASK
)

191 @
¥›îty


192 
def
 
	$pwr_mgt
(
£lf
):

193  (
£lf
.
‰ame˘l
 & 
_PWR_MGT_MASK
Ë>> 
_PWR_MGT_SHIFT


195 @
pwr_mgt
.
£âî


196 
def
 
	$pwr_mgt
(
£lf
, 
vÆ
):

197 
£lf
.
‰ame˘l
 = (
vÆ
 << 
_PWR_MGT_SHIFT
Ë| (£lf.‰ame˘»& ~
_PWR_MGT_MASK
)

199 @
¥›îty


200 
def
 
	$m‹e_d©a
(
£lf
):

201  (
£lf
.
‰ame˘l
 & 
_MORE_DATA_MASK
Ë>> 
_MORE_DATA_SHIFT


203 @
m‹e_d©a
.
£âî


204 
def
 
	$m‹e_d©a
(
£lf
, 
vÆ
):

205 
£lf
.
‰ame˘l
 = (
vÆ
 << 
_MORE_DATA_SHIFT
Ë| (£lf.‰ame˘»& ~
_MORE_DATA_MASK
)

207 @
¥›îty


208 
def
 
	$wï
(
£lf
):

209  (
£lf
.
‰ame˘l
 & 
_WEP_MASK
Ë>> 
_WEP_SHIFT


211 @
wï
.
£âî


212 
def
 
	$wï
(
£lf
, 
vÆ
):

213 
£lf
.
‰ame˘l
 = (
vÆ
 << 
_WEP_SHIFT
Ë| (£lf.‰ame˘»& ~
_WEP_MASK
)

215 @
¥›îty


216 
def
 
	$‹dî
(
£lf
):

217  (
£lf
.
‰ame˘l
 & 
_ORDER_MASK
Ë>> 
_ORDER_SHIFT


219 @
‹dî
.
£âî


220 
def
 
	$‹dî
(
£lf
, 
vÆ
):

221 
£lf
.
‰ame˘l
 = (
vÆ
 << 
_ORDER_SHIFT
Ë| (£lf.‰ame˘»& ~
_ORDER_MASK
)

223 
def
 
	$u≈ack_õs
(
£lf
, 
buf
):

224 
£lf
.
õs
 = []

226 
õ_decodî
 = {

227 
IE_SSID
: ('ssid', 
£lf
.
IE
),

228 
IE_RATES
: ('øã', 
£lf
.
IE
),

229 
IE_FH
: ('fh', 
£lf
.
FH
),

230 
IE_DS
: ('ds', 
£lf
.
DS
),

231 
IE_CF
: ('cf', 
£lf
.
CF
),

232 
IE_TIM
: ('tim', 
£lf
.
TIM
),

233 
IE_IBSS
: ('ibss', 
£lf
.
IBSS
),

234 
IE_HT_CAPA
: ('ht_ˇ∑', 
£lf
.
IE
),

235 
IE_ESR
: ('e§', 
£lf
.
IE
),

236 
IE_HT_INFO
: ('ht_öfo', 
£lf
.
IE
)

237 
	}
}

239 #óch 
IE
 
°¨ts
 
wôh
 
™
 
ID
 
™d
 
a
 
Àngth


240 
Àn
(
buf
Ë> 
FCS_LENGTH
:

241 
õ_id
 = .
u≈ack
('B', 
buf
[:1])[0]

242 
åy
:

243 
∑r£r
 = 
õ_decodî
[
õ_id
][1]

244 
«me
 = 
õ_decodî
[
õ_id
][0]

245 
ex˚±
 
KeyEº‹
:

246 
∑r£r
 = 
£lf
.
IE


247 
«me
 = 'õ_' + 
	$°r
(
õ_id
)

248 
õ
 = 
	$∑r£r
(
buf
)

250 
õ
.
d©a
 = 
buf
[2:2 + ie.
Àn
]

251 
	$£èâr
(
£lf
, 
«me
, 
õ
)

252 
£lf
.
õs
.
	$≠≥nd
(
õ
)

253 
buf
 = buf[2 + 
õ
.
Àn
:]

255 
˛ass
 
	$C≠abûôy
(
obje˘
):

256 
def
 
	$__öô__
(
£lf
, 
fõld
):

257 
£lf
.
ess
 = 
fõld
 & 1

258 
£lf
.
ibss
 = (
fõld
 >> 1) & 1

259 
£lf
.
cf_pﬁl
 = (
fõld
 >> 2) & 1

260 
£lf
.
cf_pﬁl_ªq
 = (
fõld
 >> 3) & 1

261 
£lf
.
¥ivacy
 = (
fõld
 >> 4) & 1

262 
£lf
.
sh‹t_¥ómbÀ
 = (
fõld
 >> 5) & 1

263 
£lf
.
pbcc
 = (
fõld
 >> 6) & 1

264 
£lf
.
h›pög
 = (
fõld
 >> 7) & 1

265 
£lf
.
•ec_mgmt
 = (
fõld
 >> 8) & 1

266 
£lf
.
qos
 = (
fõld
 >> 9) & 1

267 
£lf
.
sh‹t_¶Ÿ
 = (
fõld
 >> 10) & 1

268 
£lf
.
≠sd
 = (
fõld
 >> 11) & 1

269 
£lf
.
dsss
 = (
fõld
 >> 13) & 1

270 
£lf
.
dñayed_blk_ack
 = (
fõld
 >> 14) & 1

271 
£lf
.
imm_blk_ack
 = (
fõld
 >> 15) & 1

273 
def
 
	$__öô__
(
£lf
, *
¨gs
, **
kw¨gs
):

274 
kw¨gs
 
™d
 'fcs' 
ö
 kwargs:

275 
£lf
.
fcs_¥e£¡
 = 
kw¨gs
.
	`p›
('fcs')

277 
£lf
.
fcs_¥e£¡
 = 
FÆ£


279 
	`su≥r
(
IEEE80211
, 
£lf
).
	$__öô__
(*
¨gs
, **
kw¨gs
)

281 
def
 
	$u≈ack
(
£lf
, 
buf
):

282 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

283 
£lf
.
d©a
 = 
buf
[£lf.
__hdr_Àn__
:]

285 
m_decodî
 = {

286 
M_BEACON
: ('bóc⁄', 
£lf
.
Bóc⁄
),

287 
M_ASSOC_REQ
: ('assoc_ªq', 
£lf
.
Assoc_Req
),

288 
M_ASSOC_RESP
: ('assoc_ª•', 
£lf
.
Assoc_Re•
),

289 
M_DISASSOC
: ('düssoc', 
£lf
.
Dißssoc
),

290 
M_REASSOC_REQ
: ('ªassoc_ªq', 
£lf
.
Róssoc_Req
),

291 
M_REASSOC_RESP
: ('ªassoc_ª•', 
£lf
.
Assoc_Re•
),

292 
M_AUTH
: ('auth', 
£lf
.
Auth
),

293 
M_PROBE_RESP
: ('¥obe_ª•', 
£lf
.
Bóc⁄
),

294 
M_DEAUTH
: ('dóuth', 
£lf
.
Dóuth
),

295 
M_ACTION
: ('a˘i⁄', 
£lf
.
A˘i⁄
)

296 
	}
}

298 
c_decodî
 = {

299 
C_RTS
: ('πs', 
£lf
.
RTS
),

300 
C_CTS
: ('˘s', 
£lf
.
CTS
),

301 
C_ACK
: ('ack', 
£lf
.
ACK
),

302 
C_BLOCK_ACK_REQ
: ('b¨', 
£lf
.
BlockAckReq
),

303 
C_BLOCK_ACK
: ('back', 
£lf
.
BlockAck
),

304 
C_CF_END
: ('cf_íd', 
£lf
.
CFEnd
),

307 
d_dsD©a
 = {

308 0: 
£lf
.
D©a
,

309 
FROM_DS_FLAG
: 
£lf
.
D©aFromDS
,

310 
TO_DS_FLAG
: 
£lf
.
D©aToDS
,

311 
INTER_DS_FLAG
: 
£lf
.
D©aI¡îDS


314 #F‹ 
now
 
decode
 
evîythög
 
wôh
 
DATA
. 
Haví
't checkedábout other QoS

316 
d_decodî
 = {

317 #modifõd 
the
 
decodî
 
to
 
c⁄sidî
Åhê
ToDS
 
™d
 
FromDS
 
Êags


318 #Omôtög 
the
 11 
now


319 
D_DATA
: ('d©a_‰ame', 
d_dsD©a
),

320 
D_NULL
: ('d©a_‰ame', 
d_dsD©a
),

321 
D_QOS_DATA
: ('d©a_‰ame', 
d_dsD©a
),

322 
D_QOS_NULL
: ('d©a_‰ame', 
d_dsD©a
)

325 
decodî
 = {

326 
MGMT_TYPE
: 
m_decodî
,

327 
CTL_TYPE
: 
c_decodî
,

328 
DATA_TYPE
: 
d_decodî


331 #Såù 
off
 
the
 
FCS
 
fõld


332 
£lf
.
fcs_¥e£¡
:

333 
£lf
.
fcs
 = .
u≈ack
('I', sñf.
d©a
[-1 * 
FCS_LENGTH
:])[0]

334 
£lf
.
d©a
 = sñf.d©a[0: -1 * 
FCS_LENGTH
]

336 
£lf
.
ty≥
 =
MGMT_TYPE
:

337 
£lf
.
mgmt
 = sñf.
	$MGMT_Føme
(
£lf
.
d©a
)

338 
£lf
.
d©a
 = sñf.
mgmt
.data

339 
£lf
.
subty≥
 =
M_PROBE_REQ
:

340 
£lf
.
	$u≈ack_õs
(
£lf
.
d©a
)

342 
£lf
.
subty≥
 =
M_ATIM
:

345 
åy
:

346 
∑r£r
 = 
decodî
[
£lf
.
ty≥
][£lf.
subty≥
][1]

347 
«me
 = 
decodî
[
£lf
.
ty≥
][£lf.
subty≥
][0]

348 
ex˚±
 
KeyEº‹
:

349 
øi£
 
dpkt
.
	`U≈ackEº‹
("KeyEº‹:Åy≥=%†subty≥=%s" % (
£lf
.
ty≥
, sñf.
subty≥
))

351 
£lf
.
ty≥
 =
DATA_TYPE
:

352 #√ed 
to
 
gøb
 
the
 
ToDS
/
FromDS
 
öfo


353 
∑r£r
 =Ö¨£r[
£lf
.
to_ds
 * 10 + sñf.
‰om_ds
]

355 
£lf
.
ty≥
 =
MGMT_TYPE
:

356 
fõld
 = 
	$∑r£r
(
£lf
.
mgmt
.
d©a
)

358 
fõld
 = 
	$∑r£r
(
£lf
.
d©a
)

359 
£lf
.
d©a
 = 
fõld


361 
	$£èâr
(
£lf
, 
«me
, 
fõld
)

363 
£lf
.
ty≥
 =
MGMT_TYPE
:

364 
£lf
.
	$u≈ack_õs
(
fõld
.
d©a
)

365 
£lf
.
subty≥
 
ö
 
FRAMES_WITH_CAPABILITY
:

366 
£lf
.
ˇ∑bûôy
 = sñf.
	`C≠abûôy
(
sockë
.
	$¡ohs
(
fõld
.
ˇ∑bûôy
))

368 
£lf
.
ty≥
 =
DATA_TYPE
 
™d
 sñf.
subty≥
 =
D_QOS_DATA
:

369 
£lf
.
qos_d©a
 = sñf.
	$QoS_D©a
(
fõld
.
d©a
)

370 
fõld
.
d©a
 = 
£lf
.
qos_d©a
.data

372 
£lf
.
d©a
 = 
fõld
.data

374 
˛ass
 
	$BlockAckReq
(
dpkt
.
Packë
):

375 
__hdr__
 = (

382 
˛ass
 
	$BlockAck
(
dpkt
.
Packë
):

383 
__hdr__
 = (

390 @
¥›îty


391 
def
 
	$com¥es£d
(
£lf
):

392  (
£lf
.
˘l
 & 
_COMPRESSED_MASK
Ë>> 
_COMPRESSED_SHIFT


394 @
com¥es£d
.
£âî


395 
def
 
	$com¥es£d
(
£lf
, 
vÆ
):

396 
£lf
.
˘l
 = (
vÆ
 << 
_COMPRESSED_SHIFT
Ë| (£lf.˘»& ~
_COMPRESSED_MASK
)

398 @
¥›îty


399 
def
 
	$ack_pﬁicy
(
£lf
):

400  (
£lf
.
˘l
 & 
_ACK_POLICY_MASK
Ë>> 
_ACK_POLICY_SHIFT


402 @
ack_pﬁicy
.
£âî


403 
def
 
	$ack_pﬁicy
(
£lf
, 
vÆ
):

404 
£lf
.
˘l
 = (
vÆ
 << 
_ACK_POLICY_SHIFT
Ë| (£lf.˘»& ~
_ACK_POLICY_MASK
)

406 @
¥›îty


407 
def
 
	$mu…i_tid
(
£lf
):

408  (
£lf
.
˘l
 & 
_MULTI_TID_MASK
Ë>> 
_MULTI_TID_SHIFT


410 @
mu…i_tid
.
£âî


411 
def
 
	$mu…i_tid
(
£lf
, 
vÆ
):

412 
£lf
.
˘l
 = (
vÆ
 << 
_MULTI_TID_SHIFT
Ë| (£lf.˘»& ~
_MULTI_TID_MASK
)

414 @
¥›îty


415 
def
 
	$tid
(
£lf
):

416  (
£lf
.
˘l
 & 
_TID_MASK
Ë>> 
_TID_SHIFT


418 @
tid
.
£âî


419 
def
 
	$tid
(
£lf
, 
vÆ
):

420 
£lf
.
˘l
 = (
vÆ
 << 
_TID_SHIFT
Ë| (£lf.˘»& ~
_TID_MASK
)

422 
def
 
	$u≈ack
(
£lf
, 
buf
):

423 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

424 
£lf
.
d©a
 = 
buf
[£lf.
__hdr_Àn__
:]

425 
£lf
.
˘l
 = 
sockë
.
	$¡ohs
(
£lf
.
˘l
)

427 
£lf
.
com¥es£d
:

428 
£lf
.
bmp
 = .
	`u≈ack
('8s', sñf.
d©a
[0:
_COMPRESSED_BMP_LENGTH
])[0]

430 
£lf
.
bmp
 = .
	`u≈ack
('128s', sñf.
d©a
[0:
_BMP_LENGTH
])[0]

431 
£lf
.
d©a
 = sñf.d©a[
	`Àn
(£lf.
__hdr__
Ë+ 
	$Àn
(
£lf
.
bmp
):]

433 
˛ass
 
	$RTS
(
dpkt
.
Packë
):

434 
__hdr__
 = (

439 
˛ass
 
	$CTS
(
dpkt
.
Packë
):

440 
__hdr__
 = (

444 
˛ass
 
	$ACK
(
dpkt
.
Packë
):

445 
__hdr__
 = (

449 
˛ass
 
	$CFEnd
(
dpkt
.
Packë
):

450 
__hdr__
 = (

455 
˛ass
 
	$MGMT_Føme
(
dpkt
.
Packë
):

456 
__hdr__
 = (

463 
˛ass
 
	$Bóc⁄
(
dpkt
.
Packë
):

464 
__hdr__
 = (

470 
˛ass
 
	$Dißssoc
(
dpkt
.
Packë
):

471 
__hdr__
 = (

475 
˛ass
 
	$Assoc_Req
(
dpkt
.
Packë
):

476 
__hdr__
 = (

481 
˛ass
 
	$Assoc_Re•
(
dpkt
.
Packë
):

482 
__hdr__
 = (

488 
˛ass
 
	$Róssoc_Req
(
dpkt
.
Packë
):

489 
__hdr__
 = (

495 #Thi†
obviou¶y
 
d€¢
't supportány of AUTH framesÅhat useÉncryption

496 
˛ass
 
	$Auth
(
dpkt
.
Packë
):

497 
__hdr__
 = (

502 
˛ass
 
	$Dóuth
(
dpkt
.
Packë
):

503 
__hdr__
 = (

507 
˛ass
 
	$A˘i⁄
(
dpkt
.
Packë
):

508 
__hdr__
 = (

513 
def
 
	$u≈ack
(
£lf
, 
buf
):

514 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

516 
a˘i⁄_∑r£r
 = {

517 
BLOCK_ACK
: {

518 
BLOCK_ACK_CODE_REQUEST
: ('block_ack_ªque°', 
IEEE80211
.
BlockAckA˘i⁄Reque°
),

519 
BLOCK_ACK_CODE_RESPONSE
: ('block_ack_ª•⁄£', 
IEEE80211
.
BlockAckA˘i⁄Re•⁄£
),

521 
	}
}

523 
åy
:

524 
decodî
 = 
a˘i⁄_∑r£r
[
£lf
.
ˇãg‹y
][£lf.
code
][1]

525 
fõld_«me
 = 
a˘i⁄_∑r£r
[
£lf
.
ˇãg‹y
][£lf.
code
][0]

526 
ex˚±
 
KeyEº‹
:

527 
øi£
 
dpkt
.
U≈ackEº‹
("KeyEº‹: c©eg‹y=%†code=%s" % (
£lf
.
ˇãg‹y
, sñf.
code
))

529 
	gfõld
 = 
	$decodî
(
£lf
.
d©a
)

530 
	$£èâr
(
£lf
, 
fõld_«me
, 
fõld
)

531 
£lf
.
d©a
 = 
fõld
.data

533 
˛ass
 
	$BlockAckA˘i⁄Reque°
(
dpkt
.
Packë
):

534 
__hdr__
 = (

541 
˛ass
 
	$BlockAckA˘i⁄Re•⁄£
(
dpkt
.
Packë
):

542 
__hdr__
 = (

549 
˛ass
 
	$D©a
(
dpkt
.
Packë
):

550 
__hdr__
 = (

557 
˛ass
 
	$D©aFromDS
(
dpkt
.
Packë
):

558 
__hdr__
 = (

565 
˛ass
 
	$D©aToDS
(
dpkt
.
Packë
):

566 
__hdr__
 = (

573 
˛ass
 
	$D©aI¡îDS
(
dpkt
.
Packë
):

574 
__hdr__
 = (

582 
˛ass
 
	$QoS_D©a
(
dpkt
.
Packë
):

583 
__hdr__
 = (

587 
˛ass
 
	$IE
(
dpkt
.
Packë
):

588 
__hdr__
 = (

593 
def
 
	$u≈ack
(
£lf
, 
buf
):

594 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

595 
£lf
.
öfo
 = 
buf
[2:£lf.
Àn
 + 2]

597 
˛ass
 
	$FH
(
dpkt
.
Packë
):

598 
__hdr__
 = (

607 
˛ass
 
	$DS
(
dpkt
.
Packë
):

608 
__hdr__
 = (

614 
˛ass
 
	$CF
(
dpkt
.
Packë
):

615 
__hdr__
 = (

624 
˛ass
 
	$TIM
(
dpkt
.
Packë
):

625 
__hdr__
 = (

633 
def
 
	$u≈ack
(
£lf
, 
buf
):

634 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

635 
£lf
.
bôm≠
 = 
buf
[5:£lf.
Àn
 + 2]

637 
˛ass
 
	$IBSS
(
dpkt
.
Packë
):

638 
__hdr__
 = (

645 
def
 
	$ã°_802211_ack
():

646 
s
 = 
b
'\xd4\x00\x00\x00\x00\x12\xf0\xb6\x1c\xa4\xff\xff\xff\xff'

647 
õì
 = 
	$IEEE80211
(
s
, 
fcs
=
True
)

648 
as£π
 
õì
.
vîsi⁄
 == 0

649 
as£π
 
õì
.
ty≥
 =
CTL_TYPE


650 
as£π
 
õì
.
subty≥
 =
C_ACK


651 
as£π
 
õì
.
to_ds
 == 0

652 
as£π
 
õì
.
‰om_ds
 == 0

653 
as£π
 
õì
.
pwr_mgt
 == 0

654 
as£π
 
õì
.
m‹e_d©a
 == 0

655 
as£π
 
õì
.
wï
 == 0

656 
as£π
 
õì
.
‹dî
 == 0

657 
as£π
 
õì
.
ack
.
d°
 =
b
'\x00\x12\xf0\xb6\x1c\xa4'

658 
fcs
 = .
	`u≈ack
('I', 
s
[-4:])[0]

659 
as£π
 
õì
.
fcs
 == fcs

661 
def
 
	$ã°_80211_bóc⁄
():

662 
s
 = 
b
'\x80\x00\x00\x00\xff\xff\xff\xff\xff\xff\x00\x26\xcb\x18\x6a\x30\x00\x26\xcb\x18\x6a\x30\xa0\xd0\x77\x09\x32\x03\x8f\x00\x00\x00\x66\x00\x31\x04\x00\x04\x43\x41\x45\x4e\x01\x08\x82\x84\x8b\x0c\x12\x96\x18\x24\x03\x01\x01\x05\x04\x00\x01\x00\x00\x07\x06\x55\x53\x20\x01\x0b\x1a\x0b\x05\x00\x00\x6e\x00\x00\x2a\x01\x02\x2d\x1a\x6e\x18\x1b\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x30\x14\x01\x00\x00\x0f\xac\x04\x01\x00\x00\x0f\xac\x04\x01\x00\x00\x0f\xac\x01\x28\x00\x32\x04\x30\x48\x60\x6c\x36\x03\x51\x63\x03\x3d\x16\x01\x00\x05\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x85\x1e\x05\x00\x8f\x00\x0f\x00\xff\x03\x59\x00\x63\x73\x65\x2d\x33\x39\x31\x32\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x36\x96\x06\x00\x40\x96\x00\x14\x00\xdd\x18\x00\x50\xf2\x02\x01\x01\x80\x00\x03\xa4\x00\x00\x27\xa4\x00\x00\x42\x43\x5e\x00\x62\x32\x2f\x00\xdd\x06\x00\x40\x96\x01\x01\x04\xdd\x05\x00\x40\x96\x03\x05\xdd\x05\x00\x40\x96\x0b\x09\xdd\x08\x00\x40\x96\x13\x01\x00\x34\x01\xdd\x05\x00\x40\x96\x14\x05'

663 
õì
 = 
	$IEEE80211
(
s
, 
fcs
=
True
)

664 
as£π
 
õì
.
vîsi⁄
 == 0

665 
as£π
 
õì
.
ty≥
 =
MGMT_TYPE


666 
as£π
 
õì
.
subty≥
 =
M_BEACON


667 
as£π
 
õì
.
to_ds
 == 0

668 
as£π
 
õì
.
‰om_ds
 == 0

669 
as£π
 
õì
.
pwr_mgt
 == 0

670 
as£π
 
õì
.
m‹e_d©a
 == 0

671 
as£π
 
õì
.
wï
 == 0

672 
as£π
 
õì
.
‹dî
 == 0

673 
as£π
 
õì
.
mgmt
.
d°
 =
b
'\xff\xff\xff\xff\xff\xff'

674 
as£π
 
õì
.
mgmt
.
§c
 =
b
'\x00\x26\xcb\x18\x6a\x30'

675 
as£π
 
õì
.
bóc⁄
.
ˇ∑bûôy
 == 0x3104

676 
as£π
 
õì
.
ˇ∑bûôy
.
¥ivacy
 == 1

677 
as£π
 
õì
.
ssid
.
d©a
 =
b
'CAEN'

678 
as£π
 
õì
.
øã
.
d©a
 =
b
'\x82\x84\x8b\x0c\x12\x96\x18\x24'

679 
as£π
 
õì
.
ds
.
d©a
 =
b
'\x01'

680 
as£π
 
õì
.
tim
.
d©a
 =
b
'\x00\x01\x00\x00'

681 
fcs
 = .
	`u≈ack
('I', 
s
[-4:])[0]

682 
as£π
 
õì
.
fcs
 == fcs

684 
def
 
	$ã°_80211_d©a
():

685 
s
 = 
b
'\x08\x09\x20\x00\x00\x26\xcb\x17\x3d\x91\x00\x16\x44\xb0\xae\xc6\x00\x02\xb3\xd6\x26\x3c\x80\x7e\xaa\xaa\x03\x00\x00\x00\x08\x00\x45\x00\x00\x28\x07\x27\x40\x00\x80\x06\x1d\x39\x8d\xd4\x37\x3d\x3f\xf5\xd1\x69\xc0\x5f\x01\xbb\xb2\xd6\xef\x23\x38\x2b\x4f\x08\x50\x10\x42\x04\xac\x17\x00\x00'

686 
õì
 = 
	$IEEE80211
(
s
, 
fcs
=
True
)

687 
as£π
 
õì
.
ty≥
 =
DATA_TYPE


688 
as£π
 
õì
.
subty≥
 =
D_DATA


689 
as£π
 
õì
.
d©a_‰ame
.
d°
 =
b
'\x00\x02\xb3\xd6\x26\x3c'

690 
as£π
 
õì
.
d©a_‰ame
.
§c
 =
b
'\x00\x16\x44\xb0\xae\xc6'

691 
as£π
 
õì
.
d©a_‰ame
.
‰ag_£q
 == 0x807e

692 
as£π
 
õì
.
d©a
 =
b
'\xaa\xaa\x03\x00\x00\x00\x08\x00\x45\x00\x00\x28\x07\x27\x40\x00\x80\x06\x1d\x39\x8d\xd4\x37\x3d\x3f\xf5\xd1\x69\xc0\x5f\x01\xbb\xb2\xd6\xef\x23\x38\x2b\x4f\x08\x50\x10\x42\x04'

693 
as£π
 
õì
.
fcs
 =.
	`u≈ack
('I', 
b
'\xac\x17\x00\x00')[0]

695 
‰om
 . 
imp‹t
 
Œc


696 
Œc_pkt
 = 
Œc
.
	$LLC
(
õì
.
d©a_‰ame
.
d©a
)

697 
ù_pkt
 = 
Œc_pkt
.
d©a


698 
as£π
 
ù_pkt
.
d°
 =
b
'\x3f\xf5\xd1\x69'

700 
def
 
	$ã°_80211_d©a_qos
():

701 
s
 = 
b
'\x88\x01\x3a\x01\x00\x26\xcb\x17\x44\xf0\x00\x23\xdf\xc9\xc0\x93\x00\x26\xcb\x17\x44\xf0\x20\x7b\x00\x00\xaa\xaa\x03\x00\x00\x00\x88\x8e\x01\x00\x00\x74\x02\x02\x00\x74\x19\x80\x00\x00\x00\x6a\x16\x03\x01\x00\x65\x01\x00\x00\x61\x03\x01\x4b\x4c\xa7\x7e\x27\x61\x6f\x02\x7b\x3c\x72\x39\xe3\x7b\xd7\x43\x59\x91\x7f\xaa\x22\x47\x51\xb6\x88\x9f\x85\x90\x87\x5a\xd1\x13\x20\xe0\x07\x00\x00\x68\xbd\xa4\x13\xb0\xd5\x82\x7e\xc7\xfb\xe7\xcc\xab\x6e\x5d\x5a\x51\x50\xd4\x45\xc5\xa1\x65\x53\xad\xb5\x88\x5b\x00\x1a\x00\x2f\x00\x05\x00\x04\x00\x35\x00\x0a\x00\x09\x00\x03\x00\x08\x00\x33\x00\x39\x00\x16\x00\x15\x00\x14\x01\x00\xff\xff\xff\xff'

702 
õì
 = 
	$IEEE80211
(
s
, 
fcs
=
True
)

703 
as£π
 
õì
.
ty≥
 =
DATA_TYPE


704 
as£π
 
õì
.
subty≥
 =
D_QOS_DATA


705 
as£π
 
õì
.
d©a_‰ame
.
d°
 =
b
'\x00\x26\xcb\x17\x44\xf0'

706 
as£π
 
õì
.
d©a_‰ame
.
§c
 =
b
'\x00\x23\xdf\xc9\xc0\x93'

707 
as£π
 
õì
.
d©a_‰ame
.
‰ag_£q
 == 0x207b

708 
as£π
 
õì
.
d©a
 =
b
'\xaa\xaa\x03\x00\x00\x00\x88\x8e\x01\x00\x00\x74\x02\x02\x00\x74\x19\x80\x00\x00\x00\x6a\x16\x03\x01\x00\x65\x01\x00\x00\x61\x03\x01\x4b\x4c\xa7\x7e\x27\x61\x6f\x02\x7b\x3c\x72\x39\xe3\x7b\xd7\x43\x59\x91\x7f\xaa\x22\x47\x51\xb6\x88\x9f\x85\x90\x87\x5a\xd1\x13\x20\xe0\x07\x00\x00\x68\xbd\xa4\x13\xb0\xd5\x82\x7e\xc7\xfb\xe7\xcc\xab\x6e\x5d\x5a\x51\x50\xd4\x45\xc5\xa1\x65\x53\xad\xb5\x88\x5b\x00\x1a\x00\x2f\x00\x05\x00\x04\x00\x35\x00\x0a\x00\x09\x00\x03\x00\x08\x00\x33\x00\x39\x00\x16\x00\x15\x00\x14\x01\x00'

709 
as£π
 
õì
.
qos_d©a
.
c⁄åﬁ
 == 0x0

710 
as£π
 
õì
.
fcs
 =.
	`u≈ack
('I', 
b
'\xff\xff\xff\xff')[0]

712 
def
 
	$ã°_bug
():

713 
s
 = 
b
'\x88\x41\x2c\x00\x00\x26\xcb\x17\x44\xf0\x00\x1e\x52\x97\x14\x11\x00\x1f\x6d\xe8\x18\x00\xd0\x07\x00\x00\x6f\x00\x00\x20\x00\x00\x00\x00'

714 
õì
 = 
	$IEEE80211
(
s
)

715 
as£π
 
õì
.
wï
 == 1

717 
def
 
	$ã°_d©a_ds
():

718 #vîifyög 
the
 
ToDS
 
™d
 
FromDS
 
fõlds
ánd 
th©
 
we
're gettingÅhe

719 #c‹ª˘ 
vÆues


721 
s
 = 
b
'\x08\x03\x00\x00\x01\x0b\x85\x00\x00\x00\x00\x26\xcb\x18\x73\x50\x01\x0b\x85\x00\x00\x00\x00\x89\x00\x26\xcb\x18\x73\x50'

722 
õì
 = 
	$IEEE80211
(
s
)

723 
as£π
 
õì
.
ty≥
 =
DATA_TYPE


724 
as£π
 
õì
.
to_ds
 == 1

725 
as£π
 
õì
.
‰om_ds
 == 1

726 
as£π
 
õì
.
d©a_‰ame
.
ß
 =
b
'\x00\x26\xcb\x18\x73\x50'

727 
as£π
 
õì
.
d©a_‰ame
.
§c
 =
b
'\x00\x26\xcb\x18\x73\x50'

728 
as£π
 
õì
.
d©a_‰ame
.
d°
 =
b
'\x01\x0b\x85\x00\x00\x00'

729 
as£π
 
õì
.
d©a_‰ame
.
da
 =
b
'\x01\x0b\x85\x00\x00\x00'

731 
s
 = 
b
'\x88\x41\x50\x01\x00\x26\xcb\x17\x48\xc1\x00\x24\x2c\xe7\xfe\x8a\xff\xff\xff\xff\xff\xff\x80\xa0\x00\x00\x09\x1a\x00\x20\x00\x00\x00\x00'

732 
õì
 = 
	$IEEE80211
(
s
)

733 
as£π
 
õì
.
ty≥
 =
DATA_TYPE


734 
as£π
 
õì
.
to_ds
 == 1

735 
as£π
 
õì
.
‰om_ds
 == 0

736 
as£π
 
õì
.
d©a_‰ame
.
bssid
 =
b
'\x00\x26\xcb\x17\x48\xc1'

737 
as£π
 
õì
.
d©a_‰ame
.
§c
 =
b
'\x00\x24\x2c\xe7\xfe\x8a'

738 
as£π
 
õì
.
d©a_‰ame
.
d°
 =
b
'\xff\xff\xff\xff\xff\xff'

740 
s
 = 
b
'\x08\x02\x02\x01\x00\x02\x44\xac\x27\x70\x00\x1f\x33\x39\x75\x44\x00\x1f\x33\x39\x75\x44\x90\xa4'

741 
õì
 = 
	$IEEE80211
(
s
)

742 
as£π
 
õì
.
ty≥
 =
DATA_TYPE


743 
as£π
 
õì
.
to_ds
 == 0

744 
as£π
 
õì
.
‰om_ds
 == 1

745 
as£π
 
õì
.
d©a_‰ame
.
bssid
 =
b
'\x00\x1f\x33\x39\x75\x44'

746 
as£π
 
õì
.
d©a_‰ame
.
§c
 =
b
'\x00\x1f\x33\x39\x75\x44'

747 
as£π
 
õì
.
d©a_‰ame
.
d°
 =
b
'\x00\x02\x44\xac\x27\x70'

749 
def
 
	$ã°_com¥es£d_block_ack
():

750 
s
 = 
b
'\x94\x00\x00\x00\x34\xc0\x59\xd6\x3f\x62\xb4\x75\x0e\x46\x83\xc1\x05\x50\x80\xee\x03\x00\x00\x00\x00\x00\x00\x00\xa2\xe4\x98\x45'

751 
õì
 = 
	$IEEE80211
(
s
, 
fcs
=
True
)

752 
as£π
 
õì
.
ty≥
 =
CTL_TYPE


753 
as£π
 
õì
.
subty≥
 =
C_BLOCK_ACK


754 
as£π
 
õì
.
back
.
d°
 =
b
'\x34\xc0\x59\xd6\x3f\x62'

755 
as£π
 
õì
.
back
.
§c
 =
b
'\xb4\x75\x0e\x46\x83\xc1'

756 
as£π
 
õì
.
back
.
com¥es£d
 == 1

757 
as£π
 
	`Àn
(
õì
.
back
.
bmp
) == 8

758 
as£π
 
õì
.
back
.
ack_pﬁicy
 == 1

759 
as£π
 
õì
.
back
.
tid
 == 5

761 
def
 
	$ã°_a˘i⁄_block_ack_ªque°
():

762 
s
 = 
b
'\xd0\x00\x3a\x01\x00\x23\x14\x36\x52\x30\xb4\x75\x0e\x46\x83\xc1\xb4\x75\x0e\x46\x83\xc1\x70\x14\x03\x00\x0d\x02\x10\x00\x00\x40\x29\x06\x50\x33\x9e'

763 
õì
 = 
	$IEEE80211
(
s
, 
fcs
=
True
)

764 
as£π
 
õì
.
ty≥
 =
MGMT_TYPE


765 
as£π
 
õì
.
subty≥
 =
M_ACTION


766 
as£π
 
õì
.
a˘i⁄
.
ˇãg‹y
 =
BLOCK_ACK


767 
as£π
 
õì
.
a˘i⁄
.
code
 =
BLOCK_ACK_CODE_REQUEST


768 
as£π
 
õì
.
a˘i⁄
.
block_ack_ªque°
.
timeout
 == 0

769 
∑ømëîs
 = .
	`u≈ack
('H', 
b
'\x10\x02')[0]

770 
as£π
 
õì
.
a˘i⁄
.
block_ack_ªque°
.
∑ømëîs
 ==Öarameters

772 
def
 
	$ã°_a˘i⁄_block_ack_ª•⁄£
():

773 
s
 = 
b
'\xd0\x00\x3c\x00\xb4\x75\x0e\x46\x83\xc1\x00\x23\x14\x36\x52\x30\xb4\x75\x0e\x46\x83\xc1\xd0\x68\x03\x01\x0d\x00\x00\x02\x10\x88\x13\x9f\xc0\x0b\x75'

774 
õì
 = 
	$IEEE80211
(
s
, 
fcs
=
True
)

775 
as£π
 
õì
.
ty≥
 =
MGMT_TYPE


776 
as£π
 
õì
.
subty≥
 =
M_ACTION


777 
as£π
 
õì
.
a˘i⁄
.
ˇãg‹y
 =
BLOCK_ACK


778 
as£π
 
õì
.
a˘i⁄
.
code
 =
BLOCK_ACK_CODE_RESPONSE


779 
timeout
 = .
	`u≈ack
('H', 
b
'\x13\x88')[0]

780 
as£π
 
õì
.
a˘i⁄
.
block_ack_ª•⁄£
.
timeout
 ==Åimeout

781 
∑ømëîs
 = .
	`u≈ack
('H', 
b
'\x10\x02')[0]

782 
as£π
 
õì
.
a˘i⁄
.
block_ack_ª•⁄£
.
∑ømëîs
 ==Öarameters

784 
__«me__
 == '__main__':

785 #Run†
Æl
 
the
 
ã°
 
assocüãd
 
wôh
 
this
 
˛ass
/
fûe


786 
	$ã°_802211_ack
()

787 
	$ã°_80211_bóc⁄
()

788 
	$ã°_80211_d©a
()

789 
	$ã°_80211_d©a_qos
()

790 
	$ã°_bug
()

791 
	$ã°_d©a_ds
()

792 
	$ã°_com¥es£d_block_ack
()

793 
	$ã°_a˘i⁄_block_ack_ªque°
()

794 
	$ã°_a˘i⁄_block_ack_ª•⁄£
()

795 
	`¥öt
('Tests Successful...')

	@igmp.py

1 #$Id: 
igmp
.
py
 23 2006-11-08 15:45:33
Z
 
dugs⁄g
 
$


2 #-*- 
codög
: 
utf
-8 -*-

4 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


6 
	g‰om
 . 
imp‹t
 
dpkt


9 
˛ass
 
	$IGMP
(
dpkt
.
Packë
):

12 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

14 
Aâribuãs
:

15 
__hdr__
: 
Hódî
 
fõlds
 
of
 
IGMP
.

16 
TODO
.

19 
__hdr__
 = (

26 
def
 
	$__byãs__
(
£lf
):

27 
nŸ
 
£lf
.
sum
:

28 
£lf
.
sum
 = 
dpkt
.
	`ö_cksum
(dpkt.
Packë
.
	$__byãs__
(
£lf
))

29  
dpkt
.
Packë
.
	`__byãs__
(
£lf
)

	@ip.py

1 #$Id: 
ù
.
py
 87 2013-03-05 19:41:04
Z
 
™dªwÊƒ
@
gmaû
.
com
 
$


2 #-*- 
codög
: 
utf
-8 -*-

4 
‰om
 
__futuª__
 
imp‹t
 
¥öt_fun˘i⁄


5 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


7 
	g‰om
 . 
imp‹t
 
dpkt


8 
	g‰om
 .
dec‹©‹s
 
imp‹t
 
dïªˇãd


9 
	g‰om
 .
com∑t
 
imp‹t
 
ôîôems


11 
˛ass
 
	$IP
(
dpkt
.
Packë
):

14 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

16 
Aâribuãs
:

17 
__hdr__
: 
Hódî
 
fõlds
 
of
 
IP
.

18 
TODO
.

21 
__hdr__
 = (

30 ('§c', '4s', 
b
'\x00' * 4),

31 ('d°', '4s', 
b
'\x00' * 4)

33 
_¥Ÿosw
 = {
	}
}

34 
›ts
 = 
b
''

36 
def
 
	$__öô__
(
£lf
, *
¨gs
, **
kw¨gs
):

37 
	`su≥r
(
IP
, 
£lf
).
	$__öô__
(*
¨gs
, **
kw¨gs
)

39 #I‡
IP
 
∑ckë
 
is
 
nŸ
 
öôülized
 
by
 
°rög
 
™d
 
the
 
Àn
 
fõld
 
has


40 #bì¿
ªwrôãn
.

41 
nŸ
 
¨gs
 
™d
 'Àn'ÇŸ 
ö
 
kw¨gs
:

42 
£lf
.
Àn
 = sñf.
	`__Àn__
()

44 @
¥›îty


45 
def
 
	$v
(
£lf
):

46  
£lf
.
_v_hl
 >> 4

48 @
v
.
£âî


49 
def
 
	$v
(
£lf
, 
v
):

50 
£lf
.
_v_hl
 = (
v
 << 4) | (self._v_hl & 0xf)

52 @
¥›îty


53 
def
 
	$hl
(
£lf
):

54  
£lf
.
_v_hl
 & 0xf

56 @
hl
.
£âî


57 
def
 
	$hl
(
£lf
, 
hl
):

58 
£lf
.
_v_hl
 = (£lf._v_h»& 0xf0Ë| 
hl


60 @
¥›îty


61 
def
 
	$rf
(
£lf
):

62  (
£lf
.
off
 >> 15) & 0x1

64 @
rf
.
£âî


65 
def
 
	$rf
(
£lf
, 
rf
):

66 
£lf
.
off
 = (£lf.of‡& ~
IP_RF
Ë| (
rf
 << 15)

68 @
¥›îty


69 
def
 
	$df
(
£lf
):

70  (
£lf
.
off
 >> 14) & 0x1

72 @
df
.
£âî


73 
def
 
	$df
(
£lf
, 
df
):

74 
£lf
.
off
 = (£lf.of‡& ~
IP_DF
Ë| (
df
 << 14)

76 @
¥›îty


77 
def
 
	$mf
(
£lf
):

78  (
£lf
.
off
 >> 13) & 0x1

80 @
mf
.
£âî


81 
def
 
	$mf
(
£lf
, 
mf
):

82 
£lf
.
off
 = (£lf.of‡& ~
IP_MF
Ë| (
mf
 << 13)

84 @
¥›îty


85 
def
 
	$off£t
(
£lf
):

86  (
£lf
.
off
 & 
IP_OFFMASK
) << 3

88 @
off£t
.
£âî


89 
def
 
	$off£t
(
£lf
, 
off£t
):

90 
£lf
.
off
 = (£lf.of‡& ~
IP_OFFMASK
Ë| (
off£t
 >> 3)

92 
def
 
	$__Àn__
(
£lf
):

93  
£lf
.
__hdr_Àn__
 + 
	`Àn
(£lf.
›ts
Ë+ 
	$Àn
(
£lf
.
d©a
)

95 
def
 
	$__byãs__
(
£lf
):

96 
£lf
.
Àn
 = sñf.
	$__Àn__
()

97 
£lf
.
sum
 == 0:

98 
£lf
.
sum
 = 
dpkt
.
	`ö_cksum
(£lf.
	`∑ck_hdr
(Ë+ 
	$byãs
(
£lf
.
›ts
))

99 i‡(
£lf
.
p
 =6 
‹
 sñf.∞=17Ë
	`™d
 (£lf.
off
 & (
IP_MF
 | 
IP_OFFMASK
)Ë=0 
™d
 \

100 
	$isö°™˚
(
£lf
.
d©a
, 
dpkt
.
Packë
Ë
™d
 sñf.d©a.
sum
 == 0:

101 #Së 
zî€d
 
TCP
 
™d
 
UDP
 
checksums
 
n⁄
-
‰agmíts
.

102 
p
 = 
	$byãs
(
£lf
.
d©a
)

103 
s
 = 
dpkt
..
	`∑ck
('>4s4sxBH', 
£lf
.
§c
, sñf.
d°
,

104 
£lf
.
p
, 
	$Àn
(
p
))

105 
s
 = 
dpkt
.
	$ö_cksum_add
(0, 
s
)

106 
s
 = 
dpkt
.
	$ö_cksum_add
(
s
, 
p
)

107 
£lf
.
d©a
.
sum
 = 
dpkt
.
	$ö_cksum_d⁄e
(
s
)

108 
£lf
.
p
 =17 
™d
 sñf.
d©a
.
sum
 == 0:

109 
£lf
.
d©a
.
sum
 = 0xffff #RFC 768

110 #XXX - 
skù
 
å™•‹ts
 
which
 
d⁄
'tÇeedÅheÖseudoheader

111  
£lf
.
	`∑ck_hdr
(Ë+ 
	`byãs
(£lf.
›ts
Ë+ 
	$byãs
(
£lf
.
d©a
)

113 
def
 
	$u≈ack
(
£lf
, 
buf
):

114 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

115 
ﬁ
 = ((
£lf
.
_v_hl
 & 0xfË<< 2Ë- sñf.
__hdr_Àn__


116 
ﬁ
 < 0:

117 
øi£
 
dpkt
.
	`U≈ackEº‹
('invalid headerÜength')

118 
£lf
.
›ts
 = 
buf
[£lf.
__hdr_Àn__
:£lf.__hdr_Àn__ + 
ﬁ
]

119 
£lf
.
Àn
:

120 
buf
 = buf[
£lf
.
__hdr_Àn__
 + 
ﬁ
:£lf.
Àn
]

121 : #vîy 
likñy
 
due
 
to
 
TCP
 
£gmíèti⁄
 
ofÊﬂd


122 
buf
 = buf[
£lf
.
__hdr_Àn__
 + 
ﬁ
:]

123 
åy
:

124 
£lf
.
d©a
 = sñf.
_¥Ÿosw
[£lf.
p
](
buf
Ë£lf.
off£t
 == 0 buf

125 
	`£èâr
(
£lf
, sñf.
d©a
.
__˛ass__
.
__«me__
.
	`lowî
(), self.data)

126 
	$ex˚±
 (
KeyEº‹
, 
dpkt
.
U≈ackEº‹
):

127 
£lf
.
d©a
 = 
buf


129 @
˛assmëhod


130 
def
 
	$£t_¥Ÿo
(
˛s
, 
p
, 
pkt˛ass
):

131 
˛s
.
_¥Ÿosw
[
p
] = 
pkt˛ass


133 @
˛assmëhod


134 
def
 
	$gë_¥Ÿo
(
˛s
, 
p
):

135  
˛s
.
_¥Ÿosw
[
p
]

137 #IP 
Hódîs


138 
IP_ADDR_LEN
 = 0x04

139 
IP_ADDR_BITS
 = 0x20

141 
IP_HDR_LEN
 = 0x14

142 
IP_OPT_LEN
 = 0x02

143 
IP_OPT_LEN_MAX
 = 0x28

144 
IP_HDR_LEN_MAX
 = 
IP_HDR_LEN
 + 
IP_OPT_LEN_MAX


146 
IP_LEN_MAX
 = 0xffff

147 
IP_LEN_MIN
 = 
IP_HDR_LEN


149 #Re£rved 
Addªs£s


150 
IP_ADDR_ANY
 = "\x00\x00\x00\x00" #0.0.0.0

151 
IP_ADDR_BROADCAST
 = "\xff\xff\xff\xff" #255.255.255.255

152 
IP_ADDR_LOOPBACK
 = "\x7f\x00\x00\x01" #127.0.0.1

153 
IP_ADDR_MCAST_ALL
 = "\xe0\x00\x00\x01" #224.0.0.1

154 
IP_ADDR_MCAST_LOCAL
 = "\xe0\x00\x00\xff" #224.0.0.255

156 #Ty≥ 
of
 
	`£rvi˚
 (
ù_tos
), 
RFC
 1349 ("obsoleted by RFC 2474")

157 
IP_TOS_DEFAULT
 = 0x00 #default

158 
IP_TOS_LOWDELAY
 = 0x10 #low 
dñay


159 
IP_TOS_THROUGHPUT
 = 0x08 #high 
throughput


160 
IP_TOS_RELIABILITY
 = 0x04 #high 
ªlübûôy


161 
IP_TOS_LOWCOST
 = 0x02 #low 
m⁄ë¨y
 
co°
 - 
XXX


162 
IP_TOS_ECT
 = 0x02 #ECN-
ˇ∑bÀ
 
å™•‹t


163 
IP_TOS_CE
 = 0x01 #c⁄ge°i⁄ 
ex≥rõn˚d


165 #IP 
	`¥e˚dí˚
 (
high
 3 
bôs
 
of
 
ù_tos
), 
h›efuŒy
 
unu£d


166 
IP_TOS_PREC_ROUTINE
 = 0x00

167 
IP_TOS_PREC_PRIORITY
 = 0x20

168 
IP_TOS_PREC_IMMEDIATE
 = 0x40

169 
IP_TOS_PREC_FLASH
 = 0x60

170 
IP_TOS_PREC_FLASHOVERRIDE
 = 0x80

171 
IP_TOS_PREC_CRITIC_ECP
 = 0xa0

172 
IP_TOS_PREC_INTERNETCONTROL
 = 0xc0

173 
IP_TOS_PREC_NETCONTROL
 = 0xe0

175 #Føgmíèti⁄ 
	`Êags
 (
ù_off
)

176 
IP_RF
 = 0x8000 #reserved

177 
IP_DF
 = 0x4000 #don't fragment

178 
IP_MF
 = 0x2000 #m‹ê
	$‰agmíts
 (
nŸ
 
œ°
 
‰ag
)

179 
IP_OFFMASK
 = 0x1ff‡#mask 
‰agmít
 
off£t


181 #Time-
to
-
	`live
 (
ù_âl
), 
£c⁄ds


182 
IP_TTL_DEFAULT
 = 64 #deÁu… 
âl
, 
RFC
 1122, RFC 1340

183 
IP_TTL_MAX
 = 255 #maximum 
âl


185 #PrŸocﬁ (
ù_p
Ë- 
hâp
:

186 
IP_PROTO_IP
 = 0 #dummy 
IP


187 
IP_PROTO_HOPOPTS
 = 
IP_PROTO_IP
 #IPv6 
h›
-
by
-h› 
›ti⁄s


188 
IP_PROTO_ICMP
 = 1 #ICMP

189 
IP_PROTO_IGMP
 = 2 #IGMP

190 
IP_PROTO_GGP
 = 3 #g©eway-
g©eway
 
¥Ÿocﬁ


191 
IP_PROTO_IPIP
 = 4 #IP 
ö
 
IP


192 
IP_PROTO_ST
 = 5 #ST 
d©agøm
 
mode


193 
IP_PROTO_TCP
 = 6 #TCP

194 
IP_PROTO_CBT
 = 7 #CBT

195 
IP_PROTO_EGP
 = 8 #exãri‹ 
g©eway
 
¥Ÿocﬁ


196 
IP_PROTO_IGP
 = 9 #öãri‹ 
g©eway
 
¥Ÿocﬁ


197 
IP_PROTO_BBNRCC
 = 10 #BBN 
RCC
 
m⁄ô‹ög


198 
IP_PROTO_NVP
 = 11 #Nëw‹k 
Voi˚
 
PrŸocﬁ


199 
IP_PROTO_PUP
 = 12 #PARC 
univîßl
 
∑ckë


200 
IP_PROTO_ARGUS
 = 13 #ARGUS

201 
IP_PROTO_EMCON
 = 14 #EMCON

202 
IP_PROTO_XNET
 = 15 #Cros†
Në
 
Debuggî


203 
IP_PROTO_CHAOS
 = 16 #Chaos

204 
IP_PROTO_UDP
 = 17 #UDP

205 
IP_PROTO_MUX
 = 18 #multiplexing

206 
IP_PROTO_DCNMEAS
 = 19 #DCN 
mósuªmít


207 
IP_PROTO_HMP
 = 20 #Ho° 
M⁄ô‹ög
 
PrŸocﬁ


208 
IP_PROTO_PRM
 = 21 #Packë 
Radio
 
Mósuªmít


209 
IP_PROTO_IDP
 = 22 #Xîox 
NS
 
IDP


210 
IP_PROTO_TRUNK1
 = 23 #Trunk-1

211 
IP_PROTO_TRUNK2
 = 24 #Trunk-2

212 
IP_PROTO_LEAF1
 = 25 #Leaf-1

213 
IP_PROTO_LEAF2
 = 26 #Leaf-2

214 
IP_PROTO_RDP
 = 27 #"
RñübÀ
 
D©agøm
"Öroto

215 
IP_PROTO_IRTP
 = 28 #I√à
RñübÀ
 
Tønß˘i⁄


216 
IP_PROTO_TP
 = 29 #ISO 
TP
 
˛ass
 4

217 
IP_PROTO_NETBLT
 = 30 #Bulk 
D©a
 
Tøns„r


218 
IP_PROTO_MFPNSP
 = 31 #MFE 
Nëw‹k
 
Sîvi˚s


219 
IP_PROTO_MERITINP
 = 32 #Mîô 
I¡înodÆ
 
PrŸocﬁ


220 
IP_PROTO_SEP
 = 33 #Sequítü»
Exch™ge
 
¥Ÿo


221 
IP_PROTO_3PC
 = 34 #Thúd 
P¨ty
 
C⁄√˘
 
¥Ÿo


222 
IP_PROTO_IDPR
 = 35 #I¡îdomaö 
Pﬁicy
 
Rouã


223 
IP_PROTO_XTP
 = 36 #X¥es†
Tøns„r
 
PrŸocﬁ


224 
IP_PROTO_DDP
 = 37 #D©agøm 
Dñivîy
 
PrŸo


225 
IP_PROTO_CMTP
 = 38 #IDPR 
Cål
 
Mesßge
 
Tøns


226 
IP_PROTO_TPPP
 = 39 #TP++ 
Tøn•‹t
 
PrŸocﬁ


227 
IP_PROTO_IL
 = 40 #IL 
Tøn•‹t
 
PrŸocﬁ


228 
IP_PROTO_IP6
 = 41 #IPv6

229 
IP_PROTO_SDRP
 = 42 #Sour˚ 
Dem™d
 
Routög


230 
IP_PROTO_ROUTING
 = 43 #IPv6 
routög
 
hódî


231 
IP_PROTO_FRAGMENT
 = 44 #IPv6 
‰agmíèti⁄
 
hódî


232 
IP_PROTO_RSVP
 = 46 #Re£rv©i⁄ 
¥Ÿocﬁ


233 
IP_PROTO_GRE
 = 47 #GíîÆ 
Routög
 
Enˇp


234 
IP_PROTO_MHRP
 = 48 #Mobûê
Ho°
 
Routög


235 
IP_PROTO_ENA
 = 49 #ENA

236 
IP_PROTO_ESP
 = 50 #Enˇ∞
Securôy
 
Paylﬂd


237 
IP_PROTO_AH
 = 51 #Authítiˇti⁄ 
Hódî


238 
IP_PROTO_INLSP
 = 52 #I¡eg©ed 
Në
 
Layî
 
Sec


239 
IP_PROTO_SWIPE
 = 53 #SWIPE

240 
IP_PROTO_NARP
 = 54 #NBMA 
Addªss
 
Resﬁuti⁄


241 
IP_PROTO_MOBILE
 = 55 #Mobûê
IP
, 
RFC
 2004

242 
IP_PROTO_TLSP
 = 56 #Tøn•‹à
Layî
 
Securôy


243 
IP_PROTO_SKIP
 = 57 #SKIP

244 
IP_PROTO_ICMP6
 = 58 #ICMP 
IPv6


245 
IP_PROTO_NONE
 = 59 #IPv6 
no
 
√xt
 
hódî


246 
IP_PROTO_DSTOPTS
 = 60 #IPv6 
de°ö©i⁄
 
›ti⁄s


247 
IP_PROTO_ANYHOST
 = 61 #™y 
ho°
 
öã∫Æ
 
¥Ÿo


248 
IP_PROTO_CFTP
 = 62 #CFTP

249 
IP_PROTO_ANYNET
 = 63 #™y 
loˇl
 
√tw‹k


250 
IP_PROTO_EXPAK
 = 64 #SATNET 
™d
 
Backroom
 
EXPAK


251 
IP_PROTO_KRYPTOLAN
 = 65 #Kryptolan

252 
IP_PROTO_RVD
 = 66 #MIT 
RemŸe
 
VútuÆ
 
Disk


253 
IP_PROTO_IPPC
 = 67 #I√à
Pluribus
 
Packë
 
C‹e


254 
IP_PROTO_DISTFS
 = 68 #™y 
di°ribuãd
 
fs


255 
IP_PROTO_SATMON
 = 69 #SATNET 
M⁄ô‹ög


256 
IP_PROTO_VISA
 = 70 #VISA 
PrŸocﬁ


257 
IP_PROTO_IPCV
 = 71 #I√à
Packë
 
C‹e
 
Utûôy


258 
IP_PROTO_CPNX
 = 72 #Com∞
PrŸo
 
Në
 
Executive


259 
IP_PROTO_CPHB
 = 73 #Com∞
PrŸocﬁ
 
Hóπ
 
Bót


260 
IP_PROTO_WSN
 = 74 #W™g 
S∑n
 
Nëw‹k


261 
IP_PROTO_PVP
 = 75 #Packë 
Video
 
PrŸocﬁ


262 
IP_PROTO_BRSATMON
 = 76 #Backroom 
SATNET
 
M⁄ô‹


263 
IP_PROTO_SUNND
 = 77 #SUN 
ND
 
PrŸocﬁ


264 
IP_PROTO_WBMON
 = 78 #WIDEBAND 
M⁄ô‹ög


265 
IP_PROTO_WBEXPAK
 = 79 #WIDEBAND 
EXPAK


266 
IP_PROTO_EON
 = 80 #ISO 
CNLP


267 
IP_PROTO_VMTP
 = 81 #Vîßtûê
Msg
 
Tøn•‹t


268 
IP_PROTO_SVMTP
 = 82 #Secuª 
VMTP


269 
IP_PROTO_VINES
 = 83 #VINES

270 
IP_PROTO_TTP
 = 84 #TTP

271 
IP_PROTO_NSFIGP
 = 85 #NSFNET-
IGP


272 
IP_PROTO_DGP
 = 86 #Dissimû¨ 
G©eway
 
PrŸo


273 
IP_PROTO_TCF
 = 87 #TCF

274 
IP_PROTO_EIGRP
 = 88 #EIGRP

275 
IP_PROTO_OSPF
 = 89 #O≥¿
Sh‹ã°
 
P©h
 
Fú°


276 
IP_PROTO_SPRITERPC
 = 90 #S¥ôê
RPC
 
PrŸocﬁ


277 
IP_PROTO_LARP
 = 91 #Locu†
Addªss
 
Resﬁuti⁄


278 
IP_PROTO_MTP
 = 92 #Mu…iˇ° 
Tøn•‹t
 
PrŸo


279 
IP_PROTO_AX25
 = 93 #AX.25 
Fømes


280 
IP_PROTO_IPIPENCAP
 = 94 #yë-
™Ÿhî
 
IP
 
íˇp


281 
IP_PROTO_MICP
 = 95 #Mobûê
I¡î√t
 
Cål


282 
IP_PROTO_SCCSP
 = 96 #Sem≠h‹ê
Comm
 
Sec
 
PrŸo


283 
IP_PROTO_ETHERIP
 = 97 #Ethî√à
ö
 
IPv4


284 
IP_PROTO_ENCAP
 = 98 #íˇpsuœti⁄ 
hódî


285 
IP_PROTO_ANYENC
 = 99 #¥iv©ê
í¸y±i⁄
 
scheme


286 
IP_PROTO_GMTP
 = 100 #GMTP

287 
IP_PROTO_IFMP
 = 101 #Ipsû⁄ 
Flow
 
Mgmt
 
PrŸo


288 
IP_PROTO_PNNI
 = 102 #PNNI 
ovî
 
IP


289 
IP_PROTO_PIM
 = 103 #PrŸocﬁ 
Indï
 
Mu…iˇ°


290 
IP_PROTO_ARIS
 = 104 #ARIS

291 
IP_PROTO_SCPS
 = 105 #SCPS

292 
IP_PROTO_QNX
 = 106 #QNX

293 
IP_PROTO_AN
 = 107 #A˘ivê
Nëw‹ks


294 
IP_PROTO_IPCOMP
 = 108 #IP 
Paylﬂd
 
Com¥essi⁄


295 
IP_PROTO_SNP
 = 109 #Sô¨®
Nëw‹ks
 
PrŸocﬁ


296 
IP_PROTO_COMPAQPEER
 = 110 #Com∑q 
Pìr
 
PrŸocﬁ


297 
IP_PROTO_IPXIP
 = 111 #IPX 
ö
 
IP


298 
IP_PROTO_VRRP
 = 112 #VútuÆ 
Rouãr
 
Redund™cy


299 
IP_PROTO_PGM
 = 113 #PGM 
RñübÀ
 
Tøn•‹t


300 
IP_PROTO_ANY0HOP
 = 114 #0-
h›
 
¥Ÿocﬁ


301 
IP_PROTO_L2TP
 = 115 #Layî 2 
Tu¬ñög
 
PrŸo


302 
IP_PROTO_DDX
 = 116 #D-
II
 
D©a
 
	$Exch™ge
 (
DDX
)

303 
IP_PROTO_IATP
 = 117 #I¡îa˘ivê
Agít
 
X„r


304 
IP_PROTO_STP
 = 118 #ScheduÀ 
Tøns„r
 
PrŸo


305 
IP_PROTO_SRP
 = 119 #S≥˘øLök 
Radio
 
PrŸo


306 
IP_PROTO_UTI
 = 120 #UTI

307 
IP_PROTO_SMP
 = 121 #Sim∂ê
Mesßge
 
PrŸocﬁ


308 
IP_PROTO_SM
 = 122 #SM

309 
IP_PROTO_PTP
 = 123 #Pîf‹m™˚ 
Tøn•¨ícy


310 
IP_PROTO_ISIS
 = 124 #ISIS 
ovî
 
IPv4


311 
IP_PROTO_FIRE
 = 125 #FIRE

312 
IP_PROTO_CRTP
 = 126 #Comb© 
Radio
 
Tøn•‹t


313 
IP_PROTO_CRUDP
 = 127 #Comb© 
Radio
 
UDP


314 
IP_PROTO_SSCOPMCE
 = 128 #SSCOPMCE

315 
IP_PROTO_IPLT
 = 129 #IPLT

316 
IP_PROTO_SPS
 = 130 #Secuª 
Packë
 
Shõld


317 
IP_PROTO_PIPE
 = 131 #Priv©ê
IP
 
Enˇp
 
ö
 IP

318 
IP_PROTO_SCTP
 = 132 #Såóm 
Cål
 
Tønsmissi⁄


319 
IP_PROTO_FC
 = 133 #Fibª 
Ch™√l


320 
IP_PROTO_RSVPIGN
 = 134 #RSVP-
E2E
-
IGNORE


321 
IP_PROTO_RAW
 = 255 #Raw 
IP
 
∑ckës


322 
IP_PROTO_RESERVED
 = 
IP_PROTO_RAW
 #Reserved

323 
IP_PROTO_MAX
 = 255

325 #XXX -áuto-
lﬂd
 
IP
 
di•©ch
 
èbÀ
 
‰om
 
IP_PROTO_
* 
deföôi⁄s


328 
def
 
	$__lﬂd_¥Ÿos
():

329 
g
 = 
	$globÆs
()

330 
k
, 
v
 
ö
 
	$ôîôems
(
g
):

331 
k
.
	`°¨tswôh
('IP_PROTO_'):

332 
«me
 = 
k
[9:].
	$lowî
()

333 
åy
:

334 
mod
 = 
	$__imp‹t__
(
«me
, 
g
, 
Àvñ
=1)

335 
IP
.
	`£t_¥Ÿo
(
v
, 
	`gë©å
(
mod
, 
«me
.
	$uµî
()))

336 
	$ex˚±
 (
Imp‹tEº‹
, 
AâribuãEº‹
):

340 
def
 
	$_mod_öô
():

342 
nŸ
 
IP
.
_¥Ÿosw
:

343 
	$__lﬂd_¥Ÿos
()

346 
def
 
	$ã°_ù
():

347 
‰om
 . 
imp‹t
 
udp


349 
s
 = 
b
'E\x00\x00"\x00\x00\x00\x00@\x11r\xc0\x01\x02\x03\x04\x01\x02\x03\x04\x00o\x00\xde\x00\x0e\xbf5foobar'

350 
ù
 = 
	`IP
(
id
=0, 
§c
=
b
'\x01\x02\x03\x04', 
d°
=b'\x01\x02\x03\x04', 
p
=17)

351 
u
 = 
udp
.
	$UDP
(
•‹t
=111, 
dp‹t
=222)

352 
u
.
d©a
 = 
b
'foobar'

353 
u
.
uÀn
 +
	$Àn
(
u
.
d©a
)

354 
ù
.
d©a
 = 
u


355 
ù
.
Àn
 +
	$Àn
(
u
)

356 
	`as£π
 (
	`byãs
(
ù
Ë=
s
)

357 
	$as£π
 (
ù
.
v
 == 4)

358 
	$as£π
 (
ù
.
hl
 == 5)

360 
ù
 = 
	$IP
(
s
)

361 
	`as£π
 (
	`byãs
(
ù
Ë=
s
)

362 
	$as£π
 (
ù
.
udp
.
•‹t
 == 111)

363 
	`as£π
 (
ù
.
udp
.
d©a
 =
b
'foobar')

366 
def
 
	$ã°_hl
(): #Todÿ
chack
 
this
 
ã°
 
mëhod


367 
s
 = 
b
'BB\x03\x00\x00\x00\x00\x00\x00\x00\xd0\x00\xec\xbc\xa5\x00\x00\x00\x03\x80\x00\x00\xd0\x01\xf2\xac\xa5"0\x01\x00\x14\x00\x02\x00\x0f\x00\x00\x00\x00\x00\x00\x00\x00\x00'

368 
åy
:

369 
	$IP
(
s
)

370 
ex˚±
 
dpkt
.
U≈ackEº‹
:

371 
∑ss


374 
def
 
	$ã°_›t
():

375 
s
 = 
b
'\x4f\x00\x00\x3c\xae\x08\x00\x00\x40\x06\x18\x10\xc0\xa8\x0a\x26\xc0\xa8\x0a\x01\x07\x27\x08\x01\x02\x03\x04\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'

376 
ù
 = 
	$IP
(
s
)

377 
ù
.
sum
 = 0

378 
	`as£π
 (
	`byãs
(
ù
Ë=
s
)

381 
def
 
	$ã°_zîﬁí
():

382 
‰om
 . 
imp‹t
 
t˝


383 
d
 = 
b
'X' * 2048

384 
s
 = 
b
'E\x00\x00\x004\x˚@\x00\x80\x06\x00\x00\x7f\x00\x00\x01\x7f\x00\x00\x01\xccN\x0c8`\xff\xc6N_\x8a\x12\x98P\x18@):\xa3\x00\x00' + 
d


385 
ù
 = 
	$IP
(
s
)

386 
	`as£π
 (
	$isö°™˚
(
ù
.
d©a
, 
t˝
.
TCP
))

387 
	$as£π
 (
ù
.
t˝
.
d©a
 =
d
)

390 
def
 
	$ã°_c⁄°u˘‹
():

391 
ù1
 = 
	`IP
(
d©a
 = 
b
"Hello world!")

392 
ù2
 = 
	`IP
(
d©a
 = 
b
"Hñlÿw‹ld!", 
Àn
 = 0)

393 
ù3
 = 
	`IP
(
	$byãs
(
ù1
))

394 
ù4
 = 
	`IP
(
	$byãs
(
ù2
))

395 
	`as£π
 (
	`byãs
(
ù1
Ë=
	$byãs
(
ù3
))

396 
	`as£π
 (
	`byãs
(
ù1
Ë=
b
'E\x00\x00 \x00\x00\x00\x00@\x00z\xdf\x00\x00\x00\x00\x00\x00\x00\x00Hello world!')

397 
	`as£π
 (
	`byãs
(
ù2
Ë=
	$byãs
(
ù4
))

398 
	`as£π
 (
	`byãs
(
ù2
Ë=
b
'E\x00\x00 \x00\x00\x00\x00@\x00z\xdf\x00\x00\x00\x00\x00\x00\x00\x00Hello world!')

400 
def
 
	$ã°_‰ag
():

401 
‰om
 . 
imp‹t
 
ëhî√t


402 
s
 = 
b
"\x00\x23\x20\xd4\x2a\x8c\x00\x23\x20\xd4\x2a\x8c\x08\x00\x45\x00\x00\x54\x00\x00\x40\x00\x40\x01\x25\x8d\x0a\x00\x00\x8f\x0a\x00\x00\x8e\x08\x00\x2e\xa0\x01\xff\x23\x73\x20\x48\x4a\x4d\x00\x00\x00\x00\x78\x85\x02\x00\x00\x00\x00\x00\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37"

403 
ù
 = 
ëhî√t
.
	`Ethî√t
(
s
).ip

404 
	$as£π
 (
ù
.
rf
 == 0)

405 
	$as£π
 (
ù
.
df
 == 1)

406 
	$as£π
 (
ù
.
mf
 == 0)

407 
	$as£π
 (
ù
.
off£t
 == 0)

409 #ã° 
£âîs
 
of
 
‰agmíèti⁄
 
ªœãd
 
©åibuãs
.

410 
ù
.
rf
 = 1

411 
ù
.
df
 = 0

412 
ù
.
mf
 = 1

413 
ù
.
off£t
 = 1480

414 
	$as£π
 (
ù
.
rf
 == 1)

415 
	$as£π
 (
ù
.
df
 == 0)

416 
	$as£π
 (
ù
.
mf
 == 1)

417 
	$as£π
 (
ù
.
off£t
 == 1480)

420 
__«me__
 == '__main__':

421 
	$ã°_ù
()

422 
	$ã°_hl
()

423 
	$ã°_›t
()

424 
	$ã°_zîﬁí
()

425 
	$ã°_c⁄°u˘‹
()

426 
	$ã°_‰ag
()

427 
	`¥öt
('Tests Successful...')

	@ip6.py

1 #$Id: 
ù6
.
py
 87 2013-03-05 19:41:04
Z
 
™dªwÊƒ
@
gmaû
.
com
 
$


2 #-*- 
codög
: 
utf
-8 -*-

4 
‰om
 
__futuª__
 
imp‹t
 
¥öt_fun˘i⁄


5 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


7 
	g‰om
 . 
imp‹t
 
dpkt


8 
	g‰om
 . 
imp‹t
 
ù


9 
	g‰om
 .
com∑t
 
imp‹t
 
com∑t_‹d


12 
˛ass
 
	$IP6
(
dpkt
.
Packë
):

15 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

17 
Aâribuãs
:

18 
__hdr__
: 
Hódî
 
fõlds
 
of
 
IPv6
.

19 
TODO
.

22 
__hdr__
 = (

24 ('∂í', 'H', 0), #∑ylﬂd 
	`Àngth
 (
nŸ
 
ö˛udög
 
hódî
)

25 ('nxt', 'B', 0), #√xà
hódî
 
¥Ÿocﬁ


26 ('hlim', 'B', 0), #h› 
limô


31 
_¥Ÿosw
 = 
ù
.
IP
._protosw

33 @
¥›îty


34 
def
 
	$v
(
£lf
):

35  
£lf
.
_v_fc_Êow
 >> 28

37 @
v
.
£âî


38 
def
 
	$v
(
£lf
, 
v
):

39 
£lf
.
_v_fc_Êow
 = (£lf._v_fc_Êow & ~0xf0000000Ë| (
v
 << 28)

41 @
¥›îty


42 
def
 
	$fc
(
£lf
):

43  (
£lf
.
_v_fc_Êow
 >> 20) & 0xff

45 @
fc
.
£âî


46 
def
 
	$fc
(
£lf
, 
v
):

47 
£lf
.
_v_fc_Êow
 = (£lf._v_fc_Êow & ~0xff00000Ë| (
v
 << 20)

49 @
¥›îty


50 
def
 
	$Êow
(
£lf
):

51  
£lf
.
_v_fc_Êow
 & 0xfffff

53 @
Êow
.
£âî


54 
def
 
	$Êow
(
£lf
, 
v
):

55 
£lf
.
_v_fc_Êow
 = (£lf._v_fc_Êow & ~0xfffffË| (
v
 & 0xfffff)

57 
def
 
	$u≈ack
(
£lf
, 
buf
):

58 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

59 
£lf
.
exãnsi⁄_hdrs
 = {
	}
}

60 #NOTE: 
£lf
.
exãnsi⁄_hdrs
 
is
 
nŸ
 
accuøã
, 
as
 
ô
 
d€¢
't support duplicate headerÅypes.

61 #Acc‹dög 
to
 
RFC
-1883 "EachÉxtension header should occurát most once,Éxcept forÅhe

62 #De°ö©i⁄ 
O±i⁄s
 
hódî
 
which
 
should
 
occur
 
©
 
mo°
 
twi˚
".

63 #Sec⁄dly, 
the
 .
hódîs_°r
(Ë
mëhod
 
©ãm±s
 
to
 
∑ck
Åhê
exãnsi⁄
 
hódîs
 
ö
 
‹dî
 
as


64 #deföed 
ö
 
the
 
RFC
, 
howevî
 
ô
 
d€¢
'tádjustÅheÇext header (nxt)Öointeráccordingly.

65 #Hîê
we
 
öåodu˚
 
the
 
√w
 
fõld
 .
Æl_exãnsi⁄_hódîs
; 
ô
 
Ælows
 
du∂iˇã
 
ty≥s
 
™d


66 #kìp†
the
 
‹igöÆ
 
‹dî
.

67 
	g£lf
.
	gÆl_exãnsi⁄_hódîs
 = []

69 
£lf
.
∂í
:

70 
buf
 = 
£lf
.
d©a
[:£lf.
∂í
]

71 : #duê
to
 
jumbo
 
∑ylﬂd
 
‹
 
TSO


72 
buf
 = 
£lf
.
d©a


74 
√xt_ext_hdr
 = 
£lf
.
nxt


76 
√xt_ext_hdr
 
ö
 
ext_hdrs
:

77 
ext
 = 
ext_hdrs_˛s
[
√xt_ext_hdr
](
buf
)

78 
£lf
.
exãnsi⁄_hdrs
[
√xt_ext_hdr
] = 
ext


79 
£lf
.
Æl_exãnsi⁄_hódîs
.
	$≠≥nd
(
ext
)

80 
buf
 = buf[
ext
.
Àngth
:]

81 
√xt_ext_hdr
 = 
	`gë©å
(
ext
, 'nxt', 
N⁄e
)

83 #£à
the
 
∑ylﬂd
 
¥Ÿocﬁ
 
id


84 
√xt_ext_hdr
 
is
 
nŸ
 
N⁄e
:

85 
£lf
.
p
 = 
√xt_ext_hdr


87 
åy
:

88 
£lf
.
d©a
 = sñf.
_¥Ÿosw
[
√xt_ext_hdr
](
buf
)

89 
	`£èâr
(
£lf
, sñf.
d©a
.
__˛ass__
.
__«me__
.
	`lowî
(), self.data)

90 
	$ex˚±
 (
KeyEº‹
, 
dpkt
.
U≈ackEº‹
):

91 
£lf
.
d©a
 = 
buf


93 
def
 
	$hódîs_°r
(
£lf
):

94 #I‡
Æl_exãnsi⁄_hódîs
 
is
 
avaûabÀ
,  
the
 
hódîs
 
as
 
they
 
‹igöÆly
 
≠≥¨ed


95 
£lf
.
Æl_exãnsi⁄_hódîs
:

96  
b
''.
	`joö
(
	$byãs
(
ext
Ëexà
ö
 
£lf
.
Æl_exãnsi⁄_hódîs
)

98 #Ouçuà
exãnsi⁄
 
hódîs
 
ö
 
‹dî
 
deföed
 i¿
	`RFC1883
 (
ex˚±
 
de°
 
›ts
)

99 
hódî_°r
 = 
b
""

100 
hdr
 
ö
 
ext_hdrs
:

101 
hdr
 
ö
 
£lf
.
exãnsi⁄_hdrs
:

102 
hódî_°r
 +
	$byãs
(
£lf
.
exãnsi⁄_hdrs
[
hdr
])

103  
hódî_°r


105 
def
 
	$__byãs__
(
£lf
):

106 i‡(
£lf
.
p
 =6 
‹
 sñf.∞=17 o∏£lf.∞=58Ë
™d
 
nŸ
 sñf.
d©a
.
sum
:

107 #XXX - 
£t
 
TCP
, 
UDP
, 
™d
 
ICMPv6
 
checksums


108 
p
 = 
	$byãs
(
£lf
.
d©a
)

109 
s
 = 
dpkt
..
	`∑ck
('>16s16sxBH', 
£lf
.
§c
, sñf.
d°
, sñf.
nxt
, 
	$Àn
(
p
))

110 
s
 = 
dpkt
.
	$ö_cksum_add
(0, 
s
)

111 
s
 = 
dpkt
.
	$ö_cksum_add
(
s
, 
p
)

112 
åy
:

113 
£lf
.
d©a
.
sum
 = 
dpkt
.
	$ö_cksum_d⁄e
(
s
)

114 
ex˚±
 
AâribuãEº‹
:

115 
∑ss


116  
£lf
.
	`∑ck_hdr
(Ë+ sñf.
	`hódîs_°r
(Ë+ 
	`byãs
(£lf.
d©a
)

118 @
˛assmëhod


119 
def
 
	$£t_¥Ÿo
(
˛s
, 
p
, 
pkt˛ass
):

120 
˛s
.
_¥Ÿosw
[
p
] = 
pkt˛ass


122 @
˛assmëhod


123 
def
 
	$gë_¥Ÿo
(
˛s
, 
p
):

124  
˛s
.
_¥Ÿosw
[
p
]

127 
˛ass
 
	$IP6Exãnsi⁄Hódî
(
dpkt
.
Packë
):

129 
An
 
exãnsi⁄
 
hódî
 
is
 
vîy
 
simû¨
 
to
 
a
 'sub-packet'.

130 
We
 
ju°
 
w™t
 
to
 
ª
-
u£
 
Æl
 
the
 
hdr
 
u≈ackög
 
ëc
.

132 
∑ss


135 
˛ass
 
	$IP6O±sHódî
(
IP6Exãnsi⁄Hódî
):

136 
__hdr__
 = (

137 ('nxt', 'B', 0), #√xà
exãnsi⁄
 
hódî
 
¥Ÿocﬁ


138 ('Àn', 'B', 0Ë#›ti⁄ 
d©a
 
Àngth
 
ö
 8 
o˘e˘
 
	$unôs
 (
ign‹ög
 
fú°
 8 
o˘ës
Ë
so
, 
Àn
 0 =64b
ô
 
hódî


141 
def
 
	$u≈ack
(
£lf
, 
buf
):

142 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

143 
£lf
.
Àngth
 = (£lf.
Àn
 + 1) * 8

144 
›ti⁄s
 = []

146 
ödex
 = 0

148 
ödex
 < 
£lf
.
Àngth
 - 2:

149 
›t_ty≥
 = 
	$com∑t_‹d
(
£lf
.
d©a
[
ödex
])

151 #PAD1 
›ti⁄


152 
›t_ty≥
 == 0:

153 
ödex
 += 1

156 
›t_Àngth
 = 
	`com∑t_‹d
(
£lf
.
d©a
[
ödex
 + 1])

158 
›t_ty≥
 =1: #PADN 
›ti⁄


159 #PADN 
u£s
 
›t_Àngth
 
byãs
 
ö
 
tŸÆ


160 
ödex
 +
›t_Àngth
 + 2

163 
›ti⁄s
.
	`≠≥nd
(

164 {'ty≥': 
›t_ty≥
, '›t_Àngth': 
›t_Àngth
, 'd©a': 
£lf
.
d©a
[
ödex
 + 2:ödex + 2 + o±_Àngth]
	}
})

166 #add 
the
 
two
 
ch¨s
 
™d
Åhê
›ti⁄_Àngth
, 
to
 
move
Åÿthê
√xt
 
›ti⁄


167 
	gödex
 +
›t_Àngth
 + 2

169 
£lf
.
›ti⁄s
 = options

170 
£lf
.
d©a
 = 
buf
[2:£lf.
Àngth
] #kì∞
øw
 d©®
wôh
 
Æl
 
∑d
 
›ti⁄s
, 
but
 
nŸ
 
the
 
fﬁlowög
 data

173 
˛ass
 
	$IP6H›O±sHódî
(
IP6O±sHódî
):

174 
∑ss


177 
˛ass
 
	$IP6D°O±sHódî
(
IP6O±sHódî
):

178 
∑ss


181 
˛ass
 
	$IP6RoutögHódî
(
IP6Exãnsi⁄Hódî
):

182 
__hdr__
 = (

183 ('nxt', 'B', 0), #√xà
exãnsi⁄
 
hódî
 
¥Ÿocﬁ


184 ('Àn', 'B', 0), #exãnsi⁄ 
d©a
 
Àngth
 
ö
 8 
o˘e˘
 
	`unôs
 (
ign‹ög
 
fú°
 8 
o˘ës
Ë(<46 
ty≥
 0)

185 ('ty≥', 'B', 0), #routög 
	`ty≥
 (
cuºíéy
, 
⁄ly
 0 
is
 
u£d
)

186 ('£gs_À·', 'B', 0), #ªmaöög 
£gmíts
 
ö
 
rouã
, 
u¡û
 
	`de°ö©i⁄
 (<= 23)

187 ('rsvd_¶_bôs', 'I', 0), #ª£rved (1 
byã
), 
°ri˘
/
loo£
 
bôm≠
 
addªs£s


190 @
¥›îty


191 
def
 
	$¶_bôs
(
£lf
):

192  
£lf
.
rsvd_¶_bôs
 & 0xffffff

194 @
¶_bôs
.
£âî


195 
def
 
	$¶_bôs
(
£lf
, 
v
):

196 
£lf
.
rsvd_¶_bôs
 = (£lf.rsvd_¶_bô†& ~0xfffffË| (
v
 & 0xfffff)

198 
def
 
	$u≈ack
(
£lf
, 
buf
):

199 
hdr_size
 = 8

200 
addr_size
 = 16

202 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

204 
addªs£s
 = []

205 
num_addªs£s
 = 
£lf
.
Àn


206 
buf
 = buf[
hdr_size
:hdr_sizê+ 
num_addªs£s
 * 
addr_size
]

208 
i
 
ö
 
	$ønge
(
num_addªs£s
):

209 
addªs£s
.
	`≠≥nd
(
buf
[
i
 * 
addr_size
: i *áddr_size +áddr_size])

211 
£lf
.
d©a
 = 
buf


212 
£lf
.
addªs£s
 =áddresses

213 
£lf
.
Àngth
 = sñf.
Àn
 * 8 + 8

216 
˛ass
 
	$IP6FøgmítHódî
(
IP6Exãnsi⁄Hódî
):

217 
__hdr__
 = (

218 ('nxt', 'B', 0), #√xà
exãnsi⁄
 
hódî
 
¥Ÿocﬁ


219 ('ªsv', 'B', 0), #ª£rved, 
£t
 
to
 0

220 ('‰ag_off_ªsv_m', 'H', 0), #‰ag 
	`off£t
 (13 
bôs
), 
ª£rved
 
	`zîo
 (2 bôs), 
M‹e
 
‰ags
 
Êag


221 ('id', 'I', 0Ë#‰agmít†
id


224 
def
 
	$u≈ack
(
£lf
, 
buf
):

225 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

226 
£lf
.
Àngth
 = sñf.
__hdr_Àn__


227 
£lf
.
d©a
 = 
b
''

229 @
¥›îty


230 
def
 
	$‰ag_off
(
£lf
):

231  
£lf
.
‰ag_off_ªsv_m
 >> 3

233 @
‰ag_off
.
£âî


234 
def
 
	$‰ag_off
(
£lf
, 
v
):

235 
£lf
.
‰ag_off_ªsv_m
 = (£lf.‰ag_off_ªsv_m & ~0xfff8Ë| (
v
 << 3)

237 @
¥›îty


238 
def
 
	$m_Êag
(
£lf
):

239  
£lf
.
‰ag_off_ªsv_m
 & 1

241 @
m_Êag
.
£âî


242 
def
 
	$m_Êag
(
£lf
, 
v
):

243 
£lf
.
‰ag_off_ªsv_m
 = (£lf.‰ag_off_ªsv_m & ~0xff„Ë| 
v


246 
˛ass
 
	$IP6AHHódî
(
IP6Exãnsi⁄Hódî
):

247 
__hdr__
 = (

248 ('nxt', 'B', 0), #√xà
exãnsi⁄
 
hódî
 
¥Ÿocﬁ


249 ('Àn', 'B', 0), #Àngth 
of
 
hódî
 
ö
 4 
o˘ë
 
	`unôs
 (
ign‹ög
 
fú°
 2 
unôs
)

250 ('ªsv', 'H', 0), #ª£rved, 2 
byãs
 
of
 0

251 ('•i', 'I', 0), #SPI 
£curôy
 
∑ømëî
 
ödex


252 ('£q', 'I', 0Ë#£quí˚ 
no
.

255 
def
 
	$u≈ack
(
£lf
, 
buf
):

256 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

257 
£lf
.
Àngth
 = (£lf.
Àn
 + 2) * 4

258 
£lf
.
auth_d©a
 = sñf.
d©a
[:(£lf.
Àn
 - 1) * 4]

261 
˛ass
 
	$IP6ESPHódî
(
IP6Exãnsi⁄Hódî
):

262 
__hdr__
 = (

267 
def
 
	$u≈ack
(
£lf
, 
buf
):

268 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

269 
£lf
.
Àngth
 = sñf.
__hdr_Àn__
 + 
	$Àn
(
£lf
.
d©a
)

272 
ext_hdrs
 = [
ù
.
IP_PROTO_HOPOPTS
, ip.
IP_PROTO_ROUTING
, ip.
IP_PROTO_FRAGMENT
, ip.
IP_PROTO_AH
, ip.
IP_PROTO_ESP
,

273 
ù
.
IP_PROTO_DSTOPTS
]

274 
ext_hdrs_˛s
 = {
ù
.
IP_PROTO_HOPOPTS
: 
IP6H›O±sHódî
,

275 
ù
.
IP_PROTO_ROUTING
: 
IP6RoutögHódî
,

276 
ù
.
IP_PROTO_FRAGMENT
: 
IP6FøgmítHódî
,

277 
ù
.
IP_PROTO_ESP
: 
IP6ESPHódî
,

278 
ù
.
IP_PROTO_AH
: 
IP6AHHódî
,

279 
ù
.
IP_PROTO_DSTOPTS
: 
IP6D°O±sHódî
}

282 #Unô 
ã°s


284 
def
 
	$ã°_ùg
():

285 
s
 = (
b
'\x60\x00\x00\x00\x00\x28\x06\x40\xfe\x80\x00\x00\x00\x00\x00\x00\x02\x11\x24\xff\xfe\x8c'

286 
b
'\x11\xde\xfe\x80\x00\x00\x00\x00\x00\x00\x02\xb0\xd0\xff\xfe\xe1\x80\x72\xcd\xca\x00\x16'

287 
b
'\x04\x84\x46\xd5\x00\x00\x00\x00\xa0\x02\xff\xff\xf8\x09\x00\x00\x02\x04\x05\xa0\x01\x03'

288 
b
'\x03\x00\x01\x01\x08\x0a\x7d\x18\x35\x3f\x00\x00\x00\x00')

289 
_ù
 = 
	$IP6
(
s
)

291 #basi¯
¥›îtõs


292 
as£π
 
_ù
.
v
 == 6

293 
as£π
 
_ù
.
fc
 == 0

294 
as£π
 
_ù
.
Êow
 == 0

296 
_ù
.
d©a
.
sum
 = 0

297 
s2
 = 
	$byãs
(
_ù
)

298 
as£π
 
s
 =
s2


301 
def
 
	$ã°_ù6_routög_hódî
():

302 
s
 = (
b
'\x60\x00\x00\x00\x00\x3c\x2b\x40\x20\x48\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'

303 
b
'\xde\xca\x20\x47\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xca\xfe\x06\x04\x00\x02'

304 
b
'\x00\x00\x00\x00\x20\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xde\xca\x20\x22'

305 
b
'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xde\xca\x00\x14\x00\x50\x00\x00\x00\x00'

306 
b
'\x00\x00\x00\x00\x50\x02\x20\x00\x91\x7f\x00\x00')

307 
_ù
 = 
	$IP6
(
s
)

308 
s2
 = 
	$byãs
(
_ù
)

309 #43 
is
 
Routög
 
hódî
 
id


310 
as£π
 
	`Àn
(
_ù
.
exãnsi⁄_hdrs
[43].
addªs£s
) == 2

311 
as£π
 
_ù
.
t˝


312 
as£π
 
s
 =
s2


315 
def
 
	$ã°_ù6_‰agmít_hódî
():

316 
s
 = 
b
'\x06\xee\xff\xfb\x00\x00\xff\xff'

317 
fh
 = 
	$IP6FøgmítHódî
(
s
)

318 #s2 = 
	`°r
(
fh
Ë
v¨übÀ
 's2' 
is
 
nŸ
 
u£d


319 
as£π
 
fh
.
nxt
 == 6

320 
as£π
 
fh
.
id
 == 65535

321 
as£π
 
fh
.
‰ag_off
 == 8191

322 
as£π
 
fh
.
m_Êag
 == 1

323 
as£π
 
	`byãs
(
fh
Ë=
s


325 #IP6 
wôh
 
‰agmít
 
hódî


326 
s
 = (
b
'\x60\x00\x00\x00\x00\x10\x2c\x00\x02\x22\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'

327 
b
'\x00\x02\x03\x33\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x29\x00\x00\x01'

328 
b
'\x00\x00\x00\x00\x60\x00\x00\x00\x00\x10\x2c\x00')

329 
_ù
 = 
	$IP6
(
s
)

330 
as£π
 
	`byãs
(
_ù
Ë=
s


333 
def
 
	$ã°_ù6_›ti⁄s_hódî
():

334 
s
 = (
b
'\x3b\x04\x01\x02\x00\x00\xc9\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'

335 
b
'\x00\x00\x01\x00\xc2\x04\x00\x00\x00\x00\x05\x02\x00\x00\x01\x02\x00\x00')

336 
›ti⁄s
 = 
	`IP6O±sHódî
(
s
).options

337 
as£π
 
	`Àn
(
›ti⁄s
) == 3

338 
as£π
 
	`byãs
(
	`IP6O±sHódî
(
s
)) == s

341 
def
 
	$ã°_ù6_ah_hódî
():

342 
s
 = 
b
'\x3b\x04\x00\x00\x02\x02\x02\x02\x01\x01\x01\x01\x78\x78\x78\x78\x78\x78\x78\x78'

343 
ah
 = 
	$IP6AHHódî
(
s
)

344 
as£π
 
ah
.
Àngth
 == 24

345 
as£π
 
ah
.
auth_d©a
 =
b
'xxxxxxxx'

346 
as£π
 
ah
.
•i
 == 0x2020202

347 
as£π
 
ah
.
£q
 == 0x1010101

348 
as£π
 
	`byãs
(
ah
Ë=
s


351 
def
 
	$ã°_ù6_e•_hódî
():

352 
s
 = (
b
'\x00\x00\x01\x00\x00\x00\x00\x44\xe2\x4f\x9e\x68\xf3\xcd\xb1\x5f\x61\x65\x42\x8b\x78\x0b'

353 
b
'\x4a\xfd\x13\xf0\x15\x98\xf5\x55\x16\xa8\x12\xb3\xb8\x4d\xbc\x16\xb2\x14\xbe\x3d\xf9\x96'

354 
b
'\xd4\xa0\x39\x1f\x85\x74\x25\x81\x83\xa6\x0d\x99\xb6\xba\xa3\xcc\xb6\xe0\x9a\x78\xee\xf2'

355 
b
'\xaf\x9a')

356 
e•
 = 
	$IP6ESPHódî
(
s
)

357 
as£π
 
e•
.
Àngth
 == 68

358 
as£π
 
e•
.
•i
 == 256

359 
as£π
 
	`byãs
(
e•
Ë=
s


362 
def
 
	$ã°_ù6_exãnsi⁄_hódîs
():

363 
p
 = (
b
'\x60\x00\x00\x00\x00\x3c\x2b\x40\x20\x48\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'

364 
b
'\xde\xca\x20\x47\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xca\xfe\x06\x04\x00\x02'

365 
b
'\x00\x00\x00\x00\x20\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xde\xca\x20\x22'

366 
b
'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xde\xca\x00\x14\x00\x50\x00\x00\x00\x00'

367 
b
'\x00\x00\x00\x00\x50\x02\x20\x00\x91\x7f\x00\x00')

368 
_ù
 = 
	$IP6
(
p
)

369 
o
 = (
b
'\x3b\x04\x01\x02\x00\x00\xc9\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'

370 
b
'\x00\x00\x01\x00\xc2\x04\x00\x00\x00\x00\x05\x02\x00\x00\x01\x02\x00\x00')

371 
_ù
.
exãnsi⁄_hdrs
[0] = 
	$IP6H›O±sHódî
(
o
)

372 
fh
 = 
b
'\x06\xee\xff\xfb\x00\x00\xff\xff'

373 
_ù
.
exãnsi⁄_hdrs
[44] = 
	$IP6FøgmítHódî
(
fh
)

374 
ah
 = 
b
'\x3b\x04\x00\x00\x02\x02\x02\x02\x01\x01\x01\x01\x78\x78\x78\x78\x78\x78\x78\x78'

375 
_ù
.
exãnsi⁄_hdrs
[51] = 
	$IP6AHHódî
(
ah
)

376 dÿ
b
'\x3b\x02\x01\x02\x00\x00\xc9\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'

377 
_ù
.
exãnsi⁄_hdrs
[60] = 
	$IP6D°O±sHódî
(do)

378 
as£π
 
	`Àn
(
_ù
.
exãnsi⁄_hdrs
) == 5

381 
def
 
	$ã°_ù6_Æl_exãnsi⁄_hódîs
(): #https:

382 
s
 = (
b
'\x60\x00\x00\x00\x00\x47\x3c\x40\xfe\xd0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01'

383 
b
'\x00\x02\xfe\xd0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x01\x3c\x00\x01\x04'

384 
b
'\x00\x00\x00\x00\x3c\x00\x01\x04\x00\x00\x00\x00\x2c\x00\x01\x04\x00\x00\x00\x00\x2c\x00'

385 
b
'\x00\x00\x00\x00\x00\x00\x3c\x00\x00\x00\x00\x00\x00\x00\x2c\x00\x01\x04\x00\x00\x00\x00'

386 
b
'\x3a\x00\x00\x00\x00\x00\x00\x00\x80\x00\xd8\xe5\x0c\x1a\x00\x00\x50\x61\x79\x4c\x6f\x61'

387 
b
'\x64')

388 
_ù
 = 
	$IP6
(
s
)

389 
as£π
 
_ù
.
p
 == 58 #ICMPv6

390 
hdrs
 = 
_ù
.
Æl_exãnsi⁄_hódîs


391 
as£π
 
	`Àn
(
hdrs
) == 7

392 
as£π
 
	$isö°™˚
(
hdrs
[0], 
IP6D°O±sHódî
)

393 
as£π
 
	$isö°™˚
(
hdrs
[3], 
IP6FøgmítHódî
)

394 
as£π
 
	$isö°™˚
(
hdrs
[5], 
IP6D°O±sHódî
)

395 
as£π
 
	`byãs
(
_ù
Ë=
s


398 
__«me__
 == '__main__':

399 
	$ã°_ùg
()

400 
	$ã°_ù6_routög_hódî
()

401 
	$ã°_ù6_‰agmít_hódî
()

402 
	$ã°_ù6_›ti⁄s_hódî
()

403 
	$ã°_ù6_ah_hódî
()

404 
	$ã°_ù6_e•_hódî
()

405 
	$ã°_ù6_exãnsi⁄_hódîs
()

406 
	$ã°_ù6_Æl_exãnsi⁄_hódîs
()

407 
	`¥öt
('Tests Successful...')

	@ipip.py

1 #Deföe†
a
 
c›y
 
of
 
the
 
IP
 
¥Ÿocﬁ
 
as
 
IPIP
 
so
Åhê¥Ÿocﬁ 
∑rsög
 
ö
 
ù
.
py


2 #ˇ¿
decode
 
IPIP
 
∑ckës
.

3 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


5 
	g‰om
 .
ù
 
imp‹t
 
IP
 
as
 
	gIPIP


	@ipx.py

1 #$Id: 
ùx
.
py
 23 2006-11-08 15:45:33
Z
 
dugs⁄g
 
$


2 #-*- 
codög
: 
utf
-8 -*-

4 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


6 
	g‰om
 . 
imp‹t
 
dpkt


8 
	gIPX_HDR_LEN
 = 30

11 
˛ass
 
	$IPX
(
dpkt
.
Packë
):

14 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

16 
Aâribuãs
:

17 
__hdr__
: 
Hódî
 
fõlds
 
of
 
IPX
.

18 
TODO
.

21 
__hdr__
 = (

23 ('Àn', 'H', 
IPX_HDR_LEN
),

	@llc.py

1 #-*- 
codög
: 
utf
-8 -*-

3 
‰om
 
__futuª__
 
imp‹t
 
¥öt_fun˘i⁄


4 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


6 
imp‹t
 

8 
	g‰om
 . 
imp‹t
 
dpkt


9 
	g‰om
 . 
imp‹t
 
°p


12 
˛ass
 
	$LLC
(
dpkt
.
Packë
):

15 
Aâribuãs
:

16 
__hdr__
 = (

17 ('dßp', 'B', 0xØ), #De°ö©i⁄ 
Sîvi˚
 
Ac˚ss
 
Poöt


18 ('sßp', 'B', 0xØ), #Sour˚ 
Sîvi˚
 
Ac˚ss
 
Poöt


19 ('˘l', 'B', 3Ë#C⁄åﬁ 
Byã


23 
__hdr__
 = (

24 ('dßp', 'B', 0xØ), #De°ö©i⁄ 
Sîvi˚
 
Ac˚ss
 
Poöt


25 ('sßp', 'B', 0xØ), #Sour˚ 
Sîvi˚
 
Ac˚ss
 
Poöt


26 ('˘l', 'B', 3Ë#C⁄åﬁ 
Byã


29 @
¥›îty


30 
def
 
	$is_¢≠
(
£lf
):

31  
£lf
.
dßp
 =£lf.
sßp
 == 0xaa

33 
def
 
	$u≈ack
(
£lf
, 
buf
):

34 
‰om
 .
ëhî√t
 
imp‹t
 
Ethî√t
, 
ETH_TYPE_IP
, 
ETH_TYPE_IPX


36 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

37 
£lf
.
is_¢≠
:

38 
£lf
.
oui
, sñf.
ty≥
 = .
	`u≈ack
('>IH', 
b
'\x00' + sñf.
d©a
[:5])

39 
£lf
.
d©a
 = self.data[5:]

40 
åy
:

41 
£lf
.
d©a
 = 
Ethî√t
.
	$gë_ty≥
(
£lf
.
ty≥
)(£lf.
d©a
)

42 
	`£èâr
(
£lf
, sñf.
d©a
.
__˛ass__
.
__«me__
.
	`lowî
(), self.data)

43 
	$ex˚±
 (
KeyEº‹
, 
dpkt
.
U≈ackEº‹
):

44 
∑ss


46 #n⁄-
SNAP


47 
£lf
.
dßp
 == 0x06: #SAP_IP

48 
£lf
.
d©a
 = sñf.
ù
 = 
Ethî√t
.
	$gë_ty≥
(
ETH_TYPE_IP
)(
£lf
.
d©a
)

49 
ñif
 
£lf
.
dßp
 =0x10 
‹
 sñf.dß∞=0xe0: #SAP_NETWARE{1,2
	}
}

50 
£lf
.
d©a
 = sñf.
ùx
 = 
Ethî√t
.
	$gë_ty≥
(
ETH_TYPE_IPX
)(
£lf
.
d©a
)

51 
ñif
 
£lf
.
dßp
 == 0x42: #SAP_STP

52 
£lf
.
d©a
 = sñf.
°p
 = sç.
	$STP
(
£lf
.
d©a
)

54 
def
 
	$∑ck_hdr
(
£lf
):

55 
buf
 = 
dpkt
.
Packë
.
	$∑ck_hdr
(
£lf
)

56 
£lf
.
is_¢≠
: #add 
SNAP
 
subœyî


57 
oui
 = 
	`gë©å
(
£lf
, 'oui', 0)

58 
_ty≥
 = 
	`gë©å
(
£lf
, 'type', 0)

59 
nŸ
 
_ty≥
 
™d
 
	$isö°™˚
(
£lf
.
d©a
, 
dpkt
.
Packë
):

60 
‰om
 .
ëhî√t
 
imp‹t
 
Ethî√t


61 
åy
:

62 
_ty≥
 = 
Ethî√t
.
	$gë_ty≥_ªv
(
£lf
.
d©a
.
__˛ass__
)

63 
ex˚±
 
KeyEº‹
:

64 
∑ss


65 
buf
 +.
	`∑ck
('>IH', 
oui
, 
_ty≥
)[1:]

66  
buf


68 
def
 
	$__Àn__
(
£lf
): #add 5 
byãs
 
of
 
SNAP
 
hódî
 
√eded


69  
£lf
.
__hdr_Àn__
 + 5 * (£lf.
is_¢≠
Ë+ 
	$Àn
(
£lf
.
d©a
)

72 
def
 
	$ã°_Œc
():

73 
‰om
 . 
imp‹t
 
ù


74 
‰om
 . 
imp‹t
 
ëhî√t


75 
s
 = (
b
'\xaa\xaa\x03\x00\x00\x00\x08\x00\x45\x00\x00\x28\x07\x27\x40\x00\x80\x06\x1d'

76 
b
'\x39\x8d\xd4\x37\x3d\x3f\xf5\xd1\x69\xc0\x5f\x01\xbb\xb2\xd6\xef\x23\x38\x2b'

77 
b
'\x4f\x08\x50\x10\x42\x04\xac\x17\x00\x00')

78 
Œc_pkt
 = 
	$LLC
(
s
)

79 
ù_pkt
 = 
Œc_pkt
.
d©a


80 
as£π
 
	$isö°™˚
(
ù_pkt
, 
ù
.
IP
)

81 
as£π
 
Œc_pkt
.
ty≥
 =
ëhî√t
.
ETH_TYPE_IP


82 
as£π
 
ù_pkt
.
d°
 =
b
'\x3f\xf5\xd1\x69'

83 
as£π
 
	`°r
(
Œc_pkt
Ë=
	$°r
(
s
)

84 
as£π
 
	`Àn
(
Œc_pkt
Ë=
	$Àn
(
s
)

86 #c⁄°ru˘i⁄ 
wôh
 
SNAP
 
hódî


87 
Œc_pkt
 = 
	`LLC
(
sßp
=0xØ, 
dßp
=0xØ, 
d©a
=
ù
.
	$IP
(
s
[8:]))

88 
as£π
 
	`°r
(
Œc_pkt
Ë=
	$°r
(
s
)

90 #nÿ
SNAP


91 
Œc_pkt
 = 
	`LLC
(
sßp
=6, 
dßp
=6, 
d©a
=
ù
.
	$IP
(
s
[8:]))

92 
as£π
 
	$isö°™˚
(
Œc_pkt
.
d©a
, 
ù
.
IP
)

93 
as£π
 
	`°r
(
Œc_pkt
Ë=°r(
b
'\x06\x06\x03' + 
s
[8:])

96 
__«me__
 == '__main__':

97 
	$ã°_Œc
()

98 
	`¥öt
('Tests Successful...')

	@lldp.py

1 #$Id: 
cdp
.
py
 23 2006-11-08 15:45:33
Z
 
dugs⁄g
 
$


2 #-*- 
codög
: 
utf
-8 -*-

4 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


6 
imp‹t
 

8 
	g‰om
 . 
imp‹t
 
dpkt


10 
	gCDP_DEVID
 = 1 #string

11 
CDP_ADDRESS
 = 2

12 
CDP_PORTID
 = 3 #string

13 
CDP_CAPABILITIES
 = 4 #32-
bô
 
bômask


14 
CDP_VERSION
 = 5 #string

15 
CDP_PLATFORM
 = 6 #string

16 
CDP_IPPREFIX
 = 7

18 
CDP_VTP_MGMT_DOMAIN
 = 9 #string

19 
CDP_NATIVE_VLAN
 = 10 #16-
bô
 
öãgî


20 
CDP_DUPLEX
 = 11 #8-
bô
 
boﬁón


21 
CDP_TRUST_BITMAP
 = 18 #8-
bô
 
bômask0x13


22 
CDP_UNTRUST_COS
 = 19 #8-
bô
 
p‹t


23 
CDP_SYSTEM_NAME
 = 20 #string

24 
CDP_SYSTEM_OID
 = 21 #10-
byã
 
bö¨y
 
°rög


25 
CDP_MGMT_ADDRESS
 = 22 #32-
bô
 
numbî
 
of
 
addrs
, 
Addªs£s


26 
	gCDP_LOCATION
 = 23 #string

29 
˛ass
 
	$CDP
(
dpkt
.
Packë
):

32 
Sì
 
m‹e
 
about
 
the
 
BGP
 
⁄
 \

33 
hâps
:

35 
Aâribuãs
:

36 
__hdr__
: 
Hódî
 
fõlds
 
of
 
CDP
.

40 
__hdr__
 = (

46 
˛ass
 
	$Addªss
(
dpkt
.
Packë
):

47 #XXX - 
⁄ly
 
h™dÀ
 
NLPID
/
IP
 
now


48 
__hdr__
 = (

49 ('±y≥', 'B', 1), #¥Ÿocﬁ 
	`ty≥
 (
NLPID
)

50 ('∂í', 'B', 1), #¥Ÿocﬁ 
Àngth


52 ('Æí', 'H', 4Ë#addªs†
Àngth


55 
def
 
	$u≈ack
(
£lf
, 
buf
):

56 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

57 
£lf
.
d©a
 = sñf.d©a[:£lf.
Æí
]

59 
˛ass
 
	$TLV
(
dpkt
.
Packë
):

60 
__hdr__
 = (

65 
def
 
	$u≈ack
(
£lf
, 
buf
):

66 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

67 
£lf
.
d©a
 = sñf.d©a[:£lf.
Àn
 - 4]

68 
£lf
.
ty≥
 =
CDP_ADDRESS
:

69 
n
 = .
	`u≈ack
('>I', 
£lf
.
d©a
[:4])[0]

70 
buf
 = 
£lf
.
d©a
[4:]

71 
l
 = []

72 
i
 
ö
 
	$ønge
(
n
):

73 
a
 = 
CDP
.
	$Addªss
(
buf
)

74 
l
.
	$≠≥nd
(
a
)

75 
buf
 = buf[
	$Àn
(
a
):]

76 
£lf
.
d©a
 = 
l


78 
def
 
	$__Àn__
(
£lf
):

79 
£lf
.
ty≥
 =
CDP_ADDRESS
:

80 
n
 = 4 + 
	`sum
(
	$m≠
(
Àn
, 
£lf
.
d©a
))

82 
n
 = 
	$Àn
(
£lf
.
d©a
)

83  
£lf
.
__hdr_Àn__
 + 
n


85 
def
 
	$__byãs__
(
£lf
):

86 
£lf
.
Àn
 = 
	$Àn
(
£lf
)

87 
£lf
.
ty≥
 =
CDP_ADDRESS
:

88 
s
 = .
	`∑ck
('>I', 
	`Àn
(
£lf
.
d©a
)) + \

89 
b
''.
	`joö
(
	$m≠
(
byãs
, 
£lf
.
d©a
))

91 
s
 = 
£lf
.
d©a


92  
£lf
.
	`∑ck_hdr
(Ë+ 
s


94 
def
 
	$u≈ack
(
£lf
, 
buf
):

95 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

96 
buf
 = 
£lf
.
d©a


97 
l
 = []

98 
buf
:

99 
év
 = 
£lf
.
	$TLV
(
buf
)

100 
l
.
	$≠≥nd
(
év
)

101 
buf
 = buf[
	$Àn
(
év
):]

102 
£lf
.
d©a
 = 
l


104 
def
 
	$__Àn__
(
£lf
):

105  
£lf
.
__hdr_Àn__
 + 
	`sum
(
	$m≠
(
Àn
, 
£lf
.
d©a
))

107 
def
 
	$__byãs__
(
£lf
):

108 
d©a
 = 
b
''.
	`joö
(
	$m≠
(
byãs
, 
£lf
.
d©a
))

109 
nŸ
 
£lf
.
sum
:

110 
£lf
.
sum
 = 
dpkt
.
	`ö_cksum
(£lf.
	`∑ck_hdr
(Ë+ 
d©a
)

111  
£lf
.
	`∑ck_hdr
(Ë+ 
d©a


	@loopback.py

1 #$Id: 
lo›back
.
py
 38 2007-03-17 03:33:16
Z
 
dugs⁄g
 
$


2 #-*- 
codög
: 
utf
-8 -*-

4 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


6 
	g‰om
 . 
imp‹t
 
dpkt


7 
	g‰om
 . 
imp‹t
 
ëhî√t


8 
	g‰om
 . 
imp‹t
 
ù


9 
	g‰om
 . 
imp‹t
 
ù6


12 
˛ass
 
	$Lo›back
(
dpkt
.
Packë
):

15 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

17 
Aâribuãs
:

18 
__hdr__
: 
Hódî
 
fõlds
 
of
 
Lo›back
.

19 
TODO
.

22 
__hdr__
 = (('family', 'I', 0), )

23 
__byã_‹dî__
 = '@'

25 
def
 
	$u≈ack
(
£lf
, 
buf
):

26 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

27 
£lf
.
Ámûy
 == 2:

28 
£lf
.
d©a
 = 
ù
.
	$IP
(
£lf
.
d©a
)

29 
ñif
 
£lf
.
Ámûy
 == 0x02000000:

30 
£lf
.
Ámûy
 = 2

31 
£lf
.
d©a
 = 
ù
.
	$IP
(
£lf
.
d©a
)

32 
ñif
 
£lf
.
Ámûy
 
	$ö
 (24, 28, 30):

33 
£lf
.
d©a
 = 
ù6
.
	$IP6
(
£lf
.
d©a
)

34 
ñif
 
£lf
.
Ámûy
 > 1500:

35 
£lf
.
d©a
 = 
ëhî√t
.
	`Ethî√t
(self.data)

	@mrt.py

1 #$Id: 
mπ
.
py
 29 2007-01-26 02:29:07
Z
 
j⁄
.
obîheide
 
$


2 #-*- 
codög
: 
utf
-8 -*-

4 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


6 
	g‰om
 . 
imp‹t
 
dpkt


7 
	g‰om
 . 
imp‹t
 
	gbgp


9 #Mu…i-
thªaded
 
Routög
 
Toﬁkô


12 #MRT 
Ty≥s


13 
	gNULL
 = 0

14 
START
 = 1

15 
DIE
 = 2

16 
I_AM_DEAD
 = 3

17 
PEER_DOWN
 = 4

18 
BGP
 = 5 #Dïªˇãd 
by
 
BGP4MP


19 
RIP
 = 6

20 
IDRP
 = 7

21 
RIPNG
 = 8

22 
BGP4PLUS
 = 9 #Dïªˇãd 
by
 
BGP4MP


23 
BGP4PLUS_01
 = 10 #Dïªˇãd 
by
 
BGP4MP


24 
OSPF
 = 11

25 
TABLE_DUMP
 = 12

26 
BGP4MP
 = 16

27 
BGP4MP_ET
 = 17

28 
ISIS
 = 32

29 
ISIS_ET
 = 33

30 
OSPF_ET
 = 64

32 #BGP4MP 
Subty≥s


33 
BGP4MP_STATE_CHANGE
 = 0

34 
BGP4MP_MESSAGE
 = 1

35 
BGP4MP_ENTRY
 = 2

36 
BGP4MP_SNAPSHOT
 = 3

37 
BGP4MP_MESSAGE_32BIT_AS
 = 4

39 #Addªs†
Famûy
 
Ty≥s


40 
AFI_IPv4
 = 1

41 
AFI_IPv6
 = 2

44 
˛ass
 
	$MRTHódî
(
dpkt
.
Packë
):

45 
__hdr__
 = (

53 
˛ass
 
	$TabÀDump
(
dpkt
.
Packë
):

54 
__hdr__
 = (

66 
def
 
	$u≈ack
(
£lf
, 
buf
):

67 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

68 
∂í
 = 
£lf
.
©å_Àn


69 
l
 = []

70 
∂í
 > 0:

71 
©å
 = 
bgp
.
BGP
.
Upd©e
.
	$Aâribuã
(
£lf
.
d©a
)

72 
£lf
.
d©a
 = sñf.d©a[
	$Àn
(
©å
):]

73 
∂í
 -
	$Àn
(
©å
)

74 
l
.
	$≠≥nd
(
©å
)

75 
£lf
.
©åibuãs
 = 
l


78 
˛ass
 
	$BGP4MPMesßge
(
dpkt
.
Packë
):

79 
__hdr__
 = (

83 ('Ámûy', 'H', 
AFI_IPv4
),

89 
˛ass
 
	$BGP4MPMesßge_32
(
dpkt
.
Packë
):

90 
__hdr__
 = (

94 ('Ámûy', 'H', 
AFI_IPv4
),

	@netbios.py

1 #$Id: 
√tbios
.
py
 23 2006-11-08 15:45:33
Z
 
dugs⁄g
 
$


2 #-*- 
codög
: 
utf
-8 -*-

4 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


6 
imp‹t
 

8 
	g‰om
 . 
imp‹t
 
dpkt


9 
	g‰om
 . 
imp‹t
 
dns


12 
def
 
	$ícode_«me
(
«me
):

14 
l
 = []

15 
c
 
ö
 .
	`∑ck
('16s', 
«me
):

16 
c
 = 
	$‹d
(
c
)

17 
l
.
	`≠≥nd
(
	`chr
((
c
 >> 4) + 0x41))

18 
l
.
	`≠≥nd
(
	`chr
((
c
 & 0xf) + 0x41))

19  ''.
	$joö
(
l
)

22 
def
 
	$decode_«me
(
nb«me
):

24 
	`Àn
(
nb«me
) != 32:

25  
nb«me


26 
l
 = []

27 
i
 
ö
 
	$ønge
(0, 32, 2):

28 
l
.
	`≠≥nd
(
	`chr
(((
	`‹d
(
nb«me
[
i
]) - 0x41) << 4) |

29 ((
	`‹d
(
nb«me
[
i
 + 1]) - 0x41) & 0xf)))

30  ''.
	`joö
(
l
).
	`•lô
('\x00', 1)[0]

32 #RR 
ty≥s


33 
NS_A
 = 0x01 #IP 
addªss


34 
NS_NS
 = 0x02 #Namê
Sîvî


35 
NS_NULL
 = 0x0A #NULL

36 
NS_NB
 = 0x20 #NëBIOS 
gíîÆ
 
Name
 
Sîvi˚


37 
NS_NBSTAT
 = 0x21 #NëBIOS 
NODE
 
STATUS


39 #RR 
˛as£s


40 
NS_IN
 = 1

42 #NBSTAT 
«me
 
Êags


43 
NS_NAME_G
 = 0x8000 #grou∞
	$«me
 (
as
 
›po£d
 
to
 
unique
)

44 
NS_NAME_DRG
 = 0x1000 #deregister

45 
NS_NAME_CNF
 = 0x0800 #conflict

46 
NS_NAME_ACT
 = 0x0400 #active

47 
NS_NAME_PRM
 = 0x0200 #permanent

49 #NBSTAT 
£rvi˚
 
«mes


50 
nb°©_svcs
 = {

51 #(
£rvi˚
, 
unique
): 
li°
 
of
 
	`‹dîed
 (
«me
 
¥efix
, sîvi˚ÇameË
tu∂es


84 
	}
}

87 
def
 
	$node_to_£rvi˚_«me
(
«me_£rvi˚_Êags
):

88 
«me
, 
£rvi˚
, 
Êags
 = 
«me_£rvi˚_Êags


89 
åy
:

90 
unique
 = (
Êags
 & 
NS_NAME_G
 == 0)

91 
«mïfx
, 
sv˙ame
 
ö
 
nb°©_svcs
[(
£rvi˚
, 
unique
)]:

92 
«me
.
	$°¨tswôh
(
«mïfx
):

93  
sv˙ame


94 
ex˚±
 
KeyEº‹
:

95 
∑ss


99 
˛ass
 
	$NS
(
dns
.
DNS
):

102 
˛ass
 
	$Q
(
dns
.
DNS
.
Q
):

103 
∑ss


105 
˛ass
 
	$RR
(
dns
.
DNS
.
RR
):

108 
def
 
	$u≈ack_rd©a
(
£lf
, 
buf
, 
off
):

109 
£lf
.
ty≥
 =
NS_A
:

110 
£lf
.
ù
 = sñf.
rd©a


111 
ñif
 
£lf
.
ty≥
 =
NS_NBSTAT
:

112 
num
 = 
	$‹d
(
£lf
.
rd©a
[0])

113 
off
 = 1

114 
l
 = []

115 
i
 
ö
 
	$ønge
(
num
):

116 
«me
 = 
£lf
.
rd©a
[
off
:of‡+ 15].
	`•lô
(
N⁄e
, 1)[0].split('\x00', 1)[0]

117 
£rvi˚
 = 
	`‹d
(
£lf
.
rd©a
[
off
 + 15])

118 
off
 += 16

119 
Êags
 = .
	`u≈ack
('>H', 
£lf
.
rd©a
[
off
:off + 2])[0]

120 
off
 += 2

121 
l
.
	`≠≥nd
((
«me
, 
£rvi˚
, 
Êags
))

122 
£lf
.
nodíames
 = 
l


123 #XXX - 
skù
 
°©s


125 
def
 
	$∑ck_«me
(
£lf
, 
buf
, 
«me
):

126  
dns
.
DNS
.
	`∑ck_«me
(
£lf
, 
buf
, 
	$ícode_«me
(
«me
))

128 
def
 
	$u≈ack_«me
(
£lf
, 
buf
, 
off
):

129 
«me
, 
off
 = 
dns
.
DNS
.
	$u≈ack_«me
(
£lf
, 
buf
, 
off
)

130  
	`decode_«me
(
«me
), 
off


133 
˛ass
 
	$Sessi⁄
(
dpkt
.
Packë
):

135 
__hdr__
 = (

142 
SSN_MESSAGE
 = 0

143 
SSN_REQUEST
 = 1

144 
SSN_POSITIVE
 = 2

145 
SSN_NEGATIVE
 = 3

146 
SSN_RETARGET
 = 4

147 
SSN_KEEPALIVE
 = 5

150 
˛ass
 
	$D©agøm
(
dpkt
.
Packë
):

152 
__hdr__
 = (

163 
DGRAM_UNIQUE
 = 0x10

164 
DGRAM_GROUP
 = 0x11

165 
DGRAM_BROADCAST
 = 0x12

166 
DGRAM_ERROR
 = 0x13

167 
DGRAM_QUERY
 = 0x14

168 
DGRAM_POSITIVE
 = 0x15

169 
DGRAM_NEGATIVE
 = 0x16

	@netflow.py

1 #$Id: 
√tÊow
.
py
 23 2006-11-08 15:45:33
Z
 
dugs⁄g
 
$


2 #-*- 
codög
: 
utf
-8 -*-

4 
‰om
 
__futuª__
 
imp‹t
 
¥öt_fun˘i⁄


5 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


7 
imp‹t
 

9 
	g‰om
 . 
imp‹t
 
dpkt


10 
	g‰om
 .
com∑t
 
imp‹t
 
com∑t_izù


12 
˛ass
 
	$NëÊowBa£
(
dpkt
.
Packë
):

15 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

17 
Aâribuãs
:

18 
__hdr__
: 
Hódî
 
fõlds
 
of
 
NëÊowBa£
.

19 
TODO
.

22 
__hdr__
 = (

30 
def
 
	$__Àn__
(
£lf
):

31  
£lf
.
__hdr_Àn__
 + (
	`Àn
(£lf.
d©a
[0]Ë* sñf.
cou¡
)

33 
def
 
	$__byãs__
(
£lf
):

34 #f‹ 
now
, 
d⁄
'tÅryÅoÉnforceány sizeÜimits

35 
£lf
.
cou¡
 = 
	$Àn
(
£lf
.
d©a
)

36  
£lf
.
	`∑ck_hdr
(Ë+ 
b
''.
	`joö
(
	$m≠
(
byãs
, 
£lf
.
d©a
))

38 
def
 
	$u≈ack
(
£lf
, 
buf
):

39 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

40 
buf
 = 
£lf
.
d©a


41 
l
 = []

42 
buf
:

43 
Êow
 = 
£lf
.
	$NëÊowRec‹d
(
buf
)

44 
l
.
	$≠≥nd
(
Êow
)

45 
buf
 = buf[
	$Àn
(
Êow
):]

46 
£lf
.
d©a
 = 
l


48 
˛ass
 
	$NëÊowRec‹dBa£
(
dpkt
.
Packë
):

51 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

53 
Aâribuãs
:

54 
__hdr__
: 
Hódî
 
fõlds
 
of
 
NëÊowRec‹dBa£
.

55 
TODO
.

58 #≥rf‹m™˚ 
›timiz©i⁄s


59 
def
 
	$__Àn__
(
£lf
):

61  
£lf
.
__hdr_Àn__


63 
def
 
	$__byãs__
(
£lf
):

65  
£lf
.
	$∑ck_hdr
()

67 
def
 
	$u≈ack
(
£lf
, 
buf
):

69 
k
, 
v
 
ö
 
	`com∑t_izù
(
£lf
.
__hdr_fõlds__
,

70 .
	$u≈ack
(
£lf
.
__hdr_fmt__
, 
buf
[:£lf.
__hdr_Àn__
])):

71 
	$£èâr
(
£lf
, 
k
, 
v
)

72 
£lf
.
d©a
 = 
b
""

75 
˛ass
 
	$NëÊow1
(
NëÊowBa£
):

78 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

80 
Aâribuãs
:

81 
__hdr__
: 
Hódî
 
fõlds
 
of
 
NëÊow
 
Vîsi⁄
 1.

82 
TODO
.

85 
˛ass
 
	$NëÊowRec‹d
(
NëÊowBa£
.
NëÊowRec‹dBa£
):

88 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

90 
Aâribuãs
:

91 
__hdr__
: 
Hódî
 
fõlds
 
of
 
NëÊow
 
Vîsi⁄
 1 
Êow
 
ªc‹d
.

92 
TODO
.

95 
__hdr__
 = (

117 #FYI, 
vîsi⁄s
 2-4 
d⁄
'táppearÅo haveÉver seenÅheÜight of day.

119 
˛ass
 
	$NëÊow5
(
NëÊowBa£
):

122 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

124 
Aâribuãs
:

125 
__hdr__
: 
Hódî
 
fõlds
 
of
 
NëÊow
 
Vîsi⁄
 5.

126 
TODO
.

129 
__hdr__
 = 
NëÊowBa£
.__hdr__ + (

136 
˛ass
 
	$NëÊowRec‹d
(
NëÊowBa£
.
NëÊowRec‹dBa£
):

139 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

141 
Aâribuãs
:

142 
__hdr__
: 
Hódî
 
fõlds
 
of
 
NëÊow
 
Vîsi⁄
 5 
Êow
 
ªc‹d
.

143 
TODO
.

146 
__hdr__
 = (

170 
˛ass
 
	$NëÊow6
(
NëÊowBa£
):

173 
XXX
 - 
unsuµ‹ãd
 
by
 
Cisco
, 
but
 
may
 
be
 
found
 
ö
 
the
 
fõld
.

174 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

176 
Aâribuãs
:

177 
__hdr__
: 
Hódî
 
fõlds
 
of
 
NëÊow
 
Vîsi⁄
 6.

178 
TODO
.

181 
__hdr__
 = 
NëÊow5
.__hdr__

183 
˛ass
 
	$NëÊowRec‹d
(
NëÊowBa£
.
NëÊowRec‹dBa£
):

186 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

188 
Aâribuãs
:

189 
__hdr__
: 
Hódî
 
fõlds
 
of
 
NëÊow
 
Vîsi⁄
 6 
Êow
 
ªc‹d
.

190 
TODO
.

193 
__hdr__
 = (

219 
˛ass
 
	$NëÊow7
(
NëÊowBa£
):

222 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

224 
Aâribuãs
:

225 
__hdr__
: 
Hódî
 
fõlds
 
of
 
NëÊow
 
Vîsi⁄
 7.

226 
TODO
.

229 
__hdr__
 = 
NëÊowBa£
.__hdr__ + (

234 
˛ass
 
	$NëÊowRec‹d
(
NëÊowBa£
.
NëÊowRec‹dBa£
):

237 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

239 
Aâribuãs
:

240 
__hdr__
: 
Hódî
 
fõlds
 
of
 
NëÊow
 
Vîsi⁄
 6 
Êow
 
ªc‹d
.

241 
TODO
.

244 
__hdr__
 = (

268 #Nÿ
suµ‹t
 
v8
 
‹
 
v9
 
yë
.

270 
__ßm∂e_v1
 = 
b
"\x00\x01\x00\x18gza<B\x00\xfc\x1c$\x93\x08p\xac\x01 W\xc0\xa8c\xf7\n\x00\x02\x01\x00\x03\x00\n\x00\x00\x00\x01\x00\x00\x02(gz7,gz7,\\\x1b\x00P\xac\x01\x11,\x10\x00\x00\x00\x00\x04\x00\x1b\xac\x01\x18S\xac\x18\xd9\xaa\xc0\xa82\x02\x00\x03\x00\x19\x00\x00\x00\x01\x00\x00\x05\xdcgz7|gz7|\xd8\xe3\x00P\xac\x01\x06,\x10\x00\x00\x00\x00\x04\x00\x1b\xac\x01\x14\x18\xac\x18\x8d\xcd\xc0\xa82f\x00\x03\x00\x07\x00\x00\x00\x01\x00\x00\x05\xdcgz7\x90gz7\x90\x8a\x81\x17o\xac\x01\x066\x10\x00\x00\x00\x00\x04\x00\x03\xac\x0f'$\xac\x01\xe5\x1d\xc0\xa82\x06\x00\x04\x00\x1b\x00\x00\x00\x01\x00\x00\x02(gz:8gz:8\xa3Q\x126\xac)\x06\xfd\x18\x00\x00\x00\x00\x04\x00\x1b\xac\x01\x16E\xac#\x17\x8e\xc0\xa82\x06\x00\x03\x00\x1b\x00\x00\x00\x01\x00\x00\x02(gz:Lgz:L\xc9\xff\x00P\xac\x1f\x06\x86\x02\x00\x00\x00\x00\x03\x00\x1b\xac\r\t\xff\xac\x01\x99\x95\xc0\xa82\x06\x00\x04\x00\x1b\x00\x00\x00\x01\x00\x00\x05\xdcgz:Xgz:X\xee9\x00\x17\xac\x01\x06\xde\x10\x00\x00\x00\x00\x04\x00\x03\xac\x0eJ\xd8\xac\x01\xae/\xc0\xa82\x06\x00\x04\x00\x1b\x00\x00\x00\x01\x00\x00\x05\xdcgz:hgz:h\xb3n\x00\x15\xac\x01\x06\x81\x10\x00\x00\x00\x00\x04\x00\x1b\xac\x01#8\xac\x01\xd9*\xc0\xa82\x06\x00\x03\x00\x1b\x00\x00\x00\x01\x00\x00\x05\xdcgz:tgz:t\x00\x00\x83P\xac!\x01\xab\x10\x00\x00\x00\x00\x03\x00\x1b\xac\n`7\xac*\x93J\xc0\xa82\x06\x00\x04\x00\x1b\x00\x00\x00\x01\x00\x00\x05\xdcgz:tgz:t\x00\x00\x00\x00\xac\x012\xa9\x10\x00\x00\x00\x00\x04\x00\x07\xac\nG\x1f\xac\x01\xfdJ\xc0\xa82\x06\x00\x04\x00\x1b\x00\x00\x00\x01\x00\x00\x00(gz:\x88gz:\x88!\x99i\x87\xac\x1e\x06~\x02\x00\x00\x00\x00\x03\x00\x1b\xac\x01(\xc9\xac\x01B\xc4\xc0\xa82\x02\x00\x03\x00\x19\x00\x00\x00\x01\x00\x00\x00(gz:\x88gz:\x88}6\x00P\xac\x01\x06\xfe\x10\x00\x00\x00\x00\x04\x00\x1b\xac\x0b\x08\xe8\xac\x01F\xe2\xc0\xa82\x02\x00\x04\x00\x19\x00\x00\x00\x01\x00\x00\x05\xdcgz:\x9cgz:\x9c`ii\x87\xac\x01\x06;\x10\x00\x00\x00\x00\x04\x00\x1b\xac\x01\x1d$\xac<\xf0\xc3\xc0\xa82\x06\x00\x03\x00\x1b\x00\x00\x00\x01\x00\x00\x05\xdcgz:\x9cgz:\x9cF2\x00\x14\xac\x01\x06s\x18\x00\x00\x00\x00\x04\x00\x03\xac\x0b\x11Q\xac\x01\xde\x06\xc0\xa82\x06\x00\x04\x00\x1b\x00\x00\x00\x01\x00\x00\x05\xdcgz:\xb0gz:\xb0\xef#\x1a+\xac)\x06\xe9\x10\x00\x00\x00\x00\x04\x00\x1b\xac\x0cR\xd9\xac\x01o\xe8\xc0\xa82\x02\x00\x04\x00\x19\x00\x00\x00\x01\x00\x00\x05\xdcgz:\xc4gz:\xc4\x13n\x00n\xac\x19\x06\xa8\x10\x00\x00\x00\x00\x03\x00\x19\xac\x01=\xdd\xac\x01}\xee\xc0\xa82f\x00\x03\x00\x07\x00\x00\x00\x01\x00\x00\x00(gz:\xc4gz:\xc4\x00\x00\xdc\xbb\xac\x01\x01\xd3\x10\x00\x00\x00\x00\x04\x00\x1b\xac\x0f(\xd1\xac\x01\xcc\xa5\xc0\xa82\x06\x00\x04\x00\x1b\x00\x00\x00\x01\x00\x00\x05\xdcgz:\xd8gz:\xd8\xc5s\x17o\xac\x19\x06#\x18\x00\x00\x00\x00\x03\x00\x07\xac\n\x85[\xc0\xa8cn\n\x00\x02\x01\x00\x04\x00\n\x00\x00\x00\x01\x00\x00\x05\xdcgz:\xe4gz:\xe4\xbfl\x00P\xac\x01\x06\xcf\x10\x00\x00\x00\x00\x04\x00\x07\xac\x010\x1f\xac\x18!E\xc0\xa82f\x00\x03\x00\x07\x00\x00\x00\x01\x00\x00\x05\xdcgz;\x00gz;\x00\x11\x95\x04\xbe\xc0\xa8\x06\xea\x10\x00\x00\x00\x00\x03\x00\n\xac\x010\xb6\xac\x1e\xf4\xaa\xc0\xa82\x06\x00\x03\x00\x1b\x00\x00\x00\x01\x00\x00\x05\xdcgz;4gz;4\x88d\x00\x17\xac\x01\x06\x1f\x10\x00\x00\x00\x00\x04\x00\x1b\xac\x01#_\xac\x1e\xb0\t\xc0\xa82\x06\x00\x03\x00\x1b\x00\x00\x00\x01\x00\x00\x05\xdcgz;Hgz;H\x81S\x00P\xac \x06N\x10\x00\x00\x00\x00\x03\x00\x1b\xac\x01\x04\xd9\xac\x01\x94c\xc0\xa82\x06\x00\x03\x00\x1b\x00\x00\x00\x01\x00\x00\x02(gz;\\gz;\\U\x10\x00P\xac\x01\x06P\x18\x00\x00\x00\x00\x04\x00\x1b\xac\x01<\xae\xac*\xac!\xc0\xa82\x06\x00\x03\x00\x1b\x00\x00\x00\x01\x00\x00\x00\xfagz;\x84gz;\x84\x0c\xe7\x00P\xac\x01\x11\xfd\x10\x00\x00\x00\x00\x04\x00\x1b\xac\x01\x1f\x1f\xac\x17\xedi\xc0\xa82\x02\x00\x03\x00\x19\x00\x00\x00\x01\x00\x00\x05\xdcgz;\x98gz;\x98\xba\x17\x00\x16\xac\x01\x06|\x10\x00\x00\x00\x00\x03\x00\x07"

271 
__ßm∂e_v5
 = 
b
'\x00\x05\x00\x1d\xb5\xfa\xc9\xd0:\x0bAB&Vw\xde\x9bsv1\x00\x01\x00\x00\xac\n\x86\xa6\xac\x01\xaa\xf7\xc0\xa822\x02q\x00i\x00\x00\x00\x01\x00\x00\x02(\xb5\xfa\x81\x14\xb5\xfa\x81\x1452\x00P\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\xac\x01\x91D\xac\x14C\xe4\xc0\xa82\x16\x00i\x02q\x00\x00\x00\x01\x00\x00\x00(\xb5\xfa\x9b\xbd\xb5\xfa\x9b\xbd\x00P\x85\xd7\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\xac\x17\xe2\xd7\xac\x01\x8cV\xc0\xa822\x02q\x00i\x00\x00\x00\x01\x00\x00\x05\xdc\xb5\xfao\xb8\xb5\xfao\xb8v\xe8\x17o\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\xac\x0e\xf2\xe5\xac\x01\x91\xb2\xc0\xa822\x02q\x00i\x00\x00\x00\x01\x00\x00\x00\xfa\xb5\xfa\x81\xee\xb5\xfa\x81\xee\xd0\xeb\x00\x15\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\xac\nCj\xac)\xa7\t\n\x00\x02\x01\x02q\x00\xdb\x00\x00\x00\x01\x00\x00\x02(\xb5\xfa\x85\x92\xb5\xfa\x85\x92\x8c\xb0\x005\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\xac\x01\x96=\xac\x15\x1a\xa8\xc0\xa82\x16\x00i\x02q\x00\x00\x00\x01\x00\x00\x05\xdc\xb5\xfa\x86\xe0\xb5\xfa\x86\xe0\xb4\xe7\x00\xc2\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\xac\x01V\xd1\xac\x01\x86\x15\xc0\xa822\x02q\x00i\x00\x00\x00\x01\x00\x00\x05\xdc\xb5\xfa}:\xb5\xfa}:[Q\x00P\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\xac2\xf1\xb1\xac)\x19\xca\n\x00\x02\x01\x02q\x00\xdb\x00\x00\x00\x01\x00\x00\x05\xdc\xb5\xfa\x83\xc3\xb5\xfa\x83\xc3\x16,\x00\x15\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\xac\x0cA4\xac\x01\x9az\xc0\xa822\x02q\x00i\x00\x00\x00\x01\x00\x00\x05\xdc\xb5\xfa\x8d\xa7\xb5\xfa\x8d\xa7\x173\x00\x15\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\xac\x1e\xd2\x84\xac)\xd8\xd2\n\x00\x02\x01\x02q\x00\xdb\x00\x00\x00\x01\x00\x00\x05\xdc\xb5\xfa\x8e\x97\xb5\xfa\x8e\x977*\x17o\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\xac\x01\x85J\xac \x11\xfc\xc0\xa82\x16\x00i\x02q\x00\x00\x00\x01\x00\x00\x02(\xb5\xfa\x884\xb5\xfa\x884\xf5\xdd\x00\x8f\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\xac\x01\x04\x80\xac<[n\n\x00\x02\x01\x02q\x00\xdb\x00\x00\x00\x01\x00\x00\x05\xdc\xb5\xfa\x9dr\xb5\xfa\x9drs$\x00\x16\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\xac\x01\xb9J\xac"\xc9\xd7\xc0\xa82\x16\x00i\x02q\x00\x00\x00\x01\x00\x00\x00(\xb5\xfa\x90r\xb5\xfa\x90r\x0f\x8d\x00\xc2\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\xac*\xa3\x10\xac\x01\xb4\x19\xc0\xa822\x02q\x00i\x00\x00\x00\x01\x00\x00\x00(\xb5\xfa\x92\x03\xb5\xfa\x92\x03pf\x00\x15\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\xac\x01\xabo\xac\x1e\x7fi\xc0\xa82\x16\x00i\x02q\x00\x00\x00\x01\x00\x00\x05\xdc\xb5\xfa\x93\x7f\xb5\xfa\x93\x7f\x00P\x0b\x98\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\xac\x0c\n\xea\xac\x01\xa1\x15\xc0\xa822\x02q\x00i\x00\x00\x00\x01\x00\x00\x05\xdc\xb5\xfay\xcf\xb5\xfay\xcf[3\x17\xe0\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\xac\x01\xbb\xb3\xac)u\x8c\n\x00\x02\x01\x00i\x00\xdb\x00\x00\x00\x01\x00\x00\x00\xfa\xb5\xfa\x943\xb5\xfa\x943\x00P\x1e\xca\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\xac\x0fJ`\xac\x01\xab\x94\xc0\xa822\x02q\x00i\x00\x00\x00\x01\x00\x00\x02(\xb5\xfa\x87[\xb5\xfa\x87[\x9a\xd6/\xab\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\xac*\x0f\x93\xac\x01\xb8\xa3\xc0\xa822\x02q\x00i\x00\x00\x00\x01\x00\x00\x00(\xb5\xfa\x89\xbb\xb5\xfa\x89\xbbn\xe1\x00P\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\xac\x01\x93\xa1\xac\x16\x80\x0c\xc0\xa82\x16\x00i\x02q\x00\x00\x00\x01\x00\x00\x00(\xb5\xfa\x87&\xb5\xfa\x87&\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\xac\x01\x83Z\xac\x1fR\xcd\xc0\xa82\x16\x00i\x02q\x00\x00\x00\x01\x00\x00\x05\xdc\xb5\xfa\x90\r\xb5\xfa\x90\r\xf7*\x00\x8a\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\xac\x0c\xe0\xad\xac\x01\xa8V\xc0\xa822\x02q\x00i\x00\x00\x00\x01\x00\x00\x05\xdc\xb5\xfa\x9c\xf6\xb5\xfa\x9c\xf6\xe5|\x1a+\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\xac\x1e\xccT\xac<x&\n\x00\x02\x01\x02q\x00\xdb\x00\x00\x00\x01\x00\x00\x05\xdc\xb5\xfa\x80\xea\xb5\xfa\x80\xea\x00\x00\x00\x00\x00\x00/\x00\x00\x00\x00\x00\x00\x00\x00\x00\xac\x01\xbb\x18\xac\x01|z\xc0\xa82\x16\x00i\x02q\x00\x00\x00\x01\x00\x00\x00\xfa\xb5\xfa\x88p\xb5\xfa\x88p\x00P\x0b}\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\xac\x17\x0er\xac\x01\x8f\xdd\xc0\xa822\x02q\x00i\x00\x00\x00\x01\x00\x00\x02(\xb5\xfa\x89\xf7\xb5\xfa\x89\xf7\r\xf7\x00\x8a\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\xac\n\xbb\x04\xac<\xb0\x15\n\x00\x02\x01\x02q\x00\xdb\x00\x00\x00\x01\x00\x00\x05\xdc\xb5\xfa\x90\xa9\xb5\xfa\x90\xa9\x9c\xd0\x00\x8f\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\xac\nz?\xac)\x03\xc8\n\x00\x02\x01\x02q\x00\xdb\x00\x00\x00\x01\x00\x00\x05\xdc\xb5\xfaue\xb5\xfaue\xee\xa6\x00P\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\xac\x01\xb5\x05\xc0\xa8c\x9f\n\x00\x02\x01\x00i\x00\xdb\x00\x00\x00\x01\x00\x00\x05\xdc\xb5\xfa{\xc7\xb5\xfa{\xc7\x00P\x86\xa9\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\xac2\xa5\x1b\xac)0\xbf\n\x00\x02\x01\x02q\x00\xdb\x00\x00\x00\x01\x00\x00\x00\xfa\xb5\xfa\x9bZ\xb5\xfa\x9bZC\xf9\x17\xe0\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00'

274 
def
 
	$ã°_√t_Êow_v1_∑ck
(): 
∑ss


277 
def
 
	$ã°_√t_Êow_v1_u≈ack
():

278 
nf
 = 
	$NëÊow1
(
__ßm∂e_v1
)

279 
as£π
 
	`Àn
(
nf
.
d©a
) == 24

280 #¥öà
	`ª¥
(
nfv1
)

283 
def
 
	$ã°_√t_Êow_v5_∑ck
(): 
∑ss


286 
def
 
	$ã°_√t_Êow_v5_u≈ack
():

287 
nf
 = 
	$NëÊow5
(
__ßm∂e_v5
)

288 
as£π
 
	`Àn
(
nf
.
d©a
) == 29

289 #¥öà
	`ª¥
(
nfv5
)

292 
__«me__
 == '__main__':

293 
	$ã°_√t_Êow_v1_∑ck
()

294 
	$ã°_√t_Êow_v1_u≈ack
()

295 
	$ã°_√t_Êow_v5_∑ck
()

296 
	$ã°_√t_Êow_v5_u≈ack
()

297 
	`¥öt
('Tests Successful...')

	@ntp.py

1 #$Id: 
¡p
.
py
 48 2008-05-27 17:31:15
Z
 
y¨dÀy
 
$


2 #-*- 
codög
: 
utf
-8 -*-

4 
‰om
 
__futuª__
 
imp‹t
 
¥öt_fun˘i⁄


6 
	g‰om
 . 
imp‹t
 
dpkt


7 
	g‰om
 .
dec‹©‹s
 
imp‹t
 
	gdïªˇãd


9 #NTP 
v4


11 #Ló∞
Indiˇt‹
 (
LI
Ë
Codes


12 
	gNO_WARNING
 = 0

13 
LAST_MINUTE_61_SECONDS
 = 1

14 
LAST_MINUTE_59_SECONDS
 = 2

15 
ALARM_CONDITION
 = 3

17 #Modê
Codes


18 
RESERVED
 = 0

19 
SYMMETRIC_ACTIVE
 = 1

20 
SYMMETRIC_PASSIVE
 = 2

21 
CLIENT
 = 3

22 
SERVER
 = 4

23 
BROADCAST
 = 5

24 
CONTROL_MESSAGE
 = 6

25 
PRIVATE
 = 7

28 
˛ass
 
	$NTP
(
dpkt
.
Packë
):

31 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

33 
Aâribuãs
:

34 
__hdr__
: 
Hódî
 
fõlds
 
of
 
NTP
.

35 
TODO
.

38 
__hdr__
 = (

52 @
¥›îty


53 
def
 
	$v
(
£lf
):

54  (
£lf
.
Êags
 >> 3) & 0x7

56 @
v
.
£âî


57 
def
 
	$v
(
£lf
, 
v
):

58 
£lf
.
Êags
 = (£lf.Êag†& ~0x38Ë| ((
v
 & 0x7) << 3)

60 @
¥›îty


61 
def
 
	$li
(
£lf
):

62  (
£lf
.
Êags
 >> 6) & 0x3

64 @
li
.
£âî


65 
def
 
	$li
(
£lf
, 
li
):

66 
£lf
.
Êags
 = (£lf.Êag†& ~0xc0Ë| ((
li
 & 0x3) << 6)

68 @
¥›îty


69 
def
 
	$mode
(
£lf
):

70  
£lf
.
Êags
 & 0x7

72 @
mode
.
£âî


73 
def
 
	$mode
(
£lf
, 
mode
):

74 
£lf
.
Êags
 = (£lf.Êag†& ~0x7Ë| (
mode
 & 0x7)

77 
__s
 = 
b
'\x24\x02\x04\xef\x00\x00\x00\x84\x00\x00\x33\x27\xc1\x02\x04\x02\xc8\x90\xec\x11\x22\xae\x07\xe5\xc8\x90\xf9\xd9\xc0\x7e\x8c\xcd\xc8\x90\xf9\xd9\xda\xc5\xb0\x78\xc8\x90\xf9\xd9\xda\xc6\x8a\x93'

80 
def
 
	$ã°_¡p_∑ck
():

81 
n
 = 
	$NTP
(
__s
)

82 
	`as£π
 (
__s
 =
	$byãs
(
n
))

85 
def
 
	$ã°_¡p_u≈ack
():

86 
n
 = 
	$NTP
(
__s
)

87 
	$as£π
 (
n
.
li
 =
NO_WARNING
)

88 
	$as£π
 (
n
.
v
 == 4)

89 
	$as£π
 (
n
.
mode
 =
SERVER
)

90 
	$as£π
 (
n
.
°øtum
 == 2)

91 
	`as£π
 (
n
.
id
 =
b
'\xc1\x02\x04\x02')

92 #ã° 
gë
/
£t
 
fun˘i⁄s


93 
n
.
li
 = 
ALARM_CONDITION


94 
n
.
v
 = 3

95 
n
.
mode
 = 
CLIENT


96 
	$as£π
 (
n
.
li
 =
ALARM_CONDITION
)

97 
	$as£π
 (
n
.
v
 == 3)

98 
	$as£π
 (
n
.
mode
 =
CLIENT
)

100 
__«me__
 == '__main__':

101 
	$ã°_¡p_∑ck
()

102 
	$ã°_¡p_u≈ack
()

103 
	`¥öt
('Tests Successful...')

	@ospf.py

1 #$Id: 
o•f
.
py
 23 2006-11-08 15:45:33
Z
 
dugs⁄g
 
$


2 #-*- 
codög
: 
utf
-8 -*-

4 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


6 
	g‰om
 . 
imp‹t
 
dpkt


8 
	gAUTH_NONE
 = 0

9 
AUTH_PASSWORD
 = 1

10 
AUTH_CRYPTO
 = 2

13 
˛ass
 
	$OSPF
(
dpkt
.
Packë
):

16 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

18 
Aâribuãs
:

19 
__hdr__
: 
Hódî
 
fõlds
 
of
 
OSPF
.

20 
TODO
.

23 
__hdr__
 = (

34 
def
 
	$__byãs__
(
£lf
):

35 
nŸ
 
£lf
.
sum
:

36 
£lf
.
sum
 = 
dpkt
.
	`ö_cksum
(dpkt.
Packë
.
	$__byãs__
(
£lf
))

37  
dpkt
.
Packë
.
	`__byãs__
(
£lf
)

	@pcap.py

1 #$Id: 
pˇp
.
py
 77 2011-01-06 15:59:38
Z
 
dugs⁄g
 
$


2 #-*- 
codög
: 
utf
-8 -*-

4 
‰om
 
__futuª__
 
imp‹t
 
¥öt_fun˘i⁄


5 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


7 
imp‹t
 
sys


8 
imp‹t
 
time


9 
‰om
 
decimÆ
 
imp‹t
 
DecimÆ


11 
	g‰om
 . 
imp‹t
 
dpkt


13 
	gTCPDUMP_MAGIC
 = 0xa1b2c3d4

14 
TCPDUMP_MAGIC_NANO
 = 0xa1b23c4d

15 
PMUDPCT_MAGIC
 = 0xd4c3b2a1

16 
PMUDPCT_MAGIC_NANO
 = 0x4d3cb2a1

18 
PCAP_VERSION_MAJOR
 = 2

19 
PCAP_VERSION_MINOR
 = 4

21 #£ê
hâp
:

22 
DLT_NULL
 = 0

23 
DLT_EN10MB
 = 1

24 
DLT_EN3MB
 = 2

25 
DLT_AX25
 = 3

26 
DLT_PRONET
 = 4

27 
DLT_CHAOS
 = 5

28 
DLT_IEEE802
 = 6

29 
DLT_ARCNET
 = 7

30 
DLT_SLIP
 = 8

31 
DLT_PPP
 = 9

32 
DLT_FDDI
 = 10

33 
DLT_PFSYNC
 = 18

34 
DLT_PPP_SERIAL
 = 50

35 
DLT_PPP_ETHER
 = 51

36 
DLT_ATM_RFC1483
 = 100

37 
DLT_RAW
 = 101

38 
DLT_C_HDLC
 = 104

39 
DLT_IEEE802_11
 = 105

40 
DLT_FRELAY
 = 107

41 
DLT_LOOP
 = 108

42 
DLT_LINUX_SLL
 = 113

43 
DLT_LTALK
 = 114

44 
DLT_PFLOG
 = 117

45 
DLT_PRISM_HEADER
 = 119

46 
DLT_IP_OVER_FC
 = 122

47 
DLT_SUNATM
 = 123

48 
DLT_IEEE802_11_RADIO
 = 127

49 
DLT_ARCNET_LINUX
 = 129

50 
DLT_APPLE_IP_OVER_IEEE1394
 = 138

51 
DLT_MTP2_WITH_PHDR
 = 139

52 
DLT_MTP2
 = 140

53 
DLT_MTP3
 = 141

54 
DLT_SCCP
 = 142

55 
DLT_DOCSIS
 = 143

56 
DLT_LINUX_IRDA
 = 144

57 
DLT_USER0
 = 147

58 
DLT_USER1
 = 148

59 
DLT_USER2
 = 149

60 
DLT_USER3
 = 150

61 
DLT_USER4
 = 151

62 
DLT_USER5
 = 152

63 
DLT_USER6
 = 153

64 
DLT_USER7
 = 154

65 
DLT_USER8
 = 155

66 
DLT_USER9
 = 156

67 
DLT_USER10
 = 157

68 
DLT_USER11
 = 158

69 
DLT_USER12
 = 159

70 
DLT_USER13
 = 160

71 
DLT_USER14
 = 161

72 
DLT_USER15
 = 162

73 
DLT_IEEE802_11_RADIO_AVS
 = 163

74 
DLT_BACNET_MS_TP
 = 165

75 
DLT_PPP_PPPD
 = 166

76 
DLT_GPRS_LLC
 = 169

77 
DLT_GPF_T
 = 170

78 
DLT_GPF_F
 = 171

79 
DLT_LINUX_LAPD
 = 177

80 
DLT_BLUETOOTH_HCI_H4
 = 187

81 
DLT_USB_LINUX
 = 189

82 
DLT_PPI
 = 192

83 
DLT_IEEE802_15_4
 = 195

84 
DLT_SITA
 = 196

85 
DLT_ERF
 = 197

86 
DLT_BLUETOOTH_HCI_H4_WITH_PHDR
 = 201

87 
DLT_AX25_KISS
 = 202

88 
DLT_LAPD
 = 203

89 
DLT_PPP_WITH_DIR
 = 204

90 
DLT_C_HDLC_WITH_DIR
 = 205

91 
DLT_FRELAY_WITH_DIR
 = 206

92 
DLT_IPMB_LINUX
 = 209

93 
DLT_IEEE802_15_4_NONASK_PHY
 = 215

94 
DLT_USB_LINUX_MMAPPED
 = 220

95 
DLT_FC_2
 = 224

96 
DLT_FC_2_WITH_FRAME_DELIMS
 = 225

97 
DLT_IPNET
 = 226

98 
DLT_CAN_SOCKETCAN
 = 227

99 
DLT_IPV4
 = 228

100 
DLT_IPV6
 = 229

101 
DLT_IEEE802_15_4_NOFCS
 = 230

102 
DLT_DBUS
 = 231

103 
DLT_DVB_CI
 = 235

104 
DLT_MUX27010
 = 236

105 
DLT_STANAG_5066_D_PDU
 = 237

106 
DLT_NFLOG
 = 239

107 
DLT_NETANALYZER
 = 240

108 
DLT_NETANALYZER_TRANSPARENT
 = 241

109 
DLT_IPOIB
 = 242

110 
DLT_MPEG_2_TS
 = 243

111 
DLT_NG40
 = 244

112 
DLT_NFC_LLCP
 = 245

113 
DLT_INFINIBAND
 = 247

114 
DLT_SCTP
 = 248

115 
DLT_USBPCAP
 = 249

116 
DLT_RTAC_SERIAL
 = 250

117 
DLT_BLUETOOTH_LE_LL
 = 251

118 
DLT_NETLINK
 = 253

119 
DLT_BLUETOOTH_LINUX_MONITOR
 = 253

120 
DLT_BLUETOOTH_BREDR_BB
 = 255

121 
DLT_BLUETOOTH_LE_LL_WITH_PHDR
 = 256

122 
DLT_PROFIBUS_DL
 = 257

123 
DLT_PKTAP
 = 258

124 
DLT_EPON
 = 259

125 
DLT_IPMI_HPM_2
 = 260

126 
DLT_ZWAVE_R1_R2
 = 261

127 
DLT_ZWAVE_R3
 = 262

128 
DLT_WATTSTOPPER_DLM
 = 263

129 
DLT_ISO_14443
 = 264

131 
sys
.
∂©f‹m
.
föd
('openbsd') != -1:

132 
DLT_LOOP
 = 12

133 
DLT_RAW
 = 14

135 
DLT_LOOP
 = 108

136 
DLT_RAW
 = 12

138 
d…off
 = {
DLT_NULL
: 4, 
DLT_EN10MB
: 14, 
DLT_IEEE802
: 22, 
DLT_ARCNET
: 6,

139 
DLT_SLIP
: 16, 
DLT_PPP
: 4, 
DLT_FDDI
: 21, 
DLT_PFLOG
: 48, 
DLT_PFSYNC
: 4,

140 
DLT_LOOP
: 4, 
DLT_LINUX_SLL
: 16}

143 
˛ass
 
	$PktHdr
(
dpkt
.
Packë
):

146 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

148 
Aâribuãs
:

149 
__hdr__
: 
Hódî
 
fõlds
 
of
 
pˇp
 
hódî
.

150 
TODO
.

152 
__hdr__
 = (

160 
˛ass
 
	$LEPktHdr
(
PktHdr
):

161 
__byã_‹dî__
 = '<'

164 
˛ass
 
	$FûeHdr
(
dpkt
.
Packë
):

167 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

169 
Aâribuãs
:

170 
__hdr__
: 
Hódî
 
fõlds
 
of
 
pˇp
 
fûe
 
hódî
.

171 
TODO
.

174 
__hdr__
 = (

175 ('magic', 'I', 
TCPDUMP_MAGIC
),

176 ('v_maj‹', 'H', 
PCAP_VERSION_MAJOR
),

177 ('v_mö‹', 'H', 
PCAP_VERSION_MINOR
),

185 
˛ass
 
	$LEFûeHdr
(
FûeHdr
):

186 
__byã_‹dî__
 = '<'

189 
˛ass
 
	$Wrôî
(
obje˘
):

192 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

194 
Aâribuãs
:

195 
__hdr__
: 
Hódî
 
fõlds
 
of
 
sim∂e
 
pˇp
 
dumpfûe
 
wrôî
.

196 
TODO
.

199 
def
 
	$__öô__
(
£lf
, 
fûeobj
, 
¢≠Àn
=1500, 
lökty≥
=
DLT_EN10MB
, 
«no
=
FÆ£
):

200 
£lf
.
__f
 = 
fûeobj


201 
£lf
.
_¥ecisi⁄
 = 9 
«no
 6

202 
magic
 = 
TCPDUMP_MAGIC_NANO
 
«no
 
TCPDUMP_MAGIC


203 
sys
.
byã‹dî
 == 'little':

204 
fh
 = 
	$LEFûeHdr
(
¢≠Àn
=¢≠Àn, 
lökty≥
ˆökty≥, 
magic
=magic)

206 
fh
 = 
	$FûeHdr
(
¢≠Àn
=¢≠Àn, 
lökty≥
ˆökty≥, 
magic
=magic)

207 
£lf
.
__f
.
	`wrôe
(
	$byãs
(
fh
))

209 
def
 
	$wrôïkt
(
£lf
, 
pkt
, 
ts
=
N⁄e
):

210 
ts
 
is
 
N⁄e
:

211 
ts
 = 
time
.
	$time
()

212 
s
 = 
	$byãs
(
pkt
)

213 
n
 = 
	$Àn
(
s
)

214 
£c
 = (
ts
)

215 
u£c
 = (
	`round
(
ts
 % 1 * 10 ** 
£lf
.
_¥ecisi⁄
))

216 
sys
.
byã‹dî
 == 'little':

217 
ph
 = 
	$LEPktHdr
(
tv_£c
=
£c
,

218 
tv_u£c
=
u£c
,

219 
ˇ∂í
=
n
, 
Àn
=n)

221 
ph
 = 
	$PktHdr
(
tv_£c
=
£c
,

222 
tv_u£c
=
u£c
,

223 
ˇ∂í
=
n
, 
Àn
=n)

224 
£lf
.
__f
.
	`wrôe
(
	$byãs
(
ph
))

225 
£lf
.
__f
.
	$wrôe
(
s
)

227 
def
 
	$˛o£
(
£lf
):

228 
£lf
.
__f
.
	$˛o£
()

231 
˛ass
 
	$Ródî
(
obje˘
):

234 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

236 
Aâribuãs
:

237 
__hdr__
: 
Hódî
 
fõlds
 
of
 
sim∂e
 
pypˇp
-
com∑tibÀ
 
pˇp
 
fûe
 
ªadî
.

238 
TODO
.

241 
def
 
	$__öô__
(
£lf
, 
fûeobj
):

242 
£lf
.
«me
 = 
	`gë©å
(
fûeobj
, '«me', '<%s>' % fûeobj.
__˛ass__
.
__«me__
)

243 
£lf
.
__f
 = 
fûeobj


244 
buf
 = 
£lf
.
__f
.
	$ªad
(
FûeHdr
.
__hdr_Àn__
)

245 
£lf
.
__fh
 = 
	$FûeHdr
(
buf
)

246 
£lf
.
__ph
 = 
PktHdr


247 
£lf
.
__fh
.
magic
 
	$ö
 (
PMUDPCT_MAGIC
, 
PMUDPCT_MAGIC_NANO
):

248 
£lf
.
__fh
 = 
	$LEFûeHdr
(
buf
)

249 
£lf
.
__ph
 = 
LEPktHdr


250 
ñif
 
£lf
.
__fh
.
magic
 
nŸ
 
	$ö
 (
TCPDUMP_MAGIC
, 
TCPDUMP_MAGIC_NANO
):

251 
øi£
 
	`VÆueEº‹
('invalidÅcpdump header')

252 
£lf
.
__fh
.
lökty≥
 
ö
 
d…off
:

253 
£lf
.
dloff
 = 
d…off
[£lf.
__fh
.
lökty≥
]

255 
£lf
.
dloff
 = 0

256 
£lf
.
_divis‹
 = 1E6 £lf.
__fh
.
magic
 
	$ö
 (
TCPDUMP_MAGIC
, 
PMUDPCT_MAGIC
Ë
	`DecimÆ
('1E9')

257 
£lf
.
¢≠Àn
 = sñf.
__fh
.snaplen

258 
£lf
.
fûãr
 = ''

259 
£lf
.
__ôî
 = 
	`ôî
(self)

261 @
¥›îty


262 
def
 
	$fd
(
£lf
):

263  
£lf
.
__f
.
	$fûío
()

265 
def
 
	$fûío
(
£lf
):

266  
£lf
.
fd


268 
def
 
	$d©Æök
(
£lf
):

269  
£lf
.
__fh
.
lökty≥


271 
def
 
	$£tfûãr
(
£lf
, 
vÆue
, 
›timize
=1):

272  
NŸIm∂emíãdEº‹


274 
def
 
	$ªadpkts
(
£lf
):

275  
	$li°
(
£lf
)

277 
def
 
	$__√xt__
(
£lf
):

278  
	$√xt
(
£lf
.
__ôî
)

280 
def
 
	$di•©ch
(
£lf
, 
˙t
, 
ˇŒback
, *
¨gs
):

283 
Rëu∫
 
the
 
numbî
 
of
 
∑ckës
 
¥o˚s£d
, 
‹
 0 
a
 
ßvefûe
.

285 
Argumíts
:

287 
˙t
 -- 
numbî
 
of
 
∑ckës
 
to
 
¥o˚ss
;

288 
‹
 0 
to
 
¥o˚ss
 
Æl
 
∑ckës
 
u¡û
 
EOF


289 
ˇŒback
 -- 
fun˘i⁄
 
	$wôh
 (
time°amp
, 
pkt
, *
¨gs
Ë
¥ŸŸy≥


290 *
¨gs
 -- 
›ti⁄Æ
 
¨gumíts
 
∑s£d
 
to
 
ˇŒback
 
⁄
 
executi⁄


292 
¥o˚s£d
 = 0

293 
˙t
 > 0:

294 
_
 
ö
 
	$ønge
(
˙t
):

295 
åy
:

296 
ts
, 
pkt
 = 
	`√xt
(
	$ôî
(
£lf
))

297 
ex˚±
 
St›Iãøti⁄
:

299 
	$ˇŒback
(
ts
, 
pkt
, *
¨gs
)

300 
¥o˚s£d
 += 1

302 
ts
, 
pkt
 
ö
 
£lf
:

303 
	$ˇŒback
(
ts
, 
pkt
, *
¨gs
)

304 
¥o˚s£d
 += 1

305  
¥o˚s£d


307 
def
 
	$lo›
(
£lf
, 
ˇŒback
, *
¨gs
):

308 
£lf
.
	$di•©ch
(0, 
ˇŒback
, *
¨gs
)

310 
def
 
	$__ôî__
(
£lf
):

312 
buf
 = 
£lf
.
__f
.
	$ªad
(
PktHdr
.
__hdr_Àn__
)

313 
nŸ
 
buf
:

315 
hdr
 = 
£lf
.
	$__ph
(
buf
)

316 
buf
 = 
£lf
.
__f
.
	$ªad
(
hdr
.
ˇ∂í
)

317 
	`yõld
 (
hdr
.
tv_£c
 + (hdr.
tv_u£c
 / 
£lf
.
_divis‹
), 
buf
)

320 
def
 
	$ã°_pˇp_ídün
():

321 
be
 = 
b
'\xa1\xb2\xc3\xd4\x00\x02\x00\x04\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x60\x00\x00\x00\x01'

322 
À
 = 
b
'\xd4\xc3\xb2\xa1\x02\x00\x04\x00\x00\x00\x00\x00\x00\x00\x00\x00\x60\x00\x00\x00\x01\x00\x00\x00'

323 
befh
 = 
	$FûeHdr
(
be
)

324 
Àfh
 = 
	$LEFûeHdr
(
À
)

325 
	$as£π
 (
befh
.
lökty≥
 =
Àfh
.linktype)

328 
def
 
	$ã°_ªadî
():

329 
d©a
 = ( #fuŒ 
libpˇp
 
fûe
 
wôh
 
⁄e
 
∑ckë


330 
b
'\xd4\xc3\xb2\xa1\x02\x00\x04\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\x00\x00\x01\x00\x00\x00'

331 
b
'\xb2\x67\x4a\x42\xae\x91\x07\x00\x46\x00\x00\x00\x46\x00\x00\x00\x00\xc0\x9f\x32\x41\x8c\x00\xe0'

332 
b
'\x18\xb1\x0c\xad\x08\x00\x45\x00\x00\x38\x00\x00\x40\x00\x40\x11\x65\x47\xc0\xa8\xaa\x08\xc0\xa8'

333 
b
'\xaa\x14\x80\x1b\x00\x35\x00\x24\x85\xed'

336 #--- 
ByãsIO
 
ã°s
 ---

337 
‰om
 .
com∑t
 
imp‹t
 
ByãsIO


340 
fobj
 = 
	$ByãsIO
(
d©a
)

341 
ªadî
 = 
	$Ródî
(
fobj
)

342 
as£π
 
ªadî
.
«me
 == '<BytesIO>'

343 
_
, 
buf1
 = 
	`√xt
(
	$ôî
(
ªadî
))

344 
as£π
 
buf1
 =
d©a
[
FûeHdr
.
__hdr_Àn__
 + 
PktHdr
.__hdr_len__:]

346 #--- 
	`di•©ch
(Ë
ã°s
 ---

348 #ã° 
cou¡
 = 0

349 
fobj
.
	$£ek
(0)

350 
ªadî
 = 
	$Ródî
(
fobj
)

351 
as£π
 
ªadî
.
	`di•©ch
(0, 
œmbda
 
ts
, 
pkt
: 
N⁄e
) == 1

353 #ã° 
cou¡
 > 0

354 
fobj
.
	$£ek
(0)

355 
ªadî
 = 
	$Ródî
(
fobj
)

356 
as£π
 
ªadî
.
	`di•©ch
(4, 
œmbda
 
ts
, 
pkt
: 
N⁄e
) == 1

358 #ã° 
ôî©ive
 
di•©ch


359 
fobj
.
	$£ek
(0)

360 
ªadî
 = 
	$Ródî
(
fobj
)

361 
as£π
 
ªadî
.
	`di•©ch
(1, 
œmbda
 
ts
, 
pkt
: 
N⁄e
) == 1

362 
as£π
 
ªadî
.
	`di•©ch
(1, 
œmbda
 
ts
, 
pkt
: 
N⁄e
) == 0

365 
def
 
	$ã°_wrôî_¥ecisi⁄
():

366 
d©a
 = 
b
'foo'

367 
‰om
 .
com∑t
 
imp‹t
 
ByãsIO


369 #deÁu… 
¥ecisi⁄


370 
fobj
 = 
	$ByãsIO
()

371 
wrôî
 = 
	$Wrôî
(
fobj
)

372 
wrôî
.
	$wrôïkt
(
d©a
, 
ts
=1454725786.526401)

373 
fobj
.
	$Êush
()

374 
fobj
.
	$£ek
(0)

376 
ªadî
 = 
	$Ródî
(
fobj
)

377 
ts
, 
buf1
 = 
	`√xt
(
	$ôî
(
ªadî
))

378 
as£π
 
ts
 == 1454725786.526401

379 
as£π
 
buf1
 =
b
'foo'

381 #«nÿ
¥ecisi⁄


382 
‰om
 
decimÆ
 
imp‹t
 
DecimÆ


384 
fobj
 = 
	$ByãsIO
()

385 
wrôî
 = 
	$Wrôî
(
fobj
, 
«no
=
True
)

386 
wrôî
.
	`wrôïkt
(
d©a
, 
ts
=
	`DecimÆ
('1454725786.010203045'))

387 
fobj
.
	$Êush
()

388 
fobj
.
	$£ek
(0)

390 
ªadî
 = 
	$Ródî
(
fobj
)

391 
ts
, 
buf1
 = 
	`√xt
(
	$ôî
(
ªadî
))

392 
as£π
 
ts
 =
	`DecimÆ
('1454725786.010203045')

393 
as£π
 
buf1
 =
b
'foo'

396 
__«me__
 == '__main__':

397 
	$ã°_pˇp_ídün
()

398 
	$ã°_ªadî
()

399 
	$ã°_wrôî_¥ecisi⁄
()

401 
	`¥öt
('Tests Successful...')

	@pcapng.py

2 #S≥c: 
hâps
:

4 #pylöt: 
dißbÀ
=
no
-
membî


5 #pylöt: 
dißbÀ
=
©åibuã
-
deföed
-
outside
-
öô


6 
‰om
 
__futuª__
 
imp‹t
 
¥öt_fun˘i⁄


7 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


9 
‰om
 
imp‹t
 
∑ck
 
as
 
	g°ru˘_∑ck
, 
u≈ack
á†
°ru˘_u≈ack


10 
‰om
 
time
 
imp‹t
Åime

11 
imp‹t
 
sys


13 
	g‰om
 . 
imp‹t
 
dpkt


14 
	g‰om
 .
com∑t
 
imp‹t
 
ByãsIO


16 
	gBYTE_ORDER_MAGIC
 = 0x1A2B3C4D

17 
BYTE_ORDER_MAGIC_LE
 = 0x4D3C2B1A

19 
PCAPNG_VERSION_MAJOR
 = 1

20 
PCAPNG_VERSION_MINOR
 = 0

22 #Block 
ty≥s


23 
PCAPNG_BT_IDB
 = 0x00000001 #I¡îÁ˚ 
Des¸ùti⁄
 
Block


24 
PCAPNG_BT_PB
 = 0x00000002 #Packë 
	$Block
 (
dïªˇãd
)

25 
PCAPNG_BT_SPB
 = 0x00000003 #Sim∂ê
Packë
 
Block


26 
PCAPNG_BT_EPB
 = 0x00000006 #Enh™˚d 
Packë
 
Block


27 
PCAPNG_BT_SHB
 = 0x0A0D0D0A #Se˘i⁄ 
Hódî
 
Block


30 
PCAPNG_OPT_ENDOFOPT
 = 0 #íd 
of
 
›ti⁄s


31 
PCAPNG_OPT_COMMENT
 = 1 #comment

33 #SHB 
›ti⁄s


34 
PCAPNG_OPT_SHB_HARDWARE
 = 2 #des¸ùti⁄ 
of
 
the
 
h¨dw¨e


35 
PCAPNG_OPT_SHB_OS
 = 3 #«mê
of
 
the
 
›î©ög
 
sy°em


36 
PCAPNG_OPT_SHB_USERAPPL
 = 4 #«mê
of
 
the
 
≠∂iˇti⁄


38 #IDB 
›ti⁄s


39 
PCAPNG_OPT_IF_NAME
 = 2 #öãrÁ˚ 
«me


40 
PCAPNG_OPT_IF_DESCRIPTION
 = 3 #öãrÁ˚ 
des¸ùti⁄


41 
PCAPNG_OPT_IF_IPV4ADDR
 = 4 #IPv4 
√tw‹k
 
addªss
 
™d
 
√tmask
 
the
 
öãrÁ˚


42 
PCAPNG_OPT_IF_IPV6ADDR
 = 5 #IPv6 
√tw‹k
 
addªss
 
™d
 
¥efix
 
Àngth
 
the
 
öãrÁ˚


43 
PCAPNG_OPT_IF_MACADDR
 = 6 #öãrÁ˚ 
h¨dw¨e
 
MAC
 
addªss


44 
PCAPNG_OPT_IF_EUIADDR
 = 7 #öãrÁ˚ 
h¨dw¨e
 
EUI
 
addªss


45 
PCAPNG_OPT_IF_SPEED
 = 8 #öãrÁ˚ 
•ìd
 
ö
 
bôs
/
s


46 
PCAPNG_OPT_IF_TSRESOL
 = 9 #time°am∞
ªsﬁuti⁄


47 
PCAPNG_OPT_IF_TZONE
 = 10 #timê
z⁄e


48 
PCAPNG_OPT_IF_FILTER
 = 11 #ˇ±uª 
fûãr


49 
PCAPNG_OPT_IF_OS
 = 12 #›î©ög 
sy°em


50 
PCAPNG_OPT_IF_FCSLEN
 = 13 #Àngth 
of
 
the
 
Føme
 
Check
 
Sequí˚
 
ö
 
bôs


51 
PCAPNG_OPT_IF_TSOFFSET
 = 14 #off£à(
ö
 
£c⁄ds
Ë
th©
 
mu°
 
be
 
added
 
to
 
∑ckë
 
time°amp


53 #<
c›õd
 
‰om
 
pˇp
.
py
>

54 
DLT_NULL
 = 0

55 
DLT_EN10MB
 = 1

56 
DLT_EN3MB
 = 2

57 
DLT_AX25
 = 3

58 
DLT_PRONET
 = 4

59 
DLT_CHAOS
 = 5

60 
DLT_IEEE802
 = 6

61 
DLT_ARCNET
 = 7

62 
DLT_SLIP
 = 8

63 
DLT_PPP
 = 9

64 
DLT_FDDI
 = 10

65 
DLT_PFSYNC
 = 18

66 
DLT_IEEE802_11
 = 105

67 
DLT_LINUX_SLL
 = 113

68 
DLT_PFLOG
 = 117

69 
DLT_IEEE802_11_RADIO
 = 127

71 
sys
.
∂©f‹m
.
	`föd
('openbsd') != -1:

72 
DLT_LOOP
 = 12

73 
DLT_RAW
 = 14

75 
DLT_LOOP
 = 108

76 
DLT_RAW
 = 12

78 
d…off
 = {
DLT_NULL
: 4, 
DLT_EN10MB
: 14, 
DLT_IEEE802
: 22, 
DLT_ARCNET
: 6,

79 
DLT_SLIP
: 16, 
DLT_PPP
: 4, 
DLT_FDDI
: 21, 
DLT_PFLOG
: 48, 
DLT_PFSYNC
: 4,

80 
DLT_LOOP
: 4, 
DLT_LINUX_SLL
: 16
	}
}

81 #</
c›õd
 
‰om
 
pˇp
.
py
>

84 
def
 
	$_sw≠32b
(
i
):

86  
	`°ru˘_u≈ack
('<I', 
	`°ru˘_∑ck
('>I', 
i
))[0]

89 
def
 
	$_Æign32b
(
i
):

91 
r
 = 
i
 % 4

92  
i
 
nŸ
 
r
 i + 4 -Ñ

95 
def
 
	$_∑dded
(
s
):

97  
	`°ru˘_∑ck
('%ss' % 
	`_Æign32b
(
	`Àn
(
s
)), s)

100 
def
 
	$_∑dÀn
(
s
):

102  
	`_Æign32b
(
	`Àn
(
s
)Ë- 
	$Àn
(
s
)

105 
˛ass
 
	$_Pˇ≤gBlock
(
dpkt
.
Packë
):

109 
__hdr__
 = (

110 ('ty≥', 'I', 0), #block 
ty≥


111 ('Àn', 'I', 12), #block 
tŸÆ
 
Àngth
:ÅŸÆ 
size
 
of
 
this
 
block
, 
ö
 
o˘ës


112 #–
body
, 
v¨übÀ
 
size
 )

113 ('_Àn', 'I', 12), #du∞
of
 
Àn


116 
def
 
	$u≈ack_hdr
(
£lf
, 
buf
):

117 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

119 
def
 
	$u≈ack
(
£lf
, 
buf
):

120 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

121 
£lf
.
Àn
 > 
	$Àn
(
buf
):

122 
øi£
 
dpkt
.
NìdD©a


123 
£lf
.
	$_do_u≈ack_›ti⁄s
(
buf
)

125 
def
 
	$_do_u≈ack_›ti⁄s
(
£lf
, 
buf
, 
oo
=
N⁄e
):

126 
£lf
.
›ts
 = []

127 
£lf
.
d©a
 = ''

128 
oo
 = oÿ
‹
 
£lf
.
__hdr_Àn__
 - 4 #›ti⁄†
off£t


129 
ﬁ
 = 
£lf
.
Àn
 - 
oo
 - 4 #length

131 
›ts_buf
 = 
buf
[
oo
:oÿ+ 
ﬁ
]

132 
›ts_buf
:

133 
›t
 = (
	$Pˇ≤gO±i⁄LE
(
›ts_buf
Ë
£lf
.
__hdr_fmt__
[0] == '<'

134 
	$Pˇ≤gO±i⁄
(
›ts_buf
))

135 
£lf
.
›ts
.
	$≠≥nd
(
›t
)

137 
›ts_buf
 = o±s_buf[
	$Àn
(
›t
):]

138 
›t
.
code
 =
PCAPNG_OPT_ENDOFOPT
:

141 #du∂iˇã 
tŸÆ
 
Àngth
 
fõld


142 
£lf
.
_Àn
 = 
	`°ru˘_u≈ack
(£lf.
__hdr_fmt__
[0] + 'I', 
buf
[-4:])[0]

143 
£lf
.
_Àn
 !£lf.
Àn
:

144 
øi£
 
dpkt
.
	`U≈ackEº‹
('length fields doÇot match')

146 
def
 
	$_do_∑ck_›ti⁄s
(
£lf
):

147 
nŸ
 
	`gë©å
(
£lf
, '›ts', 
N⁄e
):

148  
b
''

149 
£lf
.
›ts
[-1].
code
 !
PCAPNG_OPT_ENDOFOPT
:

150 
øi£
 
dpkt
.
	`PackEº‹
('options mustÉnd with opt_endofopt')

151  
b
''.
	`joö
(
	$byãs
(
o
Ëÿ
ö
 
£lf
.
›ts
)

153 
def
 
	$__byãs__
(
£lf
):

154 
›ts_buf
 = 
£lf
.
	$_do_∑ck_›ti⁄s
()

155 
£lf
.
Àn
 = sñf.
_Àn
 = sñf.
__hdr_Àn__
 + 
	$Àn
(
›ts_buf
)

157 
hdr_buf
 = 
dpkt
.
Packë
.
	$∑ck_hdr
(
£lf
)

158  
hdr_buf
[:-4] + 
›ts_buf
 + hdr_buf[-4:]

160 
def
 
	$__Àn__
(
£lf
):

161 
nŸ
 
	`gë©å
(
£lf
, '›ts', 
N⁄e
):

162  
£lf
.
__hdr_Àn__


164 
›ts_Àn
 = 
	`sum
(
	$Àn
(
o
Ëÿ
ö
 
£lf
.
›ts
)

165  
£lf
.
__hdr_Àn__
 + 
›ts_Àn


168 
˛ass
 
	$Pˇ≤gBlockLE
(
_Pˇ≤gBlock
):

169 
__byã_‹dî__
 = '<'

172 
˛ass
 
	$Pˇ≤gO±i⁄
(
dpkt
.
Packë
):

176 
__hdr__
 = (

177 ('code', 'H', 
PCAPNG_OPT_ENDOFOPT
),

181 
def
 
	$u≈ack
(
£lf
, 
buf
):

182 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

183 
£lf
.
d©a
 = 
buf
[£lf.
__hdr_Àn__
:£lf.__hdr_Àn__ + sñf.
Àn
]

185 #decodê
commít


186 
£lf
.
code
 =
PCAPNG_OPT_COMMENT
:

187 
£lf
.
ãxt
 = sñf.
d©a
.
	`decode
('utf-8')

190 
def
 
	$__byãs__
(
£lf
):

191 #ªtu∫ 
dpkt
.
Packë
.
	`__byãs__
(
£lf
)

192 #ícodê
commít


193 
£lf
.
code
 =
PCAPNG_OPT_COMMENT
:

194 
ãxt
 = 
	`gë©å
(
£lf
, 'ãxt', sñf.
d©a
)

196 
£lf
.
d©a
 = 
ãxt
.
	`ícode
('utf-8'Ë
nŸ
 
	$isö°™˚
(
ãxt
, 
byãs
) text

198 
£lf
.
Àn
 = 
	$Àn
(
£lf
.
d©a
)

199  
dpkt
.
Packë
.
	`∑ck_hdr
(
£lf
Ë+ 
	$_∑dded
(
£lf
.
d©a
)

201 
def
 
	$__Àn__
(
£lf
):

202  
£lf
.
__hdr_Àn__
 + 
	`Àn
(£lf.
d©a
Ë+ 
	$_∑dÀn
(
£lf
.
d©a
)

204 
def
 
	$__ª¥__
(
£lf
):

205 
£lf
.
code
 =
PCAPNG_OPT_ENDOFOPT
:

206  '{0}(›t_ídof›t)'.
	$f‹m©
(
£lf
.
__˛ass__
.
__«me__
)

208  
dpkt
.
Packë
.
	$__ª¥__
(
£lf
)

211 
˛ass
 
	$Pˇ≤gO±i⁄LE
(
Pˇ≤gO±i⁄
):

212 
__byã_‹dî__
 = '<'

215 
˛ass
 
	$Se˘i⁄HódîBlock
(
_Pˇ≤gBlock
):

219 
__hdr__
 = (

220 ('ty≥', 'I', 
PCAPNG_BT_SHB
),

222 ('bom', 'I', 
BYTE_ORDER_MAGIC
),

223 ('v_maj‹', 'H', 
PCAPNG_VERSION_MAJOR
),

224 ('v_mö‹', 'H', 
PCAPNG_VERSION_MINOR
),

225 ('£c_Àn', 'q', -1), #£˘i⁄ 
Àngth
, -1 =áuto

226 #–
›ti⁄s
, 
v¨übÀ
 
size
 )

231 
˛ass
 
	$Se˘i⁄HódîBlockLE
(
Se˘i⁄HódîBlock
):

232 
__byã_‹dî__
 = '<'

235 
˛ass
 
	$I¡îÁ˚Des¸ùti⁄Block
(
_Pˇ≤gBlock
):

239 
__hdr__
 = (

240 ('ty≥', 'I', 
PCAPNG_BT_IDB
),

242 ('lökty≥', 'H', 
DLT_EN10MB
),

245 #–
›ti⁄s
, 
v¨übÀ
 
size
 )

250 
˛ass
 
	$I¡îÁ˚Des¸ùti⁄BlockLE
(
I¡îÁ˚Des¸ùti⁄Block
):

251 
__byã_‹dî__
 = '<'

254 
˛ass
 
	$Enh™˚dPackëBlock
(
_Pˇ≤gBlock
):

258 
__hdr__
 = (

259 ('ty≥', 'I', 
PCAPNG_BT_EPB
),

262 ('ts_high', 'I', 0), #time°am∞
high


263 ('ts_low', 'I', 0), #time°am∞
low


264 ('ˇ∂í', 'I', 0), #ˇ±uªd 
Àn
, 
size
 
of
 
pkt_d©a


265 ('pkt_Àn', 'I', 0), #a˘uÆ 
∑ckë
 
Àn


266 #–
pkt_d©a
, 
v¨übÀ
 
size
 )

267 #–
›ti⁄s
, 
v¨übÀ
 
size
 )

271 
def
 
	$u≈ack
(
£lf
, 
buf
):

272 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

273 
£lf
.
Àn
 > 
	$Àn
(
buf
):

274 
øi£
 
dpkt
.
NìdD©a


276 #∑ckë 
d©a


277 
po
 = 
£lf
.
__hdr_Àn__
 - 4 #off£à
of
 
pkt_d©a


278 
£lf
.
pkt_d©a
 = 
buf
[
po
:pÿ+ sñf.
ˇ∂í
]

280 #skù 
∑ddög
 
bëwìn
 
pkt_d©a
 
™d
 
›ti⁄s


281 
›ts_off£t
 = 
po
 + 
	$_Æign32b
(
£lf
.
ˇ∂í
)

282 
£lf
.
	$_do_u≈ack_›ti⁄s
(
buf
, 
›ts_off£t
)

284 
def
 
	$__byãs__
(
£lf
):

285 
pkt_buf
 = 
£lf
.
pkt_d©a


286 
£lf
.
ˇ∂í
 = sñf.
pkt_Àn
 = 
	$Àn
(
pkt_buf
)

288 
›ts_buf
 = 
£lf
.
	$_do_∑ck_›ti⁄s
()

289 
£lf
.
Àn
 = sñf.
_Àn
 = sñf.
__hdr_Àn__
 + 
	`_Æign32b
(£lf.
ˇ∂í
Ë+ 
	$Àn
(
›ts_buf
)

291 
hdr_buf
 = 
dpkt
.
Packë
.
	$∑ck_hdr
(
£lf
)

292  
hdr_buf
[:-4] + 
	`_∑dded
(
pkt_buf
Ë+ 
›ts_buf
 + hdr_buf[-4:]

294 
def
 
	$__Àn__
(
£lf
):

295 
›ts_Àn
 = 
	`sum
(
	$Àn
(
o
Ëÿ
ö
 
£lf
.
›ts
)

296  
£lf
.
__hdr_Àn__
 + 
	`_Æign32b
(£lf.
ˇ∂í
Ë+ 
›ts_Àn


299 
˛ass
 
	$Enh™˚dPackëBlockLE
(
Enh™˚dPackëBlock
):

300 
__byã_‹dî__
 = '<'

303 
˛ass
 
	$Wrôî
(
obje˘
):

307 
def
 
	$__öô__
(
£lf
, 
fûeobj
, 
¢≠Àn
=1500, 
lökty≥
=
DLT_EN10MB
, 
shb
=
N⁄e
, 
idb
=None):

309 
Cª©e
 
a
 
pˇ≤g
 
dumpfûe
 
wrôî
 
the
 
giví
 
fûeobj
.

311 
shb
 
ˇn
 
be
 
™
 
ö°™˚
 
of
 
	$Se˘i⁄HódîBlock
(
LE
)

312 
idb
 
ˇn
 
be
 
™
 
ö°™˚
 
of
 
	`I¡îÁ˚Des¸ùti⁄Block
(
LE
)

314 
£lf
.
__f
 = 
fûeobj


315 
£lf
.
__À
 = 
sys
.
byã‹dî
 == 'little'

317 
shb
:

318 
£lf
.
	`_vÆid©e_block
('shb', 
shb
, 
Se˘i⁄HódîBlock
)

319 
idb
:

320 
£lf
.
	`_vÆid©e_block
('idb', 
idb
, 
I¡îÁ˚Des¸ùti⁄Block
)

322 
£lf
.
__À
:

323 
shb
 = shb 
‹
 
	$Se˘i⁄HódîBlockLE
()

324 
idb
 = idb 
‹
 
	$I¡îÁ˚Des¸ùti⁄BlockLE
(
¢≠Àn
=¢≠Àn, 
lökty≥
=linktype)

326 
shb
 = shb 
‹
 
	$Se˘i⁄HódîBlock
()

327 
idb
 = idb 
‹
 
	$I¡îÁ˚Des¸ùti⁄Block
(
¢≠Àn
=¢≠Àn, 
lökty≥
=linktype)

329 
£lf
.
__f
.
	`wrôe
(
	$byãs
(
shb
))

330 
£lf
.
__f
.
	`wrôe
(
	$byãs
(
idb
))

332 
def
 
	$_vÆid©e_block
(
£lf
, 
¨g_«me
, 
blk
, 
ex≥˘ed_˛s
):

334 
nŸ
 
	$isö°™˚
(
blk
, 
ex≥˘ed_˛s
):

335 
øi£
 
	`VÆueEº‹
('{0}:Éx≥˘ög cœs†{1}'.
	$f‹m©
(

336 
¨g_«me
, 
ex≥˘ed_˛s
.
__«me__
))

338 
£lf
.
__À
 
™d
 
blk
.
__hdr_fmt__
[0] == '>':

339 
øi£
 
	`VÆueEº‹
('{0}:Éx≥˘ög cœs†{1}LE o¿®lôée-ídü¿sy°em'.
	$f‹m©
(

340 
¨g_«me
, 
ex≥˘ed_˛s
.
__«me__
))

342 
nŸ
 
£lf
.
__À
 
™d
 
blk
.
__hdr_fmt__
[0] == '<':

343 
øi£
 
	`VÆueEº‹
('{0}:Éx≥˘ög cœs†{1} o¿®big-ídü¿sy°em'.
	`f‹m©
(

344 
¨g_«me
, 
ex≥˘ed_˛s
.
__«me__
.
	`ª∂a˚
('LE', '')))

346 
def
 
	$wrôïkt
(
£lf
, 
pkt
, 
ts
=
N⁄e
):

348 
Wrôe
 
a
 
sögÀ
 
∑ckë
 
wôh
 
ôs
 
time°amp
.

350 
pkt
 
ˇn
 
be
 
a
 
buf„r
 
‹
 
™
 
ö°™˚
 
of
 
	$Enh™˚dPackëBlock
(
LE
)

351 
ts
 
is
 
a
 
Unix
 
time°amp
 
ö
 
£c⁄ds
 
sö˚
 
	`Epoch
 (
e
.
g
. 1454725786.99)

353 
	$isö°™˚
(
pkt
, 
Enh™˚dPackëBlock
):

354 
£lf
.
	`_vÆid©e_block
('pkt', 
pkt
, 
Enh™˚dPackëBlock
)

356 
ts
 
is
 
nŸ
 
N⁄e
: #t†
as
 
™
 
¨gumít
 
gës
 
¥e˚dí˚


357 
ts
 = (
	$round
(
ts
 * 1e6))

358 
ñif
 
pkt
.
ts_high
 =pkt.
ts_low
 == 0:

359 
ts
 = (
	`round
(
	`time
() * 1e6))

361 
ts
 
is
 
nŸ
 
N⁄e
:

362 
pkt
.
ts_high
 = 
ts
 >> 32

363 
pkt
.
ts_low
 = 
ts
 & 0xffffffff

365 
£lf
.
__f
.
	`wrôe
(
	$byãs
(
pkt
))

368 #pkà
is
 
a
 
buf„r
 - 
wøp
 
ô
 
öto
 
™
 
EPB


369 
ts
 
is
 
N⁄e
:

370 
ts
 = 
	$time
()

371 
ts
 = (
	$round
(
ts
 * 1e6)Ë#tÿ
mi¸o£c⁄ds


373 
s
 = 
	$byãs
(
pkt
)

374 
n
 = 
	$Àn
(
s
)

376 
kls
 = 
Enh™˚dPackëBlockLE
 
£lf
.
__À
 
Enh™˚dPackëBlock


377 
ïb
 = 
	`kls
(
ts_high
=
ts
 >> 32, 
ts_low
Ò†& 0xffffffff, 
ˇ∂í
=
n
, 
pkt_Àn
Ú, 
pkt_d©a
=
s
)

378 
£lf
.
__f
.
	`wrôe
(
	$byãs
(
ïb
))

380 
def
 
	$˛o£
(
£lf
):

381 
£lf
.
__f
.
	$˛o£
()

384 
˛ass
 
	$Ródî
(
obje˘
):

388 
def
 
	$__öô__
(
£lf
, 
fûeobj
):

389 
£lf
.
«me
 = 
	`gë©å
(
fûeobj
, '«me', '<{0}>'.
	$f‹m©
(
fûeobj
.
__˛ass__
.
__«me__
))

390 
£lf
.
__f
 = 
fûeobj


392 
shb
 = 
	$Se˘i⁄HódîBlock
()

393 
buf
 = 
£lf
.
__f
.
	$ªad
(
shb
.
__hdr_Àn__
)

394 
	`Àn
(
buf
Ë< 
shb
.
__hdr_Àn__
:

395 
øi£
 
	`VÆueEº‹
('invalidÖcapng header')

397 #u≈ack 
ju°
 
the
 
hódî
 
sö˚
 
ídü¬ess
 
is
 
nŸ
 
known


398 
shb
.
	$u≈ack_hdr
(
buf
)

399 
shb
.
ty≥
 !
PCAPNG_BT_SHB
:

400 
øi£
 
	`VÆueEº‹
('invalidÖcapng header:Çotá SHB')

402 #dëîmöê
the
 
c‹ª˘
 
byã
 
‹dî
 
™d
 
ªlﬂd
 
fuŒ
 
SHB


403 
shb
.
bom
 =
BYTE_ORDER_MAGIC_LE
:

404 
£lf
.
__À
 = 
True


405 
buf
 +
£lf
.
__f
.
	`ªad
(
	`_sw≠32b
(
shb
.
Àn
Ë- shb.
__hdr_Àn__
)

406 
shb
 = 
	$Se˘i⁄HódîBlockLE
(
buf
)

407 
ñif
 
shb
.
bom
 =
BYTE_ORDER_MAGIC
:

408 
£lf
.
__À
 = 
FÆ£


409 
buf
 +
£lf
.
__f
.
	`ªad
(
shb
.
Àn
 - shb.
__hdr_Àn__
)

410 
shb
 = 
	$Se˘i⁄HódîBlock
(
buf
)

412 
øi£
 
	`VÆueEº‹
('unknownÉndianness')

414 #check 
this
 
vîsi⁄
 
is
 
suµ‹ãd


415 
shb
.
v_maj‹
 !
PCAPNG_VERSION_MAJOR
:

416 
øi£
 
	`VÆueEº‹
('unknow¿pˇ≤g vîsi⁄ {0}.{1}'.
	$f‹m©
(
shb
.
v_maj‹
, shb.
v_mö‹
,))

418 #look 
a
 
m™d©‹y
 
IDB


419 
idb
 = 
N⁄e


421 
buf
 = 
£lf
.
__f
.
	$ªad
(8)

422 
	`Àn
(
buf
) < 8:

425 
blk_ty≥
, 
blk_Àn
 = 
	`°ru˘_u≈ack
('<II' 
£lf
.
__À
 '>II', 
buf
)

426 
buf
 +
£lf
.
__f
.
	`ªad
(
blk_Àn
 - 8)

428 
blk_ty≥
 =
PCAPNG_BT_IDB
:

429 
idb
 = (
	$I¡îÁ˚Des¸ùti⁄BlockLE
(
buf
Ë
£lf
.
__À


430 
	$I¡îÁ˚Des¸ùti⁄Block
(
buf
))

432 #ju° 
skù
 
Ÿhî
 
blocks


434 
idb
 
is
 
N⁄e
:

435 
øi£
 
	`VÆueEº‹
('IDBÇot found')

437 #£à
time°amp
 
ªsﬁuti⁄
 
™d
 
off£t


438 
£lf
.
_divis‹
 = (1e6) #defaults

439 
£lf
.
_tsoff£t
 = 0

440 
›t
 
ö
 
idb
.
›ts
:

441 
›t
.
code
 =
PCAPNG_OPT_IF_TSRESOL
:

442 #i‡
MSB
=0, 
the
 
ªmaöög
 
bôs
 
is
 
a
 
√g
 
powî
 
of
 10 (
e
.
g
. 6 
móns
 
mi¸o£cs
)

443 #i‡
MSB
=1, 
the
 
ªmaöög
 
bôs
 
is
 
a
 
√g
 
powî
 
of
 2 (
e
.
g
. 10 
móns
 1/1024 o‡
£c⁄d
)

444 
›t_vÆ
 = 
	`°ru˘_u≈ack
('b', 
›t
.
d©a
)[0]

445 
pow_num
 = 2 
›t_vÆ
 & 0b10000000 10

446 
£lf
.
_divis‹
 = (
pow_num
 ** (
›t_vÆ
 & 0b01111111))

448 
ñif
 
›t
.
code
 =
PCAPNG_OPT_IF_TSOFFSET
:

449 #64-
bô
 
th©
 
•ecifõs
 
™
 
	`off£t
 (
ö
 
£c⁄ds
Ëth© 
mu°
 
be
 
added
 
to
 
the


450 #time°am∞
of
 
óch
 
∑ckë


451 
£lf
.
_tsoff£t
 = 
	`°ru˘_u≈ack
('<q' £lf.
__À
 '>q', 
›t
.
d©a
)[0]

453 
idb
.
lökty≥
 
ö
 
d…off
:

454 
£lf
.
dloff
 = 
d…off
[
idb
.
lökty≥
]

456 
£lf
.
dloff
 = 0

458 
£lf
.
idb
 = idb

459 
£lf
.
¢≠Àn
 = 
idb
.snaplen

460 
£lf
.
fûãr
 = ''

461 
£lf
.
__ôî
 = 
	`ôî
(self)

463 @
¥›îty


464 
def
 
	$fd
(
£lf
):

465  
£lf
.
__f
.
	$fûío
()

467 
def
 
	$fûío
(
£lf
):

468  
£lf
.
fd


470 
def
 
	$d©Æök
(
£lf
):

471  
£lf
.
idb
.
lökty≥


473 
def
 
	$£tfûãr
(
£lf
, 
vÆue
, 
›timize
=1):

474  
NŸIm∂emíãdEº‹


476 
def
 
	$ªadpkts
(
£lf
):

477  
	$li°
(
£lf
)

479 
def
 
	$√xt
(
£lf
):

480  
	$√xt
(
£lf
.
__ôî
)

482 
def
 
	$di•©ch
(
£lf
, 
˙t
, 
ˇŒback
, *
¨gs
):

485 
Rëu∫
 
the
 
numbî
 
of
 
∑ckës
 
¥o˚s£d
, 
‹
 0 
a
 
ßvefûe
.

487 
Argumíts
:

489 
˙t
 -- 
numbî
 
of
 
∑ckës
 
to
 
¥o˚ss
;

490 
‹
 0 
to
 
¥o˚ss
 
Æl
 
∑ckës
 
u¡û
 
EOF


491 
ˇŒback
 -- 
fun˘i⁄
 
	$wôh
 (
time°amp
, 
pkt
, *
¨gs
Ë
¥ŸŸy≥


492 *
¨gs
 -- 
›ti⁄Æ
 
¨gumíts
 
∑s£d
 
to
 
ˇŒback
 
⁄
 
executi⁄


494 
¥o˚s£d
 = 0

495 
˙t
 > 0:

496 
_
 
ö
 
	$ønge
(
˙t
):

497 
åy
:

498 
ts
, 
pkt
 = 
	`√xt
(
	$ôî
(
£lf
))

499 
ex˚±
 
St›Iãøti⁄
:

501 
	$ˇŒback
(
ts
, 
pkt
, *
¨gs
)

502 
¥o˚s£d
 += 1

504 
ts
, 
pkt
 
ö
 
£lf
:

505 
	$ˇŒback
(
ts
, 
pkt
, *
¨gs
)

506 
¥o˚s£d
 += 1

507  
¥o˚s£d


509 
def
 
	$lo›
(
£lf
, 
ˇŒback
, *
¨gs
):

510 
£lf
.
	$di•©ch
(0, 
ˇŒback
, *
¨gs
)

512 
def
 
	$__ôî__
(
£lf
):

514 
buf
 = 
£lf
.
__f
.
	$ªad
(8)

515 
	`Àn
(
buf
) < 8:

518 
blk_ty≥
, 
blk_Àn
 = 
	`°ru˘_u≈ack
('<II' 
£lf
.
__À
 '>II', 
buf
)

519 
buf
 +
£lf
.
__f
.
	`ªad
(
blk_Àn
 - 8)

521 
blk_ty≥
 =
PCAPNG_BT_EPB
:

522 
ïb
 = 
	$Enh™˚dPackëBlockLE
(
buf
Ë
£lf
.
__À
 
	$Enh™˚dPackëBlock
(
buf
)

523 
ts
 = 
£lf
.
_tsoff£t
 + (((
ïb
.
ts_high
 << 32Ë|Épb.
ts_low
Ë/ sñf.
_divis‹
)

524 
	$yõld
 (
ts
, 
ïb
.
pkt_d©a
)

526 #ju° 
ign‹e
 
Ÿhî
 
blocks


534 
def
 
	$ã°_shb
():

536 
buf
 = (

537 
b
'\x0a\x0d\x0d\x0a\x58\x00\x00\x00\x4d\x3c\x2b\x1a\x01\x00\x00\x00\xff\xff\xff\xff\xff\xff'

538 
b
'\xff\xff\x04\x00\x31\x00\x54\x53\x68\x61\x72\x6b\x20\x31\x2e\x31\x30\x2e\x30\x72\x63\x32'

539 
b
'\x20\x28\x53\x56\x4e\x20\x52\x65\x76\x20\x34\x39\x35\x32\x36\x20\x66\x72\x6f\x6d\x20\x2f'

540 
b
'\x74\x72\x75\x6e\x6b\x2d\x31\x2e\x31\x30\x29\x00\x00\x00\x00\x00\x00\x00\x58\x00\x00\x00')

542 
›t_buf
 = 
b
'\x04\x00\x31\x00TShark 1.10.0rc2 (SVN Rev 49526 from /trunk-1.10)\x00\x00\x00'

544 #block 
u≈ackög


545 
shb
 = 
	$Se˘i⁄HódîBlockLE
(
buf
)

546 
as£π
 
shb
.
ty≥
 =
PCAPNG_BT_SHB


547 
as£π
 
shb
.
bom
 =
BYTE_ORDER_MAGIC


548 
as£π
 
shb
.
v_maj‹
 == 1

549 
as£π
 
shb
.
v_mö‹
 == 0

550 
as£π
 
shb
.
£c_Àn
 == -1

551 
as£π
 
shb
.
d©a
 == ''

553 #›ti⁄†
u≈ackög


554 
as£π
 
	`Àn
(
shb
.
›ts
) == 2

555 
as£π
 
shb
.
›ts
[0].
code
 =
PCAPNG_OPT_SHB_USERAPPL


556 
as£π
 
shb
.
›ts
[0].
d©a
 =
b
'TShark 1.10.0rc2 (SVN Rev 49526 from /trunk-1.10)'

557 
as£π
 
shb
.
›ts
[0].
Àn
 =
	$Àn
(
shb
.
›ts
[0].
d©a
)

559 
as£π
 
shb
.
›ts
[1].
code
 =
PCAPNG_OPT_ENDOFOPT


560 
as£π
 
shb
.
›ts
[1].
Àn
 == 0

562 #›ti⁄ 
∑ckög


563 
as£π
 
	`°r
(
shb
.
›ts
[0]Ë=
	$°r
(
›t_buf
)

564 
as£π
 
	`Àn
(
shb
.
›ts
[0]Ë=
	$Àn
(
›t_buf
)

565 
as£π
 
	`byãs
(
shb
.
›ts
[1]Ë=
b
'\x00\x00\x00\x00'

567 #block 
∑ckög


568 
as£π
 
	`°r
(
shb
Ë=
	$°r
(
buf
)

569 
as£π
 
	`Àn
(
shb
Ë=
	$Àn
(
buf
)

572 
def
 
	$ã°_idb
():

574 
buf
 = (

575 
b
'\x01\x00\x00\x00\x20\x00\x00\x00\x01\x00\x00\x00\xff\xff\x00\x00\x09\x00\x01\x00\x06\x00'

576 
b
'\x00\x00\x00\x00\x00\x00\x20\x00\x00\x00')

578 #block 
u≈ackög


579 
idb
 = 
	$I¡îÁ˚Des¸ùti⁄BlockLE
(
buf
)

580 
as£π
 
idb
.
ty≥
 =
PCAPNG_BT_IDB


581 
as£π
 
idb
.
lökty≥
 =
DLT_EN10MB


582 
as£π
 
idb
.
¢≠Àn
 == 0xffff

583 
as£π
 
idb
.
d©a
 == ''

585 #›ti⁄†
u≈ackög


586 
as£π
 
	`Àn
(
idb
.
›ts
) == 2

587 
as£π
 
idb
.
›ts
[0].
code
 =
PCAPNG_OPT_IF_TSRESOL


588 
as£π
 
idb
.
›ts
[0].
Àn
 == 1

589 
as£π
 
idb
.
›ts
[0].
d©a
 =
b
'\x06'

591 
as£π
 
idb
.
›ts
[1].
code
 =
PCAPNG_OPT_ENDOFOPT


592 
as£π
 
idb
.
›ts
[1].
Àn
 == 0

594 #›ti⁄ 
∑ckög


595 
as£π
 
	`byãs
(
idb
.
›ts
[0]Ë=
b
'\x09\x00\x01\x00\x06\x00\x00\x00'

596 
as£π
 
	`Àn
(
idb
.
›ts
[0]) == 8

597 
as£π
 
	`byãs
(
idb
.
›ts
[1]Ë=
b
'\x00\x00\x00\x00'

599 #block 
∑ckög


600 
as£π
 
	`°r
(
idb
Ë=
	$°r
(
buf
)

601 
as£π
 
	`Àn
(
idb
Ë=
	$Àn
(
buf
)

604 
def
 
	$ã°_ïb
():

606 
buf
 = (

607 
b
'\x06\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x73\xe6\x04\x00\xbe\x37\xe2\x19\x4a\x00'

608 
b
'\x00\x00\x4a\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x08\x00\x45\x00'

609 
b
'\x00\x3c\x5d\xb3\x40\x00\x40\x06\xdf\x06\x7f\x00\x00\x01\x7f\x00\x00\x01\x98\x34\x11\x4e'

610 
b
'\x95\xcb\x2d\x3a\x00\x00\x00\x00\xa0\x02\xaa\xaa\xfe\x30\x00\x00\x02\x04\xff\xd7\x04\x02'

611 
b
'\x08\x0a\x05\x8f\x70\x89\x00\x00\x00\x00\x01\x03\x03\x07\x00\x00\x01\x00\x0a\x00\xd0\xbf'

612 
b
'\xd0\xb0\xd0\xba\xd0\xb5\xd1\x82\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00')

614 #block 
u≈ackög


615 
ïb
 = 
	$Enh™˚dPackëBlockLE
(
buf
)

616 
as£π
 
ïb
.
ty≥
 =
PCAPNG_BT_EPB


617 
as£π
 
ïb
.
ˇ∂í
 =
	$Àn
(
ïb
.
pkt_d©a
)

618 
as£π
 
ïb
.
pkt_Àn
 =
	$Àn
(
ïb
.
pkt_d©a
)

619 
as£π
 
ïb
.
ˇ∂í
 == 74

620 
as£π
 
ïb
.
ts_high
 == 321139

621 
as£π
 
ïb
.
ts_low
 == 434255806

622 
as£π
 
ïb
.
d©a
 == ''

624 #›ti⁄†
u≈ackög


625 
as£π
 
	`Àn
(
ïb
.
›ts
) == 2

626 
as£π
 
ïb
.
›ts
[0].
code
 =
PCAPNG_OPT_COMMENT


627 
as£π
 
ïb
.
›ts
[0].
ãxt
 =
u
'\u043f\u0430\u043a\u0435\u0442'

629 
as£π
 
ïb
.
›ts
[1].
code
 =
PCAPNG_OPT_ENDOFOPT


630 
as£π
 
ïb
.
›ts
[1].
Àn
 == 0

632 #›ti⁄ 
∑ckög


633 
as£π
 
	`byãs
(
ïb
.
›ts
[0]Ë=
b
'\x01\x00\x0a\x00\xd0\xbf\xd0\xb0\xd0\xba\xd0\xb5\xd1\x82\x00\x00'

634 
as£π
 
	`Àn
(
ïb
.
›ts
[0]) == 16

635 
as£π
 
	`byãs
(
ïb
.
›ts
[1]Ë=
b
'\x00\x00\x00\x00'

637 #block 
∑ckög


638 
as£π
 
	`°r
(
ïb
Ë=
	$°r
(
buf
)

639 
as£π
 
	`Àn
(
ïb
Ë=
	$Àn
(
buf
)

642 
def
 
	$ã°_sim∂e_wrôe_ªad
():

644 
fobj
 = 
	$ByãsIO
()

646 
wrôî
 = 
	$Wrôî
(
fobj
, 
¢≠Àn
=0x2000, 
lökty≥
=
DLT_LINUX_SLL
)

647 
wrôî
.
	`wrôïkt
(
b
'foo', 
ts
=1454725786.526401)

648 
fobj
.
	$Êush
()

649 
fobj
.
	$£ek
(0)

651 
ªadî
 = 
	$Ródî
(
fobj
)

652 
as£π
 
ªadî
.
¢≠Àn
 == 0x2000

653 
as£π
 
ªadî
.
	`d©Æök
(Ë=
DLT_LINUX_SLL


655 
ts
, 
buf1
 = 
	`√xt
(
	$ôî
(
ªadî
))

656 
as£π
 
ts
 == 1454725786.526401

657 
as£π
 
buf1
 =
b
'foo'

659 #ã° 
	`di•©ch
()

660 
fobj
.
	$£ek
(0)

661 
ªadî
 = 
	$Ródî
(
fobj
)

662 
as£π
 
ªadî
.
	`di•©ch
(1, 
œmbda
 
ts
, 
pkt
: 
N⁄e
) == 1

663 
as£π
 
ªadî
.
	`di•©ch
(1, 
œmbda
 
ts
, 
pkt
: 
N⁄e
) == 0

664 
fobj
.
	$˛o£
()

667 
def
 
	$ã°_cu°om_ªad_wrôe
():

669 
buf
 = (

670 
b
'\x0a\x0d\x0d\x0a\x7c\x00\x00\x00\x4d\x3c\x2b\x1a\x01\x00\x00\x00\xff\xff\xff\xff\xff\xff'

671 
b
'\xff\xff\x03\x00\x1e\x00\x36\x34\x2d\x62\x69\x74\x20\x57\x69\x6e\x64\x6f\x77\x73\x20\x38'

672 
b
'\x2e\x31\x2c\x20\x62\x75\x69\x6c\x64\x20\x39\x36\x30\x30\x00\x00\x04\x00\x34\x00\x44\x75'

673 
b
'\x6d\x70\x63\x61\x70\x20\x31\x2e\x31\x32\x2e\x37\x20\x28\x76\x31\x2e\x31\x32\x2e\x37\x2d'

674 
b
'\x30\x2d\x67\x37\x66\x63\x38\x39\x37\x38\x20\x66\x72\x6f\x6d\x20\x6d\x61\x73\x74\x65\x72'

675 
b
'\x2d\x31\x2e\x31\x32\x29\x00\x00\x00\x00\x7c\x00\x00\x00\x01\x00\x00\x00\x7c\x00\x00\x00'

676 
b
'\x01\x00\x00\x00\x00\x00\x04\x00\x02\x00\x32\x00\x5c\x44\x65\x76\x69\x63\x65\x5c\x4e\x50'

677 
b
'\x46\x5f\x7b\x33\x42\x42\x46\x32\x31\x41\x37\x2d\x39\x31\x41\x45\x2d\x34\x44\x44\x42\x2d'

678 
b
'\x41\x42\x32\x43\x2d\x43\x37\x38\x32\x39\x39\x39\x43\x32\x32\x44\x35\x7d\x00\x00\x09\x00'

679 
b
'\x01\x00\x06\x00\x00\x00\x0c\x00\x1e\x00\x36\x34\x2d\x62\x69\x74\x20\x57\x69\x6e\x64\x6f'

680 
b
'\x77\x73\x20\x38\x2e\x31\x2c\x20\x62\x75\x69\x6c\x64\x20\x39\x36\x30\x30\x00\x00\x00\x00'

681 
b
'\x00\x00\x7c\x00\x00\x00\x06\x00\x00\x00\x84\x00\x00\x00\x00\x00\x00\x00\x63\x20\x05\x00'

682 
b
'\xd6\xc4\xab\x0b\x4a\x00\x00\x00\x4a\x00\x00\x00\x08\x00\x27\x96\xcb\x7c\x52\x54\x00\x12'

683 
b
'\x35\x02\x08\x00\x45\x00\x00\x3c\xa4\x40\x00\x00\x1f\x01\x27\xa2\xc0\xa8\x03\x28\x0a\x00'

684 
b
'\x02\x0f\x00\x00\x56\xf0\x00\x01\x00\x6d\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c'

685 
b
'\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x41\x42\x43\x44\x45\x46\x47\x48\x49\x00\x00'

686 
b
'\x01\x00\x0f\x00\x64\x70\x6b\x74\x20\x69\x73\x20\x61\x77\x65\x73\x6f\x6d\x65\x00\x00\x00'

687 
b
'\x00\x00\x84\x00\x00\x00')

689 
fobj
 = 
	$ByãsIO
(
buf
)

691 #ã° 
ªadög


692 
ªadî
 = 
	$Ródî
(
fobj
)

693 
as£π
 
ªadî
.
¢≠Àn
 == 0x40000

694 
as£π
 
ªadî
.
	`d©Æök
(Ë=
DLT_EN10MB


696 
as£π
 
ªadî
.
idb
.
›ts
[0].
d©a
.
	`decode
('utf-8') == '\\Device\\NPF_{3BBF21A7-91AE-4DDB-AB2C-C782999C22D5}'

697 
as£π
 
ªadî
.
idb
.
›ts
[2].
d©a
.
	`decode
('utf-8') == '64-bit Windows 8.1, build 9600'

699 
ts
, 
buf1
 = 
	`√xt
(
	$ôî
(
ªadî
))

700 
as£π
 
ts
 == 1442984653.2108380

701 
as£π
 
	`Àn
(
buf1
) == 74

703 
as£π
 
buf1
.
	`°¨tswôh
(
b
'\x08\x00\x27\x96')

704 
as£π
 
buf1
.
	`ídswôh
(
b
'FGHI')

705 
fobj
.
	$˛o£
()

707 #ã° 
pˇ≤g
 
cu°omized
 
wrôög


708 
shb
 = 
	`Se˘i⁄HódîBlockLE
(
›ts
=[

709 
	`Pˇ≤gO±i⁄LE
(
code
=3, 
d©a
=
b
'64-bit Windows 8.1, build 9600'),

710 
	`Pˇ≤gO±i⁄LE
(
code
=4, 
d©a
=
b
'Dumpcap 1.12.7 (v1.12.7-0-g7fc8978 from master-1.12)'),

711 
	`Pˇ≤gO±i⁄LE
()

713 
idb
 = 
	`I¡îÁ˚Des¸ùti⁄BlockLE
(
¢≠Àn
=0x40000, 
›ts
=[

714 
	`Pˇ≤gO±i⁄LE
(
code
=2, 
d©a
=
b
'\\Device\\NPF_{3BBF21A7-91AE-4DDB-AB2C-C782999C22D5}'),

715 
	`Pˇ≤gO±i⁄LE
(
code
=9, 
d©a
=
b
'\x06'),

716 
	`Pˇ≤gO±i⁄LE
(
code
=12, 
d©a
=
b
'64-bit Windows 8.1, build 9600'),

717 
	`Pˇ≤gO±i⁄LE
()

719 
ïb
 = 
	`Enh™˚dPackëBlockLE
(
›ts
=[

720 
	`Pˇ≤gO±i⁄LE
(
code
=1, 
ãxt
=
b
'dpkt isáwesome'),

721 
	`Pˇ≤gO±i⁄LE
()

722 ], 
pkt_d©a
=(

723 
b
'\x08\x00\x27\x96\xcb\x7c\x52\x54\x00\x12\x35\x02\x08\x00\x45\x00\x00\x3c\xa4\x40\x00\x00'

724 
b
'\x1f\x01\x27\xa2\xc0\xa8\x03\x28\x0a\x00\x02\x0f\x00\x00\x56\xf0\x00\x01\x00\x6d\x41\x42'

725 
b
'\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x41'

726 
b
'\x42\x43\x44\x45\x46\x47\x48\x49'

728 
fobj
 = 
	$ByãsIO
()

729 
wrôî
 = 
	$Wrôî
(
fobj
, 
shb
=shb, 
idb
=idb)

730 
wrôî
.
	$wrôïkt
(
ïb
, 
ts
=1442984653.210838)

731 
as£π
 
fobj
.
	`gëvÆue
(Ë=
buf


732 
fobj
.
	$˛o£
()

734 #ßmê
wôh
 
time°amps
 
deföed
 
öside
 
EPB


735 
ïb
.
ts_high
 = 335971

736 
ïb
.
ts_low
 = 195806422

738 
fobj
 = 
	$ByãsIO
()

739 
wrôî
 = 
	$Wrôî
(
fobj
, 
shb
=shb, 
idb
=idb)

740 
wrôî
.
	$wrôïkt
(
ïb
)

741 
as£π
 
fobj
.
	`gëvÆue
(Ë=
buf


742 
fobj
.
	$˛o£
()

745 
__«me__
 == '__main__':

746 #TODO: 
big
 
ídün
 
unô
 
ã°s
; 
could
 
nŸ
 
föd
 
™y
 
exam∂es
..

748 
	$ã°_shb
()

749 
	$ã°_idb
()

750 
	$ã°_ïb
()

751 
	$ã°_sim∂e_wrôe_ªad
()

752 
	$ã°_cu°om_ªad_wrôe
()

753 
	`ª¥
(
	$Pˇ≤gO±i⁄LE
())

755 
	`¥öt
('Tests Successful...')

	@pim.py

1 #$Id: 
pim
.
py
 23 2006-11-08 15:45:33
Z
 
dugs⁄g
 
$


2 #-*- 
codög
: 
utf
-8 -*-

4 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


6 
	g‰om
 . 
imp‹t
 
dpkt


7 
	g‰om
 .
dec‹©‹s
 
imp‹t
 
dïªˇãd


10 
˛ass
 
	$PIM
(
dpkt
.
Packë
):

13 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

15 
Aâribuãs
:

16 
__hdr__
: 
Hódî
 
fõlds
 
of
 
PIM
.

17 
TODO
.

20 
__hdr__
 = (

26 @
¥›îty


27 
def
 
	$v
(
£lf
):

28  
£lf
.
_v_ty≥
 >> 4

30 @
v
.
£âî


31 
def
 
	$v
(
£lf
, 
v
):

32 
£lf
.
_v_ty≥
 = (
v
 << 4) | (self._v_type & 0xf)

34 @
¥›îty


35 
def
 
	$ty≥
(
£lf
):

36  
£lf
.
_v_ty≥
 & 0xf

38 @
ty≥
.
£âî


39 
def
 
	$ty≥
(
£lf
, 
ty≥
):

40 
£lf
.
_v_ty≥
 = (£lf._v_ty≥ & 0xf0Ë| 
ty≥


42 
def
 
	$__byãs__
(
£lf
):

43 
nŸ
 
£lf
.
sum
:

44 
£lf
.
sum
 = 
dpkt
.
	`ö_cksum
(dpkt.
Packë
.
	$__byãs__
(
£lf
))

45  
dpkt
.
Packë
.
	$__byãs__
(
£lf
)

47 
def
 
	$ã°_pim
():

48 
pimd©a
 = 
	`PIM
(
b
'\x20\x00\x9f\xf4\x00\x01\x00\x02\x00\x69')

49 
as£π
 
pimd©a
.
v
 == 2

50 
as£π
 
pimd©a
.
ty≥
 == 0

52 #ã° 
£âîs


53 
pimd©a
.
v
 = 3

54 
pimd©a
.
ty≥
 = 1

55 
as£π
 
	`byãs
(
pimd©a
Ë=
b
'\x31\x00\x9f\xf4\x00\x01\x00\x02\x00\x69'

	@pmap.py

1 #$Id: 
pm≠
.
py
 23 2006-11-08 15:45:33
Z
 
dugs⁄g
 
$


2 #-*- 
codög
: 
utf
-8 -*-

4 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


6 
	g‰om
 . 
imp‹t
 
dpkt


8 
	gPMAP_PROG
 = 100000

9 
PMAP_PROCDUMP
 = 4

10 
PMAP_VERS
 = 2

13 
˛ass
 
	$Pm≠
(
dpkt
.
Packë
):

16 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

18 
Aâribuãs
:

19 
__hdr__
: 
Hódî
 
fõlds
 
of
 
Pm≠
.

20 
TODO
.

23 
__hdr__
 = (

	@ppp.py

1 #$Id: 
µp
.
py
 65 2010-03-26 02:53:51
Z
 
dugs⁄g
 
$


2 #-*- 
codög
: 
utf
-8 -*-

4 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


6 
imp‹t
 

8 
	g‰om
 . 
imp‹t
 
	gdpkt


10 #XXX - 
föish
 
œãr


13 
	gPPP_IP
 = 0x21 #I¡î√à
PrŸocﬁ


14 
PPP_IP6
 = 0x57 #I¡î√à
PrŸocﬁ
 
v6


16 #PrŸocﬁ 
fõld
 
com¥essi⁄


17 
PFC_BIT
 = 0x01

20 
˛ass
 
	$PPP
(
dpkt
.
Packë
):

21 #NŸe: 
This
 
˛ass
 
is
 
sub˛as£d
 
ö
 
PPPoE


24 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

26 
Aâribuãs
:

27 
__hdr__
: 
Hódî
 
fõlds
 
of
 
PPP
.

28 
TODO
.

31 
__hdr__
 = (

34 ('p', 'B', 
PPP_IP
),

36 
_¥Ÿosw
 = {
	}
}

38 @
˛assmëhod


39 
def
 
	$£t_p
(
˛s
, 
p
, 
pkt˛ass
):

40 
˛s
.
_¥Ÿosw
[
p
] = 
pkt˛ass


42 @
˛assmëhod


43 
def
 
	$gë_p
(
˛s
, 
p
):

44  
˛s
.
_¥Ÿosw
[
p
]

46 
def
 
	$u≈ack
(
£lf
, 
buf
):

47 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

48 
£lf
.
p
 & 
PFC_BIT
 == 0:

49 
åy
:

50 
£lf
.
p
 = .
	`u≈ack
('>H', 
buf
[2:4])[0]

51 
ex˚±
 .
îr‹
:

52 
øi£
 
dpkt
.
NìdD©a


53 
£lf
.
d©a
 = self.data[1:]

54 
åy
:

55 
£lf
.
d©a
 = sñf.
_¥Ÿosw
[£lf.
p
](self.data)

56 
	`£èâr
(
£lf
, sñf.
d©a
.
__˛ass__
.
__«me__
.
	`lowî
(), self.data)

57 
	$ex˚±
 (
KeyEº‹
, .
îr‹
, 
dpkt
.
U≈ackEº‹
):

58 
∑ss


60 
def
 
	$∑ck_hdr
(
£lf
):

61 
åy
:

62 
£lf
.
p
 > 0xff:

63  .
	`∑ck
('>BBH', 
£lf
.
addr
, sñf.
˙ål
, sñf.
p
)

64  
dpkt
.
Packë
.
	$∑ck_hdr
(
£lf
)

65 
ex˚±
 .
îr‹
 
as
 
e
:

66 
øi£
 
dpkt
.
	`PackEº‹
(
	$°r
(
e
))

69 
def
 
	$__lﬂd_¥Ÿos
():

70 
g
 = 
	$globÆs
()

71 
k
, 
v
 
ö
 
g
.
	$ôems
():

72 
k
.
	`°¨tswôh
('PPP_'):

73 
«me
 = 
k
[4:]

74 
mod«me
 = 
«me
.
	$lowî
()

75 
åy
:

76 
mod
 = 
	$__imp‹t__
(
mod«me
, 
g
, 
Àvñ
=1)

77 
PPP
.
	`£t_p
(
v
, 
	$gë©å
(
mod
, 
«me
))

78 
	$ex˚±
 (
Imp‹tEº‹
, 
AâribuãEº‹
):

82 
def
 
	$_mod_öô
():

84 
nŸ
 
PPP
.
_¥Ÿosw
:

85 
	$__lﬂd_¥Ÿos
()

88 
def
 
	$ã°_µp
():

89 #Te° 
¥Ÿocﬁ
 
com¥essi⁄


90 
s
 = 
b
"\xff\x03\x21"

91 
p
 = 
	$PPP
(
s
)

92 
as£π
 
p
.p == 0x21

94 
s
 = 
b
"\xff\x03\x00\x21"

95 
p
 = 
	$PPP
(
s
)

96 
as£π
 
p
.p == 0x21

99 
def
 
	$ã°_µp_sh‹t
():

100 
s
 = 
b
"\xff\x03\x00"

102 
imp‹t
 
pyã°


103 
pyã°
.
	$øi£s
(
dpkt
.
NìdD©a
, 
PPP
, 
s
)

106 
def
 
	$ã°_∑ckög
():

107 
p
 = 
	$PPP
()

108 
as£π
 
p
.
	`∑ck_hdr
(Ë=
b
"\xff\x03\x21"

110 
p
.p = 0xc021 #LCP

111 
as£π
 
p
.
	`∑ck_hdr
(Ë=
b
"\xff\x03\xc0\x21"

114 
__«me__
 == '__main__':

115 #Run†
Æl
 
the
 
ã°
 
assocüãd
 
wôh
 
this
 
˛ass
/
fûe


116 
	`ã°_µp
()

	@pppoe.py

1 #$Id: 
µp€
.
py
 23 2006-11-08 15:45:33
Z
 
dugs⁄g
 
$


2 #-*- 
codög
: 
utf
-8 -*-

4 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


6 
imp‹t
 

7 
imp‹t
 
codecs


9 
	g‰om
 . 
imp‹t
 
dpkt


10 
	g‰om
 . 
imp‹t
 
µp


11 
	g‰om
 .
dec‹©‹s
 
imp‹t
 
	gdïªˇãd


13 #RFC 2516 
codes


14 
	gPPPoE_PADI
 = 0x09

15 
PPPoE_PADO
 = 0x07

16 
PPPoE_PADR
 = 0x19

17 
PPPoE_PADS
 = 0x65

18 
PPPoE_PADT
 = 0xA7

19 
PPPoE_SESSION
 = 0x00

22 
˛ass
 
	$PPPoE
(
dpkt
.
Packë
):

25 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

27 
Aâribuãs
:

28 
__hdr__
: 
Hódî
 
fõlds
 
of
 
PPPoE
.

29 
TODO
.

32 
__hdr__
 = (

36 ('Àn', 'H', 0Ë#∑ylﬂd 
Àngth


39 @
¥›îty


40 
def
 
	$v
(
£lf
):

41  
£lf
.
_v_ty≥
 >> 4

43 @
v
.
£âî


44 
def
 
	$v
(
£lf
, 
v
):

45 
£lf
.
_v_ty≥
 = (
v
 << 4) | (self._v_type & 0xf)

47 @
¥›îty


48 
def
 
	$ty≥
(
£lf
):

49  
£lf
.
_v_ty≥
 & 0xf

51 @
ty≥
.
£âî


52 
def
 
	$ty≥
(
£lf
, 
t
):

53 
£lf
.
_v_ty≥
 = (£lf._v_ty≥ & 0xf0Ë| 
t


55 
def
 
	$u≈ack
(
£lf
, 
buf
):

56 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

57 
åy
:

58 
£lf
.
code
 == 0:

59 #Wê
√ed
 
to
 
u£
 
the
 
µp€
.
PPP
 
hódî
 
hîe
, 
beˇu£
 
PPPoE


61 
£lf
.
d©a
 = sñf.
µp
 = 
	$PPP
(
£lf
.
d©a
)

62 
ex˚±
 
dpkt
.
U≈ackEº‹
:

63 
∑ss


66 
˛ass
 
	$PPP
(
µp
.
PPP
):

67 #Lighà
vîsi⁄
 
¥Ÿocﬁs
 
wôhout
 
the
 
usuÆ
 
íˇpsuœti⁄
, 
PPPoE


68 
__hdr__
 = (

69 #UsuauŒy 
two
-
byãs
, 
but
 
¥Ÿocﬁ
 
com¥essi⁄
 
is
 
nŸ
 
ªcommíded
, 
ô
 i†
suµ‹ãd


70 ('p', 'B', 
µp
.
PPP_IP
),

73 
def
 
	$u≈ack
(
£lf
, 
buf
):

74 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

75 
£lf
.
p
 & 
µp
.
PFC_BIT
 == 0:

76 
åy
:

77 
£lf
.
p
 = .
	`u≈ack
('>H', 
buf
[:2])[0]

78 
ex˚±
 .
îr‹
:

79 
øi£
 
dpkt
.
NìdD©a


80 
£lf
.
d©a
 = self.data[1:]

81 
åy
:

82 
£lf
.
d©a
 = sñf.
_¥Ÿosw
[£lf.
p
](self.data)

83 
	`£èâr
(
£lf
, sñf.
d©a
.
__˛ass__
.
__«me__
.
	`lowî
(), self.data)

84 
	$ex˚±
 (
KeyEº‹
, .
îr‹
, 
dpkt
.
U≈ackEº‹
):

85 
∑ss


87 
def
 
	$∑ck_hdr
(
£lf
):

88 
åy
:

89 #PrŸocﬁ 
com¥essi⁄
 
is
 *
nŸ
* 
	`ªcommíded
 (
RFC2516
), 
but
 
we
 dÿ
ô
 
™yway


90 
£lf
.
p
 > 0xff:

91  .
	`∑ck
('>H', 
£lf
.
p
)

92  
dpkt
.
Packë
.
	$∑ck_hdr
(
£lf
)

93 
ex˚±
 .
îr‹
 
as
 
e
:

94 
øi£
 
dpkt
.
	`PackEº‹
(
	$°r
(
e
))

97 
def
 
	$ã°_µp€_discovîy
():

98 
s
 = ("11070000002801010000010300046413"

101 
s
 = 
codecs
.
	`decode
(s, 'hex')

102 
p
 = 
	$PPPoE
(
s
)

104 
as£π
 
p
.
code
 =
PPPoE_PADO


105 
as£π
 
p
.
v
 == 1

106 
as£π
 
p
.
ty≥
 == 1

108 
s
 = ("11190000002801010000010300046413"

111 
s
 = 
codecs
.
	`decode
(s, 'hex')

112 
p
 = 
	$PPPoE
(
s
)

114 
as£π
 
p
.
code
 =
PPPoE_PADR


116 
as£π
 
p
.
	`∑ck_hdr
(Ë=
s
[:6]

119 
def
 
	$ã°_µp€_£ssi⁄
():

120 
s
 = "11000011000cc0210101000a050605fcd459"

121 
s
 = 
codecs
.
	`decode
(s, 'hex')

122 
p
 = 
	$PPPoE
(
s
)

124 
as£π
 
p
.
code
 =
PPPoE_SESSION


125 
as£π
 
	$isö°™˚
(
p
.
µp
, 
PPP
)

126 
as£π
 
p
.
d©a
.p == 0xc021 #LCP

127 
as£π
 
	`Àn
(
p
.
d©a
.data) == 10

129 
as£π
 
p
.
d©a
.
	`∑ck_hdr
(Ë=
b
"\xc0\x21"

131 
s
 = ("110000110066005760000000003c3a40fc000000000000000000000000000001"

135 
s
 = 
codecs
.
	`decode
(s, 'hex')

136 
p
 = 
	$PPPoE
(
s
)

137 
as£π
 
p
.
code
 =
PPPoE_SESSION


138 
as£π
 
	$isö°™˚
(
p
.
µp
, 
PPP
)

139 
as£π
 
p
.
d©a
.∞=
µp
.
PPP_IP6


140 
as£π
 
p
.
d©a
.data.p == 58 #ICMPv6

142 
as£π
 
p
.
µp
.
	`∑ck_hdr
(Ë=
b
"\x57"

145 
def
 
	$ã°_µp_∑ckög
():

146 
p
 = 
	$PPP
()

147 
as£π
 
p
.
	`∑ck_hdr
(Ë=
b
"\x21"

149 
p
.p = 0xc021 #LCP

150 
as£π
 
p
.
	`∑ck_hdr
(Ë=
b
"\xc0\x21"

153 
def
 
	$ã°_µp_sh‹t
():

154 
imp‹t
 
pyã°


155 
pyã°
.
	`øi£s
(
dpkt
.
NìdD©a
, 
PPP
, 
b
"\x00")

158 #XXX - 
TODO
 
TLVs
, 
ëc
.

	@qq.py

1 #$Id: 
qq
.
py
 48 2008-05-27 17:31:15
Z
 
y¨dÀy
 
$


2 #-*- 
codög
: 
utf
-8 -*-

3 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


5 
	g‰om
 .
dpkt
 
imp‹t
 
	gPackë


9 
	gQQ_HEADER_BASIC_FAMILY
 = 0x02

10 
QQ_HEADER_P2P_FAMILY
 = 0x00

11 
QQ_HEADER_03_FAMILY
 = 0x03

12 
QQ_HEADER_04_FAMILY
 = 0x04

13 
QQ_HEADER_05_FAMILY
 = 0x05

15 
hódî_ty≥_°r
 = [

24 
	gQQ_CMD_LOGOUT
 = 0x0001

25 
QQ_CMD_KEEP_ALIVE
 = 0x0002

26 
QQ_CMD_MODIFY_INFO
 = 0x0004

27 
QQ_CMD_SEARCH_USER
 = 0x0005

28 
QQ_CMD_GET_USER_INFO
 = 0x0006

29 
QQ_CMD_ADD_FRIEND
 = 0x0009

30 
QQ_CMD_DELETE_FRIEND
 = 0x000A

31 
QQ_CMD_ADD_FRIEND_AUTH
 = 0x000B

32 
QQ_CMD_CHANGE_STATUS
 = 0x000D

33 
QQ_CMD_ACK_SYS_MSG
 = 0x0012

34 
QQ_CMD_SEND_IM
 = 0x0016

35 
QQ_CMD_RECV_IM
 = 0x0017

36 
QQ_CMD_REMOVE_SELF
 = 0x001C

37 
QQ_CMD_REQUEST_KEY
 = 0x001D

38 
QQ_CMD_LOGIN
 = 0x0022

39 
QQ_CMD_GET_FRIEND_LIST
 = 0x0026

40 
QQ_CMD_GET_ONLINE_OP
 = 0x0027

41 
QQ_CMD_SEND_SMS
 = 0x002D

42 
QQ_CMD_CLUSTER_CMD
 = 0x0030

43 
QQ_CMD_TEST
 = 0x0031

44 
QQ_CMD_GROUP_DATA_OP
 = 0x003C

45 
QQ_CMD_UPLOAD_GROUP_FRIEND
 = 0x003D

46 
QQ_CMD_FRIEND_DATA_OP
 = 0x003E

47 
QQ_CMD_DOWNLOAD_GROUP_FRIEND
 = 0x0058

48 
QQ_CMD_FRIEND_LEVEL_OP
 = 0x005C

49 
QQ_CMD_PRIVACY_DATA_OP
 = 0x005E

50 
QQ_CMD_CLUSTER_DATA_OP
 = 0x005F

51 
QQ_CMD_ADVANCED_SEARCH
 = 0x0061

52 
QQ_CMD_REQUEST_LOGIN_TOKEN
 = 0x0062

53 
QQ_CMD_USER_PROPERTY_OP
 = 0x0065

54 
QQ_CMD_TEMP_SESSION_OP
 = 0x0066

55 
QQ_CMD_SIGNATURE_OP
 = 0x0067

56 
QQ_CMD_RECV_MSG_SYS
 = 0x0080

57 
QQ_CMD_RECV_MSG_FRIEND_CHANGE_STATUS
 = 0x0081

58 
QQ_CMD_WEATHER_OP
 = 0x00A6

59 
QQ_CMD_ADD_FRIEND_EX
 = 0x00A7

60 
QQ_CMD_AUTHORIZE
 = 0X00A8

61 
QQ_CMD_UNKNOWN
 = 0xFFFF

62 
QQ_SUB_CMD_SEARCH_ME_BY_QQ_ONLY
 = 0x03

63 
QQ_SUB_CMD_SHARE_GEOGRAPHY
 = 0x04

64 
QQ_SUB_CMD_GET_FRIEND_LEVEL
 = 0x02

65 
QQ_SUB_CMD_GET_CLUSTER_ONLINE_MEMBER
 = 0x01

66 
QQ_05_CMD_REQUEST_AGENT
 = 0x0021

67 
QQ_05_CMD_REQUEST_FACE
 = 0x0022

68 
QQ_05_CMD_TRANSFER
 = 0x0023

69 
QQ_05_CMD_REQUEST_BEGIN
 = 0x0026

70 
QQ_CLUSTER_CMD_CREATE_CLUSTER
 = 0x01

71 
QQ_CLUSTER_CMD_MODIFY_MEMBER
 = 0x02

72 
QQ_CLUSTER_CMD_MODIFY_CLUSTER_INFO
 = 0x03

73 
QQ_CLUSTER_CMD_GET_CLUSTER_INFO
 = 0x04

74 
QQ_CLUSTER_CMD_ACTIVATE_CLUSTER
 = 0x05

75 
QQ_CLUSTER_CMD_SEARCH_CLUSTER
 = 0x06

76 
QQ_CLUSTER_CMD_JOIN_CLUSTER
 = 0x07

77 
QQ_CLUSTER_CMD_JOIN_CLUSTER_AUTH
 = 0x08

78 
QQ_CLUSTER_CMD_EXIT_CLUSTER
 = 0x09

79 
QQ_CLUSTER_CMD_SEND_IM
 = 0x0A

80 
QQ_CLUSTER_CMD_GET_ONLINE_MEMBER
 = 0x0B

81 
QQ_CLUSTER_CMD_GET_MEMBER_INFO
 = 0x0C

82 
QQ_CLUSTER_CMD_MODIFY_CARD
 = 0x0E

83 
QQ_CLUSTER_CMD_GET_CARD_BATCH
 = 0x0F

84 
QQ_CLUSTER_CMD_GET_CARD
 = 0x10

85 
QQ_CLUSTER_CMD_COMMIT_ORGANIZATION
 = 0x11

86 
QQ_CLUSTER_CMD_UPDATE_ORGANIZATION
 = 0x12

87 
QQ_CLUSTER_CMD_COMMIT_MEMBER_ORGANIZATION
 = 0x13

88 
QQ_CLUSTER_CMD_GET_VERSION_ID
 = 0x19

89 
QQ_CLUSTER_CMD_SEND_IM_EX
 = 0x1A

90 
QQ_CLUSTER_CMD_SET_ROLE
 = 0x1B

91 
QQ_CLUSTER_CMD_TRANSFER_ROLE
 = 0x1C

92 
QQ_CLUSTER_CMD_CREATE_TEMP
 = 0x30

93 
QQ_CLUSTER_CMD_MODIFY_TEMP_MEMBER
 = 0x31

94 
QQ_CLUSTER_CMD_EXIT_TEMP
 = 0x32

95 
QQ_CLUSTER_CMD_GET_TEMP_INFO
 = 0x33

96 
QQ_CLUSTER_CMD_MODIFY_TEMP_INFO
 = 0x34

97 
QQ_CLUSTER_CMD_SEND_TEMP_IM
 = 0x35

98 
QQ_CLUSTER_CMD_SUB_CLUSTER_OP
 = 0x36

99 
QQ_CLUSTER_CMD_ACTIVATE_TEMP
 = 0x37

101 
QQ_CLUSTER_SUB_CMD_ADD_MEMBER
 = 0x01

102 
QQ_CLUSTER_SUB_CMD_REMOVE_MEMBER
 = 0x02

103 
QQ_CLUSTER_SUB_CMD_GET_SUBJECT_LIST
 = 0x02

104 
QQ_CLUSTER_SUB_CMD_GET_DIALOG_LIST
 = 0x01

106 
QQ_SUB_CMD_GET_ONLINE_FRIEND
 = 0x2

107 
QQ_SUB_CMD_GET_ONLINE_SERVICE
 = 0x3

108 
QQ_SUB_CMD_UPLOAD_GROUP_NAME
 = 0x2

109 
QQ_SUB_CMD_DOWNLOAD_GROUP_NAME
 = 0x1

110 
QQ_SUB_CMD_SEND_TEMP_SESSION_IM
 = 0x01

111 
QQ_SUB_CMD_BATCH_DOWNLOAD_FRIEND_REMARK
 = 0x0

112 
QQ_SUB_CMD_UPLOAD_FRIEND_REMARK
 = 0x1

113 
QQ_SUB_CMD_REMOVE_FRIEND_FROM_LIST
 = 0x2

114 
QQ_SUB_CMD_DOWNLOAD_FRIEND_REMARK
 = 0x3

115 
QQ_SUB_CMD_MODIFY_SIGNATURE
 = 0x01

116 
QQ_SUB_CMD_DELETE_SIGNATURE
 = 0x02

117 
QQ_SUB_CMD_GET_SIGNATURE
 = 0x03

118 
QQ_SUB_CMD_GET_USER_PROPERTY
 = 0x01

119 
QQ_SUB_CMD_GET_WEATHER
 = 0x01

121 
QQ_FILE_CMD_HEART_BEAT
 = 0x0001

122 
QQ_FILE_CMD_HEART_BEAT_ACK
 = 0x0002

123 
QQ_FILE_CMD_TRANSFER_FINISHED
 = 0x0003

124 
QQ_FILE_CMD_FILE_OP
 = 0x0007

125 
QQ_FILE_CMD_FILE_OP_ACK
 = 0x0008

126 
QQ_FILE_CMD_SENDER_SAY_HELLO
 = 0x0031

127 
QQ_FILE_CMD_SENDER_SAY_HELLO_ACK
 = 0x0032

128 
QQ_FILE_CMD_RECEIVER_SAY_HELLO
 = 0x0033

129 
QQ_FILE_CMD_RECEIVER_SAY_HELLO_ACK
 = 0x0034

130 
QQ_FILE_CMD_NOTIFY_IP_ACK
 = 0x003C

131 
QQ_FILE_CMD_PING
 = 0x003D

132 
QQ_FILE_CMD_PONG
 = 0x003E

133 
QQ_FILE_CMD_YES_I_AM_BEHIND_FIREWALL
 = 0x0040

134 
QQ_FILE_CMD_REQUEST_AGENT
 = 0x0001

135 
QQ_FILE_CMD_CHECK_IN
 = 0x0002

136 
QQ_FILE_CMD_FORWARD
 = 0x0003

137 
QQ_FILE_CMD_FORWARD_FINISHED
 = 0x0004

138 
QQ_FILE_CMD_IT_IS_TIME
 = 0x0005

139 
QQ_FILE_CMD_I_AM_READY
 = 0x0006

141 
comm™d_°r
 = {

187 
˛ass
 
	$QQBasicPackë
(
Packë
):

188 
__hdr__
 = (

197 
˛ass
 
	$QQ3Packë
(
Packë
):

198 
__hdr__
 = (

219 
˛ass
 
	$QQ5Packë
(
Packë
):

220 
__hdr__
 = (

	@radiotap.py

1 #-*- 
codög
: 
utf
-8 -*-

3 
‰om
 
__futuª__
 
imp‹t
 
¥öt_fun˘i⁄


4 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


6 
imp‹t
 
sockë


8 
	g‰om
 . 
imp‹t
 
dpkt


9 
	g‰om
 . 
imp‹t
 
õì80211


10 
	g‰om
 .
dec‹©‹s
 
imp‹t
 
	gdïªˇãd


12 #Ref: 
hâp
:

13 #Fõld†
Ref
: 
hâp
:

15 #Pª£¡ 
Êags


16 
	g_TSFT_MASK
 = 0x1000000

17 
_FLAGS_MASK
 = 0x2000000

18 
_RATE_MASK
 = 0x4000000

19 
_CHANNEL_MASK
 = 0x8000000

20 
_FHSS_MASK
 = 0x10000000

21 
_ANT_SIG_MASK
 = 0x20000000

22 
_ANT_NOISE_MASK
 = 0x40000000

23 
_LOCK_QUAL_MASK
 = 0x80000000

24 
_TX_ATTN_MASK
 = 0x10000

25 
_DB_TX_ATTN_MASK
 = 0x20000

26 
_DBM_TX_POWER_MASK
 = 0x40000

27 
_ANTENNA_MASK
 = 0x80000

28 
_DB_ANT_SIG_MASK
 = 0x100000

29 
_DB_ANT_NOISE_MASK
 = 0x200000

30 
_RX_FLAGS_MASK
 = 0x400000

31 
_CHANNELPLUS_MASK
 = 0x200

32 
_EXT_MASK
 = 0x1

34 
_TSFT_SHIFT
 = 24

35 
_FLAGS_SHIFT
 = 25

36 
_RATE_SHIFT
 = 26

37 
_CHANNEL_SHIFT
 = 27

38 
_FHSS_SHIFT
 = 28

39 
_ANT_SIG_SHIFT
 = 29

40 
_ANT_NOISE_SHIFT
 = 30

41 
_LOCK_QUAL_SHIFT
 = 31

42 
_TX_ATTN_SHIFT
 = 16

43 
_DB_TX_ATTN_SHIFT
 = 17

44 
_DBM_TX_POWER_SHIFT
 = 18

45 
_ANTENNA_SHIFT
 = 19

46 
_DB_ANT_SIG_SHIFT
 = 20

47 
_DB_ANT_NOISE_SHIFT
 = 21

48 
_RX_FLAGS_SHIFT
 = 22

49 
_CHANNELPLUS_SHIFT
 = 10

50 
_EXT_SHIFT
 = 0

52 #Fœg†
ñemíts


53 
_FLAGS_SIZE
 = 2

54 
_CFP_FLAG_SHIFT
 = 0

55 
_PREAMBLE_SHIFT
 = 1

56 
_WEP_SHIFT
 = 2

57 
_FRAG_SHIFT
 = 3

58 
_FCS_SHIFT
 = 4

59 
_DATA_PAD_SHIFT
 = 5

60 
_BAD_FCS_SHIFT
 = 6

61 
_SHORT_GI_SHIFT
 = 7

63 #Ch™√»
ty≥


64 
_CHAN_TYPE_SIZE
 = 4

65 
_CHANNEL_TYPE_SHIFT
 = 4

66 
_CCK_SHIFT
 = 5

67 
_OFDM_SHIFT
 = 6

68 
_TWO_GHZ_SHIFT
 = 7

69 
_FIVE_GHZ_SHIFT
 = 8

70 
_PASSIVE_SHIFT
 = 9

71 
_DYN_CCK_OFDM_SHIFT
 = 10

72 
_GFSK_SHIFT
 = 11

73 
_GSM_SHIFT
 = 12

74 
_STATIC_TURBO_SHIFT
 = 13

75 
_HALF_RATE_SHIFT
 = 14

76 
_QUARTER_RATE_SHIFT
 = 15

78 #Fœg†
off£ts
 
™d
 
masks


79 
_FCS_SHIFT
 = 4

80 
_FCS_MASK
 = 0x10

83 
˛ass
 
	$RadiŸ≠
(
dpkt
.
Packë
):

86 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

88 
Aâribuãs
:

89 
__hdr__
: 
Hódî
 
fõlds
 
of
 
RadiŸ≠
.

90 
TODO
.

93 
__hdr__
 = (

100 @
¥›îty


101 
def
 
	$ts·_¥e£¡
(
£lf
):

102  (
£lf
.
¥e£¡_Êags
 & 
_TSFT_MASK
Ë>> 
_TSFT_SHIFT


104 @
ts·_¥e£¡
.
£âî


105 
def
 
	$ts·_¥e£¡
(
£lf
, 
vÆ
):

106 
£lf
.
¥e£¡_Êags
 |
vÆ
 << 
_TSFT_SHIFT


108 @
¥›îty


109 
def
 
	$Êags_¥e£¡
(
£lf
):

110  (
£lf
.
¥e£¡_Êags
 & 
_FLAGS_MASK
Ë>> 
_FLAGS_SHIFT


112 @
Êags_¥e£¡
.
£âî


113 
def
 
	$Êags_¥e£¡
(
£lf
, 
vÆ
):

114 
£lf
.
¥e£¡_Êags
 |
vÆ
 << 
_FLAGS_SHIFT


116 @
¥›îty


117 
def
 
	$øã_¥e£¡
(
£lf
):

118  (
£lf
.
¥e£¡_Êags
 & 
_RATE_MASK
Ë>> 
_RATE_SHIFT


120 @
øã_¥e£¡
.
£âî


121 
def
 
	$øã_¥e£¡
(
£lf
, 
vÆ
):

122 
£lf
.
¥e£¡_Êags
 |
vÆ
 << 
_RATE_SHIFT


124 @
¥›îty


125 
def
 
	$ch™√l_¥e£¡
(
£lf
):

126  (
£lf
.
¥e£¡_Êags
 & 
_CHANNEL_MASK
Ë>> 
_CHANNEL_SHIFT


128 @
ch™√l_¥e£¡
.
£âî


129 
def
 
	$ch™√l_¥e£¡
(
£lf
, 
vÆ
):

130 
£lf
.
¥e£¡_Êags
 |
vÆ
 << 
_CHANNEL_SHIFT


132 @
¥›îty


133 
def
 
	$fhss_¥e£¡
(
£lf
):

134  (
£lf
.
¥e£¡_Êags
 & 
_FHSS_MASK
Ë>> 
_FHSS_SHIFT


136 @
fhss_¥e£¡
.
£âî


137 
def
 
	$fhss_¥e£¡
(
£lf
, 
vÆ
):

138 
£lf
.
¥e£¡_Êags
 |
vÆ
 << 
_FHSS_SHIFT


140 @
¥›îty


141 
def
 
	$™t_sig_¥e£¡
(
£lf
):

142  (
£lf
.
¥e£¡_Êags
 & 
_ANT_SIG_MASK
Ë>> 
_ANT_SIG_SHIFT


144 @
™t_sig_¥e£¡
.
£âî


145 
def
 
	$™t_sig_¥e£¡
(
£lf
, 
vÆ
):

146 
£lf
.
¥e£¡_Êags
 |
vÆ
 << 
_ANT_SIG_SHIFT


148 @
¥›îty


149 
def
 
	$™t_noi£_¥e£¡
(
£lf
):

150  (
£lf
.
¥e£¡_Êags
 & 
_ANT_NOISE_MASK
Ë>> 
_ANT_NOISE_SHIFT


152 @
™t_noi£_¥e£¡
.
£âî


153 
def
 
	$™t_noi£_¥e£¡
(
£lf
, 
vÆ
):

154 
£lf
.
¥e£¡_Êags
 |
vÆ
 << 
_ANT_NOISE_SHIFT


156 @
¥›îty


157 
def
 
	$lock_quÆ_¥e£¡
(
£lf
):

158  (
£lf
.
¥e£¡_Êags
 & 
_LOCK_QUAL_MASK
Ë>> 
_LOCK_QUAL_SHIFT


160 @
lock_quÆ_¥e£¡
.
£âî


161 
def
 
	$lock_quÆ_¥e£¡
(
£lf
, 
vÆ
):

162 
£lf
.
¥e£¡_Êags
 |
vÆ
 << 
_LOCK_QUAL_SHIFT


164 @
¥›îty


165 
def
 
	$tx_©ä_¥e£¡
(
£lf
):

166  (
£lf
.
¥e£¡_Êags
 & 
_TX_ATTN_MASK
Ë>> 
_TX_ATTN_SHIFT


168 @
tx_©ä_¥e£¡
.
£âî


169 
def
 
	$tx_©ä_¥e£¡
(
£lf
, 
vÆ
):

170 
£lf
.
¥e£¡_Êags
 |
vÆ
 << 
_TX_ATTN_SHIFT


172 @
¥›îty


173 
def
 
	$db_tx_©ä_¥e£¡
(
£lf
):

174  (
£lf
.
¥e£¡_Êags
 & 
_DB_TX_ATTN_MASK
Ë>> 
_DB_TX_ATTN_SHIFT


176 @
db_tx_©ä_¥e£¡
.
£âî


177 
def
 
	$db_tx_©ä_¥e£¡
(
£lf
, 
vÆ
):

178 
£lf
.
¥e£¡_Êags
 |
vÆ
 << 
_DB_TX_ATTN_SHIFT


180 @
¥›îty


181 
def
 
	$dbm_tx_powî_¥e£¡
(
£lf
):

182  (
£lf
.
¥e£¡_Êags
 & 
_DBM_TX_POWER_MASK
Ë>> 
_DBM_TX_POWER_SHIFT


184 @
dbm_tx_powî_¥e£¡
.
£âî


185 
def
 
	$dbm_tx_powî_¥e£¡
(
£lf
, 
vÆ
):

186 
£lf
.
¥e£¡_Êags
 |
vÆ
 << 
_DBM_TX_POWER_SHIFT


188 @
¥›îty


189 
def
 
	$™t_¥e£¡
(
£lf
):

190  (
£lf
.
¥e£¡_Êags
 & 
_ANTENNA_MASK
Ë>> 
_ANTENNA_SHIFT


192 @
™t_¥e£¡
.
£âî


193 
def
 
	$™t_¥e£¡
(
£lf
, 
vÆ
):

194 
£lf
.
¥e£¡_Êags
 |
vÆ
 << 
_ANTENNA_SHIFT


196 @
¥›îty


197 
def
 
	$db_™t_sig_¥e£¡
(
£lf
):

198  (
£lf
.
¥e£¡_Êags
 & 
_DB_ANT_SIG_MASK
Ë>> 
_DB_ANT_SIG_SHIFT


200 @
db_™t_sig_¥e£¡
.
£âî


201 
def
 
	$db_™t_sig_¥e£¡
(
£lf
, 
vÆ
):

202 
£lf
.
¥e£¡_Êags
 |
vÆ
 << 
_DB_ANT_SIG_SHIFT


204 @
¥›îty


205 
def
 
	$db_™t_noi£_¥e£¡
(
£lf
):

206  (
£lf
.
¥e£¡_Êags
 & 
_DB_ANT_NOISE_MASK
Ë>> 
_DB_ANT_NOISE_SHIFT


208 @
db_™t_noi£_¥e£¡
.
£âî


209 
def
 
	$db_™t_noi£_¥e£¡
(
£lf
, 
vÆ
):

210 
£lf
.
¥e£¡_Êags
 |
vÆ
 << 
_DB_ANT_NOISE_SHIFT


212 @
¥›îty


213 
def
 
	$rx_Êags_¥e£¡
(
£lf
):

214  (
£lf
.
¥e£¡_Êags
 & 
_RX_FLAGS_MASK
Ë>> 
_RX_FLAGS_SHIFT


216 @
rx_Êags_¥e£¡
.
£âî


217 
def
 
	$rx_Êags_¥e£¡
(
£lf
, 
vÆ
):

218 
£lf
.
¥e£¡_Êags
 |
vÆ
 << 
_RX_FLAGS_SHIFT


220 @
¥›îty


221 
def
 
	$ch™∂us_¥e£¡
(
£lf
):

222  (
£lf
.
¥e£¡_Êags
 & 
_CHANNELPLUS_MASK
Ë>> 
_CHANNELPLUS_SHIFT


224 @
ch™∂us_¥e£¡
.
£âî


225 
def
 
	$ch™∂us_¥e£¡
(
£lf
, 
vÆ
):

226 
£lf
.
¥e£¡_Êags
 |
vÆ
 << 
_CHANNELPLUS_SHIFT


228 @
¥›îty


229 
def
 
	$ext_¥e£¡
(
£lf
):

230  (
£lf
.
¥e£¡_Êags
 & 
_EXT_MASK
Ë>> 
_EXT_SHIFT


232 @
ext_¥e£¡
.
£âî


233 
def
 
	$ext_¥e£¡
(
£lf
, 
vÆ
):

234 
£lf
.
¥e£¡_Êags
 |
vÆ
 << 
_EXT_SHIFT


236 
def
 
	$u≈ack
(
£lf
, 
buf
):

237 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

238 
£lf
.
d©a
 = 
buf
[
sockë
.
	$¡ohs
(
£lf
.
Àngth
):]

240 
£lf
.
fõlds
 = []

241 
buf
 = buf[
£lf
.
__hdr_Àn__
:]

243 #decodê
óch
 
fõld
 
öto
 
£lf
.<
«me
> (
eg
. sñf.
ts·
Ë
as
 
wñl
á†
≠≥nd
 
ô
 sñf.
fõlds
 
li°


244 
fõld_decodî
 = [

245 ('ts·', 
£lf
.
ts·_¥e£¡
, sñf.
TSFT
),

246 ('Êags', 
£lf
.
Êags_¥e£¡
, sñf.
Fœgs
),

247 ('øã', 
£lf
.
øã_¥e£¡
, sñf.
R©e
),

248 ('ch™√l', 
£lf
.
ch™√l_¥e£¡
, sñf.
Ch™√l
),

249 ('fhss', 
£lf
.
fhss_¥e£¡
, sñf.
FHSS
),

250 ('™t_sig', 
£lf
.
™t_sig_¥e£¡
, sñf.
A¡í«Sig«l
),

251 ('™t_noi£', 
£lf
.
™t_noi£_¥e£¡
, sñf.
A¡í«Noi£
),

252 ('lock_quÆ', 
£lf
.
lock_quÆ_¥e£¡
, sñf.
LockQuÆôy
),

253 ('tx_©ä', 
£lf
.
tx_©ä_¥e£¡
, sñf.
TxAâíu©i⁄
),

254 ('db_tx_©ä', 
£lf
.
db_tx_©ä_¥e£¡
, sñf.
DbTxAâíu©i⁄
),

255 ('dbm_tx_powî', 
£lf
.
dbm_tx_powî_¥e£¡
, sñf.
DbmTxPowî
),

256 ('™t', 
£lf
.
™t_¥e£¡
, sñf.
A¡í«
),

257 ('db_™t_sig', 
£lf
.
db_™t_sig_¥e£¡
, sñf.
DbA¡í«Sig«l
),

258 ('db_™t_noi£', 
£lf
.
db_™t_noi£_¥e£¡
, sñf.
DbA¡í«Noi£
),

259 ('rx_Êags', 
£lf
.
rx_Êags_¥e£¡
, sñf.
RxFœgs
)

261 
«me
, 
¥e£¡_bô
, 
∑r£r
 
ö
 
fõld_decodî
:

262 
¥e£¡_bô
:

263 
fõld
 = 
	$∑r£r
(
buf
)

264 
fõld
.
d©a
 = 
b
''

265 
	$£èâr
(
£lf
, 
«me
, 
fõld
)

266 
£lf
.
fõlds
.
	$≠≥nd
(
fõld
)

267 
buf
 = buf[
	$Àn
(
fõld
):]

269 
	`Àn
(
£lf
.
d©a
) > 0:

270 
£lf
.
Êags_¥e£¡
 
™d
 sñf.
Êags
.
fcs
:

271 
£lf
.
d©a
 = 
õì80211
.
	$IEEE80211
(
£lf
.
d©a
, 
fcs
=£lf.
Êags
.fcs)

273 
£lf
.
d©a
 = 
õì80211
.
	$IEEE80211
(
£lf
.
d©a
)

275 
˛ass
 
	$A¡í«
(
dpkt
.
Packë
):

276 
__hdr__
 = (

280 
˛ass
 
	$A¡í«Noi£
(
dpkt
.
Packë
):

281 
__hdr__
 = (

285 
˛ass
 
	$A¡í«Sig«l
(
dpkt
.
Packë
):

286 
__hdr__
 = (

290 
˛ass
 
	$Ch™√l
(
dpkt
.
Packë
):

291 
__hdr__
 = (

296 
˛ass
 
	$FHSS
(
dpkt
.
Packë
):

297 
__hdr__
 = (

302 
˛ass
 
	$Fœgs
(
dpkt
.
Packë
):

303 
__hdr__
 = (

307 @
¥›îty


308 
def
 
	$fcs
(
£lf
):  (£lf.
vÆ
 & 
_FCS_MASK
Ë>> 
_FCS_SHIFT


310 #TODO 
°©emít
 
£ems
 
to
 
have
 
no
 
ef„˘


311 @
fcs
.
£âî


312 
def
 
	$fcs
(
£lf
, 
v
): (v << 
_FCS_SHIFT
Ë| (£lf.
vÆ
 & ~
_FCS_MASK
)

315 
˛ass
 
	$LockQuÆôy
(
dpkt
.
Packë
):

316 
__hdr__
 = (

320 
˛ass
 
	$RxFœgs
(
dpkt
.
Packë
):

321 
__hdr__
 = (

325 
˛ass
 
	$R©e
(
dpkt
.
Packë
):

326 
__hdr__
 = (

330 
˛ass
 
	$TSFT
(
dpkt
.
Packë
):

331 
__hdr__
 = (

335 
˛ass
 
	$TxAâíu©i⁄
(
dpkt
.
Packë
):

336 
__hdr__
 = (

340 
˛ass
 
	$DbTxAâíu©i⁄
(
dpkt
.
Packë
):

341 
__hdr__
 = (

345 
˛ass
 
	$DbA¡í«Noi£
(
dpkt
.
Packë
):

346 
__hdr__
 = (

350 
˛ass
 
	$DbA¡í«Sig«l
(
dpkt
.
Packë
):

351 
__hdr__
 = (

355 
˛ass
 
	$DbmTxPowî
(
dpkt
.
Packë
):

356 
__hdr__
 = (

361 
def
 
	$ã°_RadiŸ≠
():

362 
s
 = 
b
'\x00\x00\x00\x18\x6e\x48\x00\x00\x00\x02\x6c\x09\xa0\x00\xa8\x81\x02\x00\x00\x00\x00\x00\x00\x00'

363 
ød
 = 
	$RadiŸ≠
(
s
)

364 
	$as£π
(
ød
.
vîsi⁄
 == 0)

365 
	$as£π
(
ød
.
¥e£¡_Êags
 == 0x6e480000)

366 
	$as£π
(
ød
.
ts·_¥e£¡
 == 0)

367 
	$as£π
(
ød
.
Êags_¥e£¡
 == 1)

368 
	$as£π
(
ød
.
øã_¥e£¡
 == 1)

369 
	$as£π
(
ød
.
ch™√l_¥e£¡
 == 1)

370 
	$as£π
(
ød
.
fhss_¥e£¡
 == 0)

371 
	$as£π
(
ød
.
™t_sig_¥e£¡
 == 1)

372 
	$as£π
(
ød
.
™t_noi£_¥e£¡
 == 1)

373 
	$as£π
(
ød
.
lock_quÆ_¥e£¡
 == 0)

374 
	$as£π
(
ød
.
db_tx_©ä_¥e£¡
 == 0)

375 
	$as£π
(
ød
.
dbm_tx_powî_¥e£¡
 == 0)

376 
	$as£π
(
ød
.
™t_¥e£¡
 == 1)

377 
	$as£π
(
ød
.
db_™t_sig_¥e£¡
 == 0)

378 
	$as£π
(
ød
.
db_™t_noi£_¥e£¡
 == 0)

379 
	$as£π
(
ød
.
rx_Êags_¥e£¡
 == 1)

380 
	$as£π
(
ød
.
ch™√l
.
‰eq
 == 0x6c09)

381 
	$as£π
(
ød
.
ch™√l
.
Êags
 == 0xa000)

382 
	`as£π
(
	`Àn
(
ød
.
fõlds
) == 7)

385 
def
 
	$ã°_fcs
():

386 
s
 = 
b
'\x00\x00\x1a\x00\x2f\x48\x00\x00\x34\x8f\x71\x09\x00\x00\x00\x00\x10\x0c\x85\x09\xc0\x00\xcc\x01\x00\x00'

387 
π
 = 
	$RadiŸ≠
(
s
)

388 
	$as£π
(
π
.
Êags_¥e£¡
 == 1)

389 
	$as£π
(
π
.
Êags
.
fcs
 == 1)

392 
__«me__
 == '__main__':

393 
	$ã°_RadiŸ≠
()

394 
	$ã°_fcs
()

395 
	`¥öt
('Tests Successful...')

	@radius.py

1 #$Id: 
ødius
.
py
 23 2006-11-08 15:45:33
Z
 
dugs⁄g
 
$


2 #-*- 
codög
: 
utf
-8 -*-

4 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


6 
	g‰om
 . 
imp‹t
 
dpkt


7 
	g‰om
 .
com∑t
 
imp‹t
 
	gcom∑t_‹d


13 
˛ass
 
	$RADIUS
(
dpkt
.
Packë
):

16 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

18 
Aâribuãs
:

19 
__hdr__
: 
Hódî
 
fõlds
 
of
 
RADIUS
.

20 
TODO
.

23 
__hdr__
 = (

27 ('auth', '16s', 
b
'')

29 
©ås
 = 
b
''

31 
def
 
	$u≈ack
(
£lf
, 
buf
):

32 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

33 
£lf
.
©ås
 = 
	$∑r£_©ås
(
£lf
.
d©a
)

34 
£lf
.
d©a
 = 
b
''

37 
def
 
	$∑r£_©ås
(
buf
):

39 
©ås
 = []

40 
buf
:

41 
t
 = 
	$com∑t_‹d
(
buf
[0])

42 
l
 = 
	$com∑t_‹d
(
buf
[1])

43 
l
 < 2:

45 
d
, 
buf
 = buf[2:
l
], buf[l:]

46 
©ås
.
	`≠≥nd
((
t
, 
d
))

47  
©ås


50 
RADIUS_ACCESS_REQUEST
 = 1

51 
RADIUS_ACCESS_ACCEPT
 = 2

52 
RADIUS_ACCESS_REJECT
 = 3

53 
RADIUS_ACCT_REQUEST
 = 4

54 
RADIUS_ACCT_RESPONSE
 = 5

55 
RADIUS_ACCT_STATUS
 = 6

56 
RADIUS_ACCESS_CHALLENGE
 = 11

59 
RADIUS_USER_NAME
 = 1

60 
RADIUS_USER_PASSWORD
 = 2

61 
RADIUS_CHAP_PASSWORD
 = 3

62 
RADIUS_NAS_IP_ADDR
 = 4

63 
RADIUS_NAS_PORT
 = 5

64 
RADIUS_SERVICE_TYPE
 = 6

65 
RADIUS_FRAMED_PROTOCOL
 = 7

66 
RADIUS_FRAMED_IP_ADDR
 = 8

67 
RADIUS_FRAMED_IP_NETMASK
 = 9

68 
RADIUS_FRAMED_ROUTING
 = 10

69 
RADIUS_FILTER_ID
 = 11

70 
RADIUS_FRAMED_MTU
 = 12

71 
RADIUS_FRAMED_COMPRESSION
 = 13

72 
RADIUS_LOGIN_IP_HOST
 = 14

73 
RADIUS_LOGIN_SERVICE
 = 15

74 
RADIUS_LOGIN_TCP_PORT
 = 16

76 
RADIUS_REPLY_MESSAGE
 = 18

77 
RADIUS_CALLBACK_NUMBER
 = 19

78 
RADIUS_CALLBACK_ID
 = 20

80 
RADIUS_FRAMED_ROUTE
 = 22

81 
RADIUS_FRAMED_IPX_NETWORK
 = 23

82 
RADIUS_STATE
 = 24

83 
RADIUS_CLASS
 = 25

84 
RADIUS_VENDOR_SPECIFIC
 = 26

85 
RADIUS_SESSION_TIMEOUT
 = 27

86 
RADIUS_IDLE_TIMEOUT
 = 28

87 
RADIUS_TERMINATION_ACTION
 = 29

88 
RADIUS_CALLED_STATION_ID
 = 30

89 
RADIUS_CALLING_STATION_ID
 = 31

90 
RADIUS_NAS_ID
 = 32

91 
RADIUS_PROXY_STATE
 = 33

92 
RADIUS_LOGIN_LAT_SERVICE
 = 34

93 
RADIUS_LOGIN_LAT_NODE
 = 35

94 
RADIUS_LOGIN_LAT_GROUP
 = 36

95 
RADIUS_FRAMED_ATALK_LINK
 = 37

96 
RADIUS_FRAMED_ATALK_NETWORK
 = 38

97 
RADIUS_FRAMED_ATALK_ZONE
 = 39

98 #40-59 
ª£rved
 
accou¡ög


99 
RADIUS_CHAP_CHALLENGE
 = 60

100 
RADIUS_NAS_PORT_TYPE
 = 61

101 
RADIUS_PORT_LIMIT
 = 62

102 
RADIUS_LOGIN_LAT_PORT
 = 63

	@rfb.py

1 #$Id: 
rfb
.
py
 47 2008-05-27 02:10:00
Z
 
j⁄
.
obîheide
 
$


2 #-*- 
codög
: 
utf
-8 -*-

4 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


6 
	g‰om
 . 
imp‹t
 
	gdpkt


8 #RemŸê
Fømebuf„r
 
PrŸocﬁ


11 #Clõ¡ 
to
 
Sîvî
 
Mesßges


12 
	gCLIENT_SET_PIXEL_FORMAT
 = 0

13 
CLIENT_SET_ENCODINGS
 = 2

14 
CLIENT_FRAMEBUFFER_UPDATE_REQUEST
 = 3

15 
CLIENT_KEY_EVENT
 = 4

16 
CLIENT_POINTER_EVENT
 = 5

17 
CLIENT_CUT_TEXT
 = 6

19 #Sîvî 
to
 
Clõ¡
 
Mesßges


20 
SERVER_FRAMEBUFFER_UPDATE
 = 0

21 
SERVER_SET_COLOUR_MAP_ENTRIES
 = 1

22 
SERVER_BELL
 = 2

23 
SERVER_CUT_TEXT
 = 3

26 
˛ass
 
	$RFB
(
dpkt
.
Packë
):

29 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

31 
Aâribuãs
:

32 
__hdr__
: 
Hódî
 
fõlds
 
of
 
RADIUS
.

33 
TODO
.

36 
__hdr__
 = (

41 
˛ass
 
	$SëPixñF‹m©
(
dpkt
.
Packë
):

42 
__hdr__
 = (

48 
˛ass
 
	$SëEncodögs
(
dpkt
.
Packë
):

49 
__hdr__
 = (

55 
˛ass
 
	$Fømebuf„rUpd©eReque°
(
dpkt
.
Packë
):

56 
__hdr__
 = (

65 
˛ass
 
	$KeyEvít
(
dpkt
.
Packë
):

66 
__hdr__
 = (

73 
˛ass
 
	$PoöãrEvít
(
dpkt
.
Packë
):

74 
__hdr__
 = (

81 
˛ass
 
	$Fømebuf„rUpd©e
(
dpkt
.
Packë
):

82 
__hdr__
 = (

88 
˛ass
 
	$SëCﬁourM≠E¡rõs
(
dpkt
.
Packë
):

89 
__hdr__
 = (

96 
˛ass
 
	$CutText
(
dpkt
.
Packë
):

97 
__hdr__
 = (

	@rip.py

1 #$Id: 
rù
.
py
 23 2006-11-08 15:45:33
Z
 
dugs⁄g
 
$


2 #-*- 
codög
: 
utf
-8 -*-

4 
‰om
 
__futuª__
 
imp‹t
 
¥öt_fun˘i⁄


5 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


7 
	g‰om
 . 
imp‹t
 
	gdpkt


9 #RIP 
v2
 - 
RFC
 2453

12 
	gREQUEST
 = 1

13 
RESPONSE
 = 2

16 
˛ass
 
	$RIP
(
dpkt
.
Packë
):

19 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

21 
Aâribuãs
:

22 
__hdr__
: 
Hódî
 
fõlds
 
of
 
RIP
.

23 
TODO
.

26 
__hdr__
 = (

27 ('cmd', 'B', 
REQUEST
),

32 
def
 
	$u≈ack
(
£lf
, 
buf
):

33 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

34 
l
 = []

35 
£lf
.
auth
 = 
N⁄e


36 
£lf
.
d©a
:

37 
πe
 = 
	$RTE
(
£lf
.
d©a
[:20])

38 
πe
.
Ámûy
 == 0xFFFF:

39 
£lf
.
auth
 = 
	$Auth
(
£lf
.
d©a
[:20])

41 
l
.
	$≠≥nd
(
πe
)

42 
£lf
.
d©a
 = self.data[20:]

43 
£lf
.
d©a
 = sñf.
πes
 = 
l


45 
def
 
	$__Àn__
(
£lf
):

46 
n
 = 
£lf
.
__hdr_Àn__


47 
£lf
.
auth
:

48 
n
 +
	$Àn
(
£lf
.
auth
)

49 
n
 +
	`sum
(
	$m≠
(
Àn
, 
£lf
.
πes
))

50  
n


52 
def
 
	$__byãs__
(
£lf
):

53 
auth
 = 
b
''

54 
£lf
.
auth
:

55 
auth
 = 
	$byãs
(
£lf
.
auth
)

56  
£lf
.
	`∑ck_hdr
(Ë+ 
auth
 + 
b
''.
	`joö
(
	$m≠
(
byãs
, 
£lf
.
πes
))

59 
˛ass
 
	$RTE
(
dpkt
.
Packë
):

60 
__hdr__
 = (

70 
˛ass
 
	$Auth
(
dpkt
.
Packë
):

71 
__hdr__
 = (

78 
__s
 = 
b
'\x02\x02\x00\x00\x00\x02\x00\x00\x01\x02\x03\x00\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x02\x00\x00\xc0\xa8\x01\x08\xff\xff\xff\xfc\x00\x00\x00\x00\x00\x00\x00\x01'

81 
def
 
	$ã°_πp_∑ck
():

82 
r
 = 
	$RIP
(
__s
)

83 
	`as£π
 (
__s
 =
	$byãs
(
r
))

86 
def
 
	$ã°_πp_u≈ack
():

87 
r
 = 
	$RIP
(
__s
)

88 
	$as£π
 (
r
.
auth
 
is
 
N⁄e
)

89 
	`as£π
 (
	`Àn
(
r
.
πes
) == 2)

91 
πe
 = 
r
.
πes
[1]

92 
	$as£π
 (
πe
.
Ámûy
 == 2)

93 
	$as£π
 (
πe
.
rouã_èg
 == 0)

94 
	$as£π
 (
πe
.
mëric
 == 1)

97 
__«me__
 == '__main__':

98 
	$ã°_πp_∑ck
()

99 
	$ã°_πp_u≈ack
()

100 
	`¥öt
('Tests Successful...')

	@rpc.py

1 #$Id: 
Ωc
.
py
 23 2006-11-08 15:45:33
Z
 
dugs⁄g
 
$


2 #-*- 
codög
: 
utf
-8 -*-

4 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


6 
imp‹t
 

8 
	g‰om
 . 
imp‹t
 
	gdpkt


10 #RPC.
dú


11 
	gCALL
 = 0

12 
REPLY
 = 1

14 #RPC.
Auth
.
Êav‹


15 
AUTH_NONE
 = 
AUTH_NULL
 = 0

16 
AUTH_UNIX
 = 1

17 
AUTH_SHORT
 = 2

18 
AUTH_DES
 = 3

20 #RPC.
Rïly
.
°©


21 
MSG_ACCEPTED
 = 0

22 
MSG_DENIED
 = 1

24 #RPC.
Rïly
.
Ac˚±
.
°©


25 
SUCCESS
 = 0

26 
PROG_UNAVAIL
 = 1

27 
PROG_MISMATCH
 = 2

28 
PROC_UNAVAIL
 = 3

29 
GARBAGE_ARGS
 = 4

30 
SYSTEM_ERR
 = 5

32 #RPC.
Rïly
.
Reje˘
.
°©


33 
RPC_MISMATCH
 = 0

34 
AUTH_ERROR
 = 1

37 
˛ass
 
	$RPC
(
dpkt
.
Packë
):

40 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

42 
Aâribuãs
:

43 
__hdr__
: 
Hódî
 
fõlds
 
of
 
RPC
.

44 
TODO
.

47 
__hdr__
 = (

49 ('dú', 'I', 
CALL
)

52 
˛ass
 
	$Auth
(
dpkt
.
Packë
):

53 
__hdr__
 = (('Êav‹', 'I', 
AUTH_NONE
), )

55 
def
 
	$u≈ack
(
£lf
, 
buf
):

56 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

57 
n
 = .
	`u≈ack
('>I', 
£lf
.
d©a
[:4])[0]

58 
£lf
.
d©a
 = sñf.d©a[4:4 + 
n
]

60 
def
 
	$__Àn__
(
£lf
):

61  8 + 
	$Àn
(
£lf
.
d©a
)

63 
def
 
	$__byãs__
(
£lf
):

64  
£lf
.
	`∑ck_hdr
(Ë+ .
	`∑ck
('>I', 
	`Àn
(£lf.
d©a
)) + \

65 
	$byãs
(
£lf
.
d©a
)

67 
˛ass
 
	$CÆl
(
dpkt
.
Packë
):

68 
__hdr__
 = (

75 
def
 
	$u≈ack
(
£lf
, 
buf
):

76 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

77 
£lf
.
¸ed
 = 
RPC
.
	$Auth
(
£lf
.
d©a
)

78 
£lf
.
vîf
 = 
RPC
.
	`Auth
(£lf.
d©a
[
	$Àn
(
£lf
.
¸ed
):])

79 
£lf
.
d©a
 = sñf.d©a[
	`Àn
(£lf.
¸ed
Ë+ 
	$Àn
(
£lf
.
vîf
):]

81 
def
 
	$__Àn__
(
£lf
):

82  
	`Àn
(
	$°r
(
£lf
)) #XXX

84 
def
 
	$__byãs__
(
£lf
):

85  
dpkt
.
Packë
.
	`__byãs__
(
£lf
) + \

86 
	`byãs
(
	`gë©å
(
£lf
, '¸ed', 
RPC
.
	`Auth
())) + \

87 
	`byãs
(
	`gë©å
(
£lf
, 'vîf', 
RPC
.
	`Auth
())) + \

88 
	$byãs
(
£lf
.
d©a
)

90 
˛ass
 
	$Rïly
(
dpkt
.
Packë
):

91 
__hdr__
 = (('°©', 'I', 
MSG_ACCEPTED
), )

93 
˛ass
 
	$Ac˚±
(
dpkt
.
Packë
):

94 
__hdr__
 = (('°©', 'I', 
SUCCESS
), )

96 
def
 
	$u≈ack
(
£lf
, 
buf
):

97 
£lf
.
vîf
 = 
RPC
.
	$Auth
(
buf
)

98 
buf
 = buf[
	$Àn
(
£lf
.
vîf
):]

99 
£lf
.
°©
 = .
	`u≈ack
('>I', 
buf
[:4])[0]

100 
£lf
.
°©
 =
SUCCESS
:

101 
£lf
.
d©a
 = 
buf
[4:]

102 
ñif
 
£lf
.
°©
 =
PROG_MISMATCH
:

103 
£lf
.
low
, sñf.
high
 = .
	`u≈ack
('>II', 
buf
[4:12])

104 
£lf
.
d©a
 = 
buf
[12:]

106 
def
 
	$__Àn__
(
£lf
):

107 
£lf
.
°©
 =
PROG_MISMATCH
: 
n
 = 8

108 : 
n
 = 0

109  
	`Àn
(
£lf
.
vîf
Ë+ 4 + 
n
 + 
	$Àn
(
£lf
.
d©a
)

111 
def
 
	$__byãs__
(
£lf
):

112 
£lf
.
°©
 =
PROG_MISMATCH
:

113  
	`byãs
(
£lf
.
vîf
Ë+ .
	`∑ck
('>III', sñf.
°©
,

114 
£lf
.
low
, sñf.
high
Ë+ sñf.
d©a


115  
	`byãs
(
£lf
.
vîf
Ë+ 
dpkt
.
Packë
.
	$__byãs__
(
£lf
)

117 
˛ass
 
	$Reje˘
(
dpkt
.
Packë
):

118 
__hdr__
 = (('°©', 'I', 
AUTH_ERROR
), )

120 
def
 
	$u≈ack
(
£lf
, 
buf
):

121 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

122 
£lf
.
°©
 =
RPC_MISMATCH
:

123 
£lf
.
low
, sñf.
high
 = .
	`u≈ack
('>II', sñf.
d©a
[:8])

124 
£lf
.
d©a
 = self.data[8:]

125 
ñif
 
£lf
.
°©
 =
AUTH_ERROR
:

126 
£lf
.
why
 = .
	`u≈ack
('>I', sñf.
d©a
[:4])[0]

127 
£lf
.
d©a
 = self.data[4:]

129 
def
 
	$__Àn__
(
£lf
):

130 
£lf
.
°©
 =
RPC_MISMATCH
: 
n
 = 8

131 
ñif
 
£lf
.
°©
 =
AUTH_ERROR
: 
n
 = 4

132 : 
n
 = 0

133  4 + 
n
 + 
	$Àn
(
£lf
.
d©a
)

135 
def
 
	$__byãs__
(
£lf
):

136 
£lf
.
°©
 =
RPC_MISMATCH
:

137  .
	`∑ck
('>III', 
£lf
.
°©
, sñf.
low
, sñf.
high
Ë+ sñf.
d©a


138 
ñif
 
£lf
.
°©
 =
AUTH_ERROR
:

139  .
	`∑ck
('>II', 
£lf
.
°©
, sñf.
why
Ë+ sñf.
d©a


140  
dpkt
.
Packë
.
	$__byãs__
(
£lf
)

142 
def
 
	$u≈ack
(
£lf
, 
buf
):

143 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

144 
£lf
.
°©
 =
MSG_ACCEPTED
:

145 
£lf
.
d©a
 = sñf.
ac˚±
 = sñf.
	$Ac˚±
(
£lf
.
d©a
)

146 
ñif
 
£lf
.
°©us
 =
MSG_DENIED
:

147 
£lf
.
d©a
 = sñf.
ªje˘
 = sñf.
	$Reje˘
(
£lf
.
d©a
)

149 
def
 
	$u≈ack
(
£lf
, 
buf
):

150 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

151 
£lf
.
dú
 =
CALL
:

152 
£lf
.
d©a
 = sñf.
ˇŒ
 = sñf.
	$CÆl
(
£lf
.
d©a
)

153 
ñif
 
£lf
.
dú
 =
REPLY
:

154 
£lf
.
d©a
 = sñf.
ª∂y
 = sñf.
	$Rïly
(
£lf
.
d©a
)

157 
def
 
	$u≈ack_xdæi°
(
˛s
, 
buf
):

158 
l
 = []

159 
buf
:

160 
buf
.
	`°¨tswôh
(
b
'\x00\x00\x00\x01'):

161 
p
 = 
	$˛s
(
buf
[4:])

162 
l
.
	$≠≥nd
(
p
)

163 
buf
 = 
p
.
d©a


164 
ñif
 
buf
.
	`°¨tswôh
(
b
'\x00\x00\x00\x00'):

167 
øi£
 
dpkt
.
	`U≈ackEº‹
('invalid XDRÜist')

168  
l


171 
def
 
	$∑ck_xdæi°
(*
¨gs
):

172  
b
'\x00\x00\x00\x01'.
	`joö
(
	`m≠
(
byãs
, 
¨gs
)) + b'\x00\x00\x00\x00'

	@rtp.py

1 #$Id: 
πp
.
py
 23 2006-11-08 15:45:33
Z
 
dugs⁄g
 
$


2 #-*- 
codög
: 
utf
-8 -*-

4 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


6 
	g‰om
 .
dpkt
 
imp‹t
 
Packë


7 
	g‰om
 .
dec‹©‹s
 
imp‹t
 
	gdïªˇãd


17 
	g_VERSION_MASK
 = 0xC000

18 
_P_MASK
 = 0x2000

19 
_X_MASK
 = 0x1000

20 
_CC_MASK
 = 0x0F00

21 
_M_MASK
 = 0x0080

22 
_PT_MASK
 = 0x007F

23 
_VERSION_SHIFT
 = 14

24 
_P_SHIFT
 = 13

25 
_X_SHIFT
 = 12

26 
_CC_SHIFT
 = 8

27 
_M_SHIFT
 = 7

28 
_PT_SHIFT
 = 0

30 
VERSION
 = 2

33 
˛ass
 
	$RTP
(
Packë
):

36 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

38 
Aâribuãs
:

39 
__hdr__
: 
Hódî
 
fõlds
 
of
 
RTP
.

40 
TODO
.

43 
__hdr__
 = (

49 
c§c
 = 
b
''

51 @
¥›îty


52 
def
 
	$vîsi⁄
(
£lf
):  (£lf.
_ty≥
 & 
_VERSION_MASK
Ë>> 
_VERSION_SHIFT


54 @
vîsi⁄
.
£âî


55 
def
 
	$vîsi⁄
(
£lf
, 
vî
):

56 
£lf
.
_ty≥
 = (
vî
 << 
_VERSION_SHIFT
Ë| (£lf._ty≥ & ~
_VERSION_MASK
)

58 @
¥›îty


59 
def
 
	$p
(
£lf
):  (£lf.
_ty≥
 & 
_P_MASK
Ë>> 
_P_SHIFT


61 @
p
.
£âî


62 
def
 
	$p
(
£lf
, 
p
): sñf.
_ty≥
 = (∞<< 
_P_SHIFT
Ë| (£lf._ty≥ & ~
_P_MASK
)

64 @
¥›îty


65 
def
 
	$x
(
£lf
):  (£lf.
_ty≥
 & 
_X_MASK
Ë>> 
_X_SHIFT


67 @
x
.
£âî


68 
def
 
	$x
(
£lf
, 
x
): sñf.
_ty≥
 = (x << 
_X_SHIFT
Ë| (£lf._ty≥ & ~
_X_MASK
)

70 @
¥›îty


71 
def
 
	$cc
(
£lf
):  (£lf.
_ty≥
 & 
_CC_MASK
Ë>> 
_CC_SHIFT


73 @
cc
.
£âî


74 
def
 
	$cc
(
£lf
, 
cc
): sñf.
_ty≥
 = (c¯<< 
_CC_SHIFT
Ë| (£lf._ty≥ & ~
_CC_MASK
)

76 @
¥›îty


77 
def
 
	$m
(
£lf
):  (£lf.
_ty≥
 & 
_M_MASK
Ë>> 
_M_SHIFT


79 @
m
.
£âî


80 
def
 
	$m
(
£lf
, 
m
): sñf.
_ty≥
 = (m << 
_M_SHIFT
Ë| (£lf._ty≥ & ~
_M_MASK
)

82 @
¥›îty


83 
def
 
	$±
(
£lf
):  (£lf.
_ty≥
 & 
_PT_MASK
Ë>> 
_PT_SHIFT


85 @
±
.
£âî


86 
def
 
	$±
(
£lf
, 
m
): sñf.
_ty≥
 = (m << 
_PT_SHIFT
Ë| (£lf._ty≥ & ~
_PT_MASK
)

88 
def
 
	$__Àn__
(
£lf
):

89  
£lf
.
__hdr_Àn__
 + 
	`Àn
(£lf.
c§c
Ë+ 
	$Àn
(
£lf
.
d©a
)

91 
def
 
	$__byãs__
(
£lf
):

92  
£lf
.
	`∑ck_hdr
(Ë+ sñf.
c§c
 + 
	$byãs
(
£lf
.
d©a
)

94 
def
 
	$u≈ack
(
£lf
, 
buf
):

95 
	`su≥r
(
RTP
, 
£lf
).
	$u≈ack
(
buf
)

96 
£lf
.
c§c
 = 
buf
[£lf.
__hdr_Àn__
:£lf.__hdr_Àn__ + sñf.
cc
 * 4]

97 
£lf
.
d©a
 = 
buf
[£lf.
__hdr_Àn__
 + sñf.
cc
 * 4:]

99 
def
 
	$ã°_πp
():

100 
πp
 = 
	`RTP
(
b
"\x80\x08\x4d\x01\x00\x01\x00\xe0\x34\x3f\xfa\x34\x53\x53\x53\x56\x53\x5d\x56\x57\xd5\xd6\xd1\xde\xdf\xd3\xd9\xda\xdf\xdc\xdf\xd8\xdd\xd4\xdd\xd9\xd1\xd6\xdc\xda\xde\xdd\xc7\xc1\xdf\xdf\xda\xdb\xdd\xdd\xc4\xd9\x55\x57\xd4\x50\x44\x44\x5b\x44\x4f\x4c\x47\x40\x4c\x47\x59\x5b\x58\x5d\x56\x56\x53\x56\xd5\xd5\x54\x55\xd6\xd6\xd4\xd1\xd1\xd0\xd1\xd5\xdd\xd6\x55\xd4\xd6\xd1\xd4\xd6\xd7\xd7\xd5\xd4\xd0\xd7\xd1\xd4\xd2\xdc\xd6\xdc\xdf\xdc\xdd\xd2\xde\xdc\xd0\xdd\xdc\xd0\xd6\xd6\xd6\x55\x54\x55\x57\x57\x56\x50\x50\x5c\x5c\x52\x5d\x5d\x5f\x5e\x5d\x5e\x52\x50\x52\x56\x54\x57\x55\x55\xd4\xd7\x55\xd5\x55\x55\x55\x55\x55\x54\x57\x54\x55\x55\xd5\xd5\xd7\xd6\xd7\xd1\xd1\xd3\xd2\xd3\xd2\xd2\xd3\xd3")

101 
	$as£π
 (
πp
.
vîsi⁄
 == 2)

102 
	$as£π
 (
πp
.
p
 == 0)

103 
	$as£π
 (
πp
.
x
 == 0)

104 
	$as£π
 (
πp
.
cc
 == 0)

105 
	$as£π
 (
πp
.
m
 == 0)

106 
	$as£π
 (
πp
.
±
 == 8)

107 
	$as£π
 (
πp
.
£q
 == 19713)

108 
	$as£π
 (
πp
.
ts
 == 65760)

109 
	$as£π
 (
πp
.
s§c
 == 0x343ffa34)

110 
	`as£π
 (
	`Àn
(
πp
) == 172)

111 
	`as£π
 (
	`byãs
(
πp
Ë=
b
"\x80\x08\x4d\x01\x00\x01\x00\xe0\x34\x3f\xfa\x34\x53\x53\x53\x56\x53\x5d\x56\x57\xd5\xd6\xd1\xde\xdf\xd3\xd9\xda\xdf\xdc\xdf\xd8\xdd\xd4\xdd\xd9\xd1\xd6\xdc\xda\xde\xdd\xc7\xc1\xdf\xdf\xda\xdb\xdd\xdd\xc4\xd9\x55\x57\xd4\x50\x44\x44\x5b\x44\x4f\x4c\x47\x40\x4c\x47\x59\x5b\x58\x5d\x56\x56\x53\x56\xd5\xd5\x54\x55\xd6\xd6\xd4\xd1\xd1\xd0\xd1\xd5\xdd\xd6\x55\xd4\xd6\xd1\xd4\xd6\xd7\xd7\xd5\xd4\xd0\xd7\xd1\xd4\xd2\xdc\xd6\xdc\xdf\xdc\xdd\xd2\xde\xdc\xd0\xdd\xdc\xd0\xd6\xd6\xd6\x55\x54\x55\x57\x57\x56\x50\x50\x5c\x5c\x52\x5d\x5d\x5f\x5e\x5d\x5e\x52\x50\x52\x56\x54\x57\x55\x55\xd4\xd7\x55\xd5\x55\x55\x55\x55\x55\x54\x57\x54\x55\x55\xd5\xd5\xd7\xd6\xd7\xd1\xd1\xd3\xd2\xd3\xd2\xd2\xd3\xd3")

113 #thê
fﬁlowög
 
ã°s
 
RTP
 
hódî
 
£âîs


114 
πp
 = 
	$RTP
()

115 
πp
.
m
 = 1

116 
πp
.
±
 = 3

117 
πp
.
£q
 = 1234

118 
πp
.
ts
 = 5678

119 
πp
.
s§c
 = 0xabcdef01

120 
	$as£π
 (
πp
.
m
 == 1)

121 
	$as£π
 (
πp
.
±
 == 3)

122 
	$as£π
 (
πp
.
£q
 == 1234)

123 
	$as£π
 (
πp
.
ts
 == 5678)

124 
	`as£π
 (
πp
.
s§c
 == 0xabcdef01)

	@rx.py

1 #$Id: 
rx
.
py
 23 2006-11-08 15:45:33
Z
 
j⁄oj⁄o
 
$


2 #-*- 
codög
: 
utf
-8 -*-

4 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


6 
	g‰om
 . 
imp‹t
 
	gdpkt


9 
	gDATA
 = 0x01

10 
ACK
 = 0x02

11 
BUSY
 = 0x03

12 
ABORT
 = 0x04

13 
ACKALL
 = 0x05

14 
CHALLENGE
 = 0x06

15 
RESPONSE
 = 0x07

16 
DEBUG
 = 0x08

19 
CLIENT_INITIATED
 = 0x01

20 
REQUEST_ACK
 = 0x02

21 
LAST_PACKET
 = 0x04

22 
MORE_PACKETS
 = 0x08

23 
SLOW_START_OK
 = 0x20

24 
JUMBO_PACKET
 = 0x20

27 
SEC_NONE
 = 0x00

28 
SEC_BCRYPT
 = 0x01

29 
SEC_RXKAD
 = 0x02

30 
SEC_RXKAD_ENC
 = 0x03

33 
˛ass
 
	$Rx
(
dpkt
.
Packë
):

36 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

38 
Aâribuãs
:

39 
__hdr__
: 
Hódî
 
fõlds
 
of
 
Rx
.

40 
TODO
.

43 
__hdr__
 = (

50 ('Êags', 'B', 
CLIENT_INITIATED
),

	@sccp.py

1 #$Id: 
sc˝
.
py
 23 2006-11-08 15:45:33
Z
 
dugs⁄g
 
$


2 #-*- 
codög
: 
utf
-8 -*-

4 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


6 
	g‰om
 . 
imp‹t
 
dpkt


8 
	gKEYPAD_BUTTON
 = 0x00000003

9 
OFF_HOOK
 = 0x00000006

10 
ON_HOOK
 = 0x00000007

11 
OPEN_RECEIVE_CHANNEL_ACK
 = 0x00000022

12 
START_TONE
 = 0x00000082

13 
STOP_TONE
 = 0x00000083

14 
SET_LAMP
 = 0x00000086

15 
SET_SPEAKER_MODE
 = 0x00000088

16 
START_MEDIA_TRANSMIT
 = 0x0000008A

17 
STOP_MEDIA_TRANSMIT
 = 0x0000008B

18 
CALL_INFO
 = 0x0000008F

19 
DEFINE_TIME_DATE
 = 0x00000094

20 
DISPLAY_TEXT
 = 0x00000099

21 
OPEN_RECEIVE_CHANNEL
 = 0x00000105

22 
CLOSE_RECEIVE_CHANNEL
 = 0x00000106

23 
SELECT_SOFTKEYS
 = 0x00000110

24 
CALL_STATE
 = 0x00000111

25 
DISPLAY_PROMPT_STATUS
 = 0x00000112

26 
CLEAR_PROMPT_STATUS
 = 0x00000113

27 
ACTIVATE_CALL_PLANE
 = 0x00000116

30 
˛ass
 
	$A˘iv©eCÆlPœ√
(
dpkt
.
Packë
):

31 
__byã_‹dî__
 = '<'

32 
__hdr__
 = (

37 
˛ass
 
	$CÆlInfo
(
dpkt
.
Packë
):

38 
__byã_‹dî__
 = '<'

39 
__hdr__
 = (

52 
˛ass
 
	$CÆlSèã
(
dpkt
.
Packë
):

53 
__byã_‹dî__
 = '<'

54 
__hdr__
 = (

55 ('ˇŒ_°©e', 'I', 12), #12: 
Pro˚ed
, 15: 
C⁄√˘ed


61 
˛ass
 
	$CÀ¨Prom±Sètus
(
dpkt
.
Packë
):

62 
__byã_‹dî__
 = '<'

63 
__hdr__
 = (

69 
˛ass
 
	$Clo£Re˚iveCh™√l
(
dpkt
.
Packë
):

70 
__byã_‹dî__
 = '<'

71 
__hdr__
 = (

77 
˛ass
 
	$Di•œyProm±Sètus
(
dpkt
.
Packë
):

78 
__byã_‹dî__
 = '<'

79 
__hdr__
 = (

87 
˛ass
 
	$Di•œyText
(
dpkt
.
Packë
):

88 
__byã_‹dî__
 = '<'

89 
__hdr__
 = (

94 
˛ass
 
	$Key∑dBuâ⁄
(
dpkt
.
Packë
):

95 
__byã_‹dî__
 = '<'

96 
__hdr__
 = (

101 
˛ass
 
	$O≥nRe˚iveCh™√l
(
dpkt
.
Packë
):

102 
__byã_‹dî__
 = '<'

103 
__hdr__
 = (

107 ('∑ylﬂd_ˇ∑bûôy', 'I', 4), #4: 
G
.711 
u
-
œw
 64
k


113 
˛ass
 
	$O≥nRe˚iveCh™√lAck
(
dpkt
.
Packë
):

114 
__byã_‹dî__
 = '<'

115 
__hdr__
 = (

123 
˛ass
 
	$Sñe˘SèπKeys
(
dpkt
.
Packë
):

124 
__byã_‹dî__
 = '<'

125 
__hdr__
 = (

133 
˛ass
 
	$SëLamp
(
dpkt
.
Packë
):

134 
__byã_‹dî__
 = '<'

135 
__hdr__
 = (

136 ('°imulus', 'I', 9), #9: 
Löe


142 
˛ass
 
	$SëS≥akîMode
(
dpkt
.
Packë
):

143 
__byã_‹dî__
 = '<'

144 
__hdr__
 = (

145 ('•ókî', 'I', 2), #2: 
S≥akîOff


149 
˛ass
 
	$SèπMedüTønsmissi⁄
(
dpkt
.
Packë
):

150 
__byã_‹dî__
 = '<'

151 
__hdr__
 = (

158 ('∑ylﬂd_ˇ∑bûôy', 'I', 4), #4: 
G
.711 
u
-
œw
 64
k


167 
˛ass
 
	$SèπT⁄e
(
dpkt
.
Packë
):

168 
__byã_‹dî__
 = '<'

169 
__hdr__
 = (

170 ('t⁄e', 'I', 0x24), #0
x24
: 
AÀπögT⁄e


174 
˛ass
 
	$St›MedüTønsmissi⁄
(
dpkt
.
Packë
):

175 
__byã_‹dî__
 = '<'

176 
__hdr__
 = (

182 
˛ass
 
	$SCCP
(
dpkt
.
Packë
):

185 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

187 
Aâribuãs
:

188 
__hdr__
: 
Hódî
 
fõlds
 
of
 
SCCP
.

189 
TODO
.

192 
__byã_‹dî__
 = '<'

193 
__hdr__
 = (

199 
_msgsw
 = {

200 
KEYPAD_BUTTON
: 
Key∑dBuâ⁄
,

201 
OPEN_RECEIVE_CHANNEL_ACK
: 
O≥nRe˚iveCh™√lAck
,

202 
START_TONE
: 
SèπT⁄e
,

203 
SET_LAMP
: 
SëLamp
,

204 
START_MEDIA_TRANSMIT
: 
SèπMedüTønsmissi⁄
,

205 
STOP_MEDIA_TRANSMIT
: 
St›MedüTønsmissi⁄
,

206 
CALL_INFO
: 
CÆlInfo
,

207 
DISPLAY_TEXT
: 
Di•œyText
,

208 
OPEN_RECEIVE_CHANNEL
: 
O≥nRe˚iveCh™√l
,

209 
CLOSE_RECEIVE_CHANNEL
: 
Clo£Re˚iveCh™√l
,

210 
CALL_STATE
: 
CÆlSèã
,

211 
DISPLAY_PROMPT_STATUS
: 
Di•œyProm±Sètus
,

212 
CLEAR_PROMPT_STATUS
: 
CÀ¨Prom±Sètus
,

213 
ACTIVATE_CALL_PLANE
: 
A˘iv©eCÆlPœ√
,

214 
	}
}

216 
def
 
	$u≈ack
(
£lf
, 
buf
):

217 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

218 
n
 = 
£lf
.
Àn
 - 4

219 
n
 > 
	$Àn
(
£lf
.
d©a
):

220 
øi£
 
dpkt
.
	`NìdD©a
('notÉnough data')

221 
£lf
.
msg
, sñf.
d©a
 = sñf.d©a[:
n
], self.data[n:]

222 
åy
:

223 
p
 = 
£lf
.
_msgsw
[£lf.
msgid
](£lf.
msg
)

224 
	`£èâr
(
£lf
, 
p
.
__˛ass__
.
__«me__
.
	`lowî
(),Ö)

225 
	$ex˚±
 (
KeyEº‹
, 
dpkt
.
U≈ackEº‹
):

226 
∑ss


	@sctp.py

1 #$Id: 
s˘p
.
py
 23 2006-11-08 15:45:33
Z
 
dugs⁄g
 
$


2 #-*- 
codög
: 
utf
-8 -*-

4 
‰om
 
__futuª__
 
imp‹t
 
¥öt_fun˘i⁄


5 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


7 
	g‰om
 . 
imp‹t
 
dpkt


8 
	g‰om
 . 
imp‹t
 
	g¸c32c


10 #Såóm 
C⁄åﬁ
 
Tønsmissi⁄
 
PrŸocﬁ


13 #Chunk 
Ty≥s


14 
	gDATA
 = 0

15 
INIT
 = 1

16 
INIT_ACK
 = 2

17 
SACK
 = 3

18 
HEARTBEAT
 = 4

19 
HEARTBEAT_ACK
 = 5

20 
ABORT
 = 6

21 
SHUTDOWN
 = 7

22 
SHUTDOWN_ACK
 = 8

23 
ERROR
 = 9

24 
COOKIE_ECHO
 = 10

25 
COOKIE_ACK
 = 11

26 
ECNE
 = 12

27 
CWR
 = 13

28 
SHUTDOWN_COMPLETE
 = 14

31 
˛ass
 
	$SCTP
(
dpkt
.
Packë
):

34 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

36 
Aâribuãs
:

37 
__hdr__
: 
Hódî
 
fõlds
 
of
 
SCTP
.

38 
TODO
.

41 
__hdr__
 = (

48 
def
 
	$u≈ack
(
£lf
, 
buf
):

49 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

50 
l
 = []

51 
£lf
.
d©a
:

52 
chunk
 = 
	$Chunk
(
£lf
.
d©a
)

53 
l
.
	$≠≥nd
(
chunk
)

54 
£lf
.
d©a
 = sñf.d©a[
	$Àn
(
chunk
):]

55 
£lf
.
d©a
 = sñf.
chunks
 = 
l


57 
def
 
	$__Àn__
(
£lf
):

58  
£lf
.
__hdr_Àn__
 + 
	`sum
(
	$m≠
(
Àn
, 
£lf
.
d©a
))

60 
def
 
	$__byãs__
(
£lf
):

61 
l
 = [
	$byãs
(
x
Ëx 
ö
 
£lf
.
d©a
]

62 
£lf
.
sum
 == 0:

63 
s
 = 
¸c32c
.
	`add
(0xffffffff, 
£lf
.
	$∑ck_hdr
())

64 
x
 
ö
 
l
:

65 
s
 = 
¸c32c
.
	$add
(
s
, 
x
)

66 
£lf
.
sum
 = 
¸c32c
.
	$d⁄e
(
s
)

67  
£lf
.
	`∑ck_hdr
(Ë+ 
b
''.
	$joö
(
l
)

70 
˛ass
 
	$Chunk
(
dpkt
.
Packë
):

71 
__hdr__
 = (

72 ('ty≥', 'B', 
INIT
),

77 
def
 
	$u≈ack
(
£lf
, 
buf
):

78 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

79 
£lf
.
d©a
 = sñf.d©a[:£lf.
Àn
 - sñf.
__hdr_Àn__
]

82 
__s
 = 
b
'\x80\x44\x00\x50\x00\x00\x00\x00\x30\xba\xef\x54\x01\x00\x00\x3c\x3b\xb9\x9c\x46\x00\x01\xa0\x00\x00\x0a\xff\xff\x2b\x2d\x7e\xb2\x00\x05\x00\x08\x9b\xe6\x18\x9b\x00\x05\x00\x08\x9b\xe6\x18\x9c\x00\x0c\x00\x06\x00\x05\x00\x00\x80\x00\x00\x04\xc0\x00\x00\x04\xc0\x06\x00\x08\x00\x00\x00\x00'

85 
def
 
	$ã°_s˘p_∑ck
():

86 
s˘p
 = 
	$SCTP
(
__s
)

87 
	`as£π
 (
__s
 =
	$byãs
(
s˘p
))

88 
s˘p
.
sum
 = 0

89 
	`as£π
 (
__s
 =
	$byãs
(
s˘p
))

92 
def
 
	$ã°_s˘p_u≈ack
():

93 
s˘p
 = 
	$SCTP
(
__s
)

94 
	$as£π
 (
s˘p
.
•‹t
 == 32836)

95 
	$as£π
 (
s˘p
.
dp‹t
 == 80)

96 
	`as£π
 (
	`Àn
(
s˘p
.
chunks
) == 1)

97 
	`as£π
 (
	`Àn
(
s˘p
) == 72)

98 
chunk
 = 
s˘p
.
chunks
[0]

99 
	$as£π
 (
chunk
.
ty≥
 =
INIT
)

100 
	$as£π
 (
chunk
.
Àn
 == 60)

103 
__«me__
 == '__main__':

104 
	$ã°_s˘p_∑ck
()

105 
	$ã°_s˘p_u≈ack
()

106 
	`¥öt
('Tests Successful...')

	@sip.py

1 #$Id: 
sù
.
py
 48 2008-05-27 17:31:15
Z
 
y¨dÀy
 
$


2 #-*- 
codög
: 
utf
-8 -*-

4 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


6 
	g‰om
 . 
imp‹t
 
hâp


9 
˛ass
 
	$Reque°
(
hâp
.
Reque°
):

12 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

14 
Aâribuãs
:

15 
__hdr__
: 
Hódî
 
fõlds
 
of
 
SIP
 
ªque°
.

16 
TODO
.

19 
__hdr_deÁu…s__
 = {

24 
	}
}

25 
__mëhods
 = 
di˘
.
‰omkeys
((

30 
	g__¥Ÿo
 = 'SIP'

33 
˛ass
 
	$Re•⁄£
(
hâp
.
Re•⁄£
):

36 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

38 
Aâribuãs
:

39 
__hdr__
: 
Hódî
 
fõlds
 
of
 
SIP
 
ª•⁄£
.

40 
TODO
.

43 
__hdr_deÁu…s__
 = {

48 
	}
}

49 
__¥Ÿo
 = 'SIP'

	@sll.py

1 #$Id: 
¶l
.
py
 23 2006-11-08 15:45:33
Z
 
dugs⁄g
 
$


2 #-*- 
codög
: 
utf
-8 -*-

3 """LöuxÜibpˇ∞"
	gcooked
" captureÉncapsulation."""

4 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


6 
	g‰om
 . 
imp‹t
 
¨p


7 
	g‰om
 . 
imp‹t
 
dpkt


8 
	g‰om
 . 
imp‹t
 
ëhî√t


11 
˛ass
 
	$SLL
(
dpkt
.
Packë
):

12 """LöuxÜibpˇ∞"
cooked
" captureÉncapsulation.

14 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

16 
Aâribuãs
:

17 
__hdr__
: 
Hódî
 
fõlds
 
of
 
SLL
.

18 
TODO
.

21 
__hdr__
 = (

22 ('ty≥', 'H', 0), #0: 
to
 
us
, 1: 
bˇ°
, 2: 
mˇ°
, 3: 
Ÿhî
, 4: 
‰om
 us

23 ('hrd', 'H', 
¨p
.
ARP_HRD_ETH
),

24 ('hÀn', 'H', 6), #h¨dw¨ê
addªss
 
Àngth


25 ('hdr', '8s', ''), #fú° 8 
byãs
 
of
 
lök
-
œyî
 
hódî


26 ('ëhty≥', 'H', 
ëhî√t
.
ETH_TYPE_IP
),

28 
_ty≥sw
 = 
ëhî√t
.
Ethî√t
._typesw

30 
def
 
	$u≈ack
(
£lf
, 
buf
):

31 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

32 
åy
:

33 
£lf
.
d©a
 = sñf.
_ty≥sw
[£lf.
ëhty≥
](self.data)

34 
	`£èâr
(
£lf
, sñf.
d©a
.
__˛ass__
.
__«me__
.
	`lowî
(), self.data)

35 
	$ex˚±
 (
KeyEº‹
, 
dpkt
.
U≈ackEº‹
):

36 
∑ss


38 
def
 
	$ã°_¶l
():

39 
¶ld©a
 = 
b
'\x00\x00\x00\x01\x00\x06\x00\x0b\xdb\x52\x0e\x08\xf6\x7f\x08\x00\x45\x00\x00\x34\xcc\x6c\x40\x00\x40\x06\x74\x08\x82\xd9\xfa\x8e\x82\xd9\xfa\x0d'

40 
¶…e°
 = 
	$SLL
(
¶ld©a
)

41 
as£π
 
¶…e°
.
ty≥
 == 0

42 
as£π
 
¶…e°
.
hrd
 == 1

43 
as£π
 
¶…e°
.
hÀn
 == 6

44 
as£π
 
¶…e°
.
hdr
 =
b
'\x00\x0b\xdb\x52\x0e\x08\xf6\x7f'

45 
as£π
 
¶…e°
.
ëhty≥
 == 0x0800

47 #givê
övÆid
 
ëhty≥
 
of
 0x1234 
to
 
make
 
suª
 
îr‹
 
is
 
ˇught


48 
¶ld©a2
 = 
b
'\x00\x00\x00\x01\x00\x06\x00\x0b\xdb\x52\x0e\x08\xf6\x7f\x12\x34\x45\x00\x00\x34\xcc\x6c\x40\x00\x40\x06\x74\x08\x82\xd9\xfa\x8e\x82\xd9\xfa\x0d'

49 
¶…e°
 = 
	`SLL
(
¶ld©a2
)

	@smb.py

1 #$Id: 
smb
.
py
 23 2006-11-08 15:45:33
Z
 
dugs⁄g
 
$


2 #-*- 
codög
: 
utf
-8 -*-

4 
‰om
 
__futuª__
 
imp‹t
 
¥öt_fun˘i⁄


5 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


7 
	g‰om
 . 
imp‹t
 
	gdpkt


12 
	gSMB_FLAGS_LOCK_AND_READ_OK
 = 0x01

13 
SMB_FLAGS_BUF_AVAIL
 = 0x02

14 
SMB_FLAGS_CASE_INSENSITIVE
 = 0x08

15 
SMB_FLAGS_CANONICALIZED_PATHS
 = 0x10

16 
SMB_FLAGS_OPLOCK
 = 0x20

17 
SMB_FLAGS_OPBATCH
 = 0x40

18 
SMB_FLAGS_REPLY
 = 0x80

20 
SMB_FLAGS2_LONG_NAMES
 = 0x0001

21 
SMB_FLAGS2_EXTENDED_ATTRIBUTES
 = 0x0002

22 
SMB_FLAGS2_SECURITY_SIGNATURES
 = 0x0004

23 
SMB_FLAGS2_COMPRESSED
 = 0x0008

24 
SMB_FLAGS2_SECURITY_SIGNATURES_REQUIRED
 = 0x0010

25 
SMB_FLAGS2_IS_LONG_NAME
 = 0x0040

26 
SMB_FLAGS2_REVERSE_PATH
 = 0x0400

27 
SMB_FLAGS2_EXTENDED_SECURITY
 = 0x0800

28 
SMB_FLAGS2_DFS
 = 0x1000

29 
SMB_FLAGS2_PAGING_IO
 = 0x2000

30 
SMB_FLAGS2_NT_STATUS
 = 0x4000

31 
SMB_FLAGS2_UNICODE
 = 0x8000

33 
SMB_STATUS_SUCCESS
 = 0x00000000

36 
˛ass
 
	$SMB
(
dpkt
.
Packë
):

39 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

41 
Aâribuãs
:

42 
__hdr__
 = [

43 ('¥Ÿo', '4s', 
b
'\xffSMB'),

45 ('°©us', 'I', 
SMB_STATUS_SUCCESS
),

49 ('£curôy', '8s', 
b
''),

58 
__byã_‹dî__
 = '<'

59 
__hdr__
 = [

60 ('¥Ÿo', '4s', 
b
'\xffSMB'),

62 ('°©us', 'I', 
SMB_STATUS_SUCCESS
),

66 ('£curôy', '8s', 
b
''),

74 @
¥›îty


75 
def
 
	$pid
(
£lf
):

76  (
£lf
.
_pidhi
 << 16Ë| sñf.
_pidlo


78 @
pid
.
£âî


79 
def
 
	$pid
(
£lf
, 
v
):

80 
£lf
.
_pidhi
 = 
v
 >> 16

81 
£lf
.
_pidlo
 = 
v
 & 0xffff

84 
def
 
	$ã°_smb
():

85 
buf
 = 
b
'\xffSMB\xa0\x00\x00\x00\x00\x08\x03\xc8\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x08\xfa\x7a\x00\x08\x53\x02'

86 
smb
 = 
	$SMB
(
buf
)

88 
as£π
 
smb
.
Êags
 =
SMB_FLAGS_CASE_INSENSITIVE


89 
as£π
 
smb
.
Êags2
 =
SMB_FLAGS2_UNICODE
 | 
SMB_FLAGS2_NT_STATUS
 | 
SMB_FLAGS2_EXTENDED_SECURITY
 | 
SMB_FLAGS2_EXTENDED_ATTRIBUTES
 | 
SMB_FLAGS2_LONG_NAMES


90 
as£π
 
smb
.
pid
 == 31482

91 
as£π
 
smb
.
uid
 == 2048

92 
as£π
 
smb
.
mid
 == 595

93 
	`¥öt
(
	$ª¥
(
smb
))

95 
smb
 = 
	$SMB
()

96 
smb
.
pid
 = 0x00081020

97 
smb
.
uid
 = 0x800

98 
as£π
 
	`°r
(
smb
Ë=°r(
b
'\xffSMB\x00\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x20\x10\x00\x08\x00\x00')

101 
__«me__
 == '__main__':

102 
	$ã°_smb
()

103 
	`¥öt
('Tests Successful...')

	@snoop.py

2 #-*- 
codög
: 
utf
-8 -*-

4 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


6 
imp‹t
 
time


8 
	g‰om
 . 
imp‹t
 
	gdpkt


12 
	gSNOOP_MAGIC
 = 0x736E6F6F70000000

14 
SNOOP_VERSION
 = 2

16 
SDL_8023
 = 0

17 
SDL_8024
 = 1

18 
SDL_8025
 = 2

19 
SDL_8026
 = 3

20 
SDL_ETHER
 = 4

21 
SDL_HDLC
 = 5

22 
SDL_CHSYNC
 = 6

23 
SDL_IBMCC
 = 7

24 
SDL_FDDI
 = 8

25 
SDL_OTHER
 = 9

27 
d…off
 = {
SDL_ETHER
: 14}

30 
˛ass
 
	$PktHdr
(
dpkt
.
Packë
):

33 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

35 
Aâribuãs
:

36 
__hdr__
: 
Hódî
 
fõlds
 
of
 
¢o›
 
∑ckë
 
hódî
.

37 
TODO
.

40 
__byã_‹dî__
 = '!'

41 
__hdr__
 = (

51 
˛ass
 
	$FûeHdr
(
dpkt
.
Packë
):

54 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

56 
Aâribuãs
:

57 
__hdr__
: 
Hódî
 
fõlds
 
of
 
¢o›
 
fûe
 
hódî
.

58 
TODO
.

61 
__byã_‹dî__
 = '!'

62 
__hdr__
 = (

63 ('magic', 'Q', 
SNOOP_MAGIC
),

64 ('v', 'I', 
SNOOP_VERSION
),

65 ('lökty≥', 'I', 
SDL_ETHER
),

69 
˛ass
 
	$Wrôî
(
obje˘
):

72 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

74 
Aâribuãs
:

75 
TODO
.

78 
def
 
	$__öô__
(
£lf
, 
fûeobj
, 
lökty≥
=
SDL_ETHER
):

79 
£lf
.
__f
 = 
fûeobj


80 
fh
 = 
	$FûeHdr
(
lökty≥
=linktype)

81 
£lf
.
__f
.
	`wrôe
(
	$°r
(
fh
))

83 
def
 
	$wrôïkt
(
£lf
, 
pkt
, 
ts
=
N⁄e
):

84 
ts
 
is
 
N⁄e
:

85 
ts
 = 
time
.
	$time
()

86 
s
 = 
	$°r
(
pkt
)

87 
n
 = 
	$Àn
(
s
)

88 
∑d_Àn
 = 4 - 
n
 % 4 n % 4 0

89 
ph
 = 
	`PktHdr
(
‹ig_Àn
=
n
, 
ö˛_Àn
=n,

90 
ªc_Àn
=
PktHdr
.
__hdr_Àn__
 + 
n
 + 
∑d_Àn
,

91 
ts_£c
=(
ts
),

92 
ts_u£c
=(((
ts
) - (ts)) * 1000000.0))

93 
£lf
.
__f
.
	`wrôe
(
	$°r
(
ph
))

94 
£lf
.
__f
.
	`wrôe
(
s
 + '\0' * 
∑d_Àn
)

96 
def
 
	$˛o£
(
£lf
):

97 
£lf
.
__f
.
	$˛o£
()

100 
˛ass
 
	$Ródî
(
obje˘
):

103 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

105 
Aâribuãs
:

106 
TODO
.

109 
def
 
	$__öô__
(
£lf
, 
fûeobj
):

110 
£lf
.
«me
 = 
fûeobj
.name

111 
£lf
.
fd
 = 
fûeobj
.
	$fûío
()

112 
£lf
.
__f
 = 
fûeobj


113 
buf
 = 
£lf
.
__f
.
	$ªad
(
FûeHdr
.
__hdr_Àn__
)

114 
£lf
.
__fh
 = 
	$FûeHdr
(
buf
)

115 
£lf
.
__ph
 = 
PktHdr


116 
£lf
.
__fh
.
magic
 !
SNOOP_MAGIC
:

117 
øi£
 
	`VÆueEº‹
('invalid snoop header')

118 
£lf
.
dloff
 = 
d…off
[£lf.
__fh
.
lökty≥
]

119 
£lf
.
fûãr
 = ''

121 
def
 
	$fûío
(
£lf
):

122  
£lf
.
fd


124 
def
 
	$d©Æök
(
£lf
):

125  
£lf
.
__fh
.
lökty≥


127 
def
 
	$£tfûãr
(
£lf
, 
vÆue
, 
›timize
=1):

128  
NŸIm∂emíãdEº‹


130 
def
 
	$ªadpkts
(
£lf
):

131  
	$li°
(
£lf
)

133 
def
 
	$di•©ch
(
£lf
, 
˙t
, 
ˇŒback
, *
¨gs
):

134 
˙t
 > 0:

135 
i
 
ö
 
	$ønge
(
˙t
):

136 
ts
, 
pkt
 = 
	$√xt
(
£lf
)

137 
	$ˇŒback
(
ts
, 
pkt
, *
¨gs
)

139 
ts
, 
pkt
 
ö
 
£lf
:

140 
	$ˇŒback
(
ts
, 
pkt
, *
¨gs
)

142 
def
 
	$lo›
(
£lf
, 
ˇŒback
, *
¨gs
):

143 
£lf
.
	$di•©ch
(0, 
ˇŒback
, *
¨gs
)

145 
def
 
	$__ôî__
(
£lf
):

146 
£lf
.
__f
.
	$£ek
(
FûeHdr
.
__hdr_Àn__
)

148 
buf
 = 
£lf
.
__f
.
	$ªad
(
PktHdr
.
__hdr_Àn__
)

149 
nŸ
 
buf
: 

150 
hdr
 = 
£lf
.
	$__ph
(
buf
)

151 
buf
 = 
£lf
.
__f
.
	`ªad
(
hdr
.
ªc_Àn
 - 
PktHdr
.
__hdr_Àn__
)

152 
	`yõld
 (
hdr
.
ts_£c
 + (hdr.
ts_u£c
 / 1000000.0), 
buf
[:hdr.
ö˛_Àn
])

	@ssl.py

1 #$Id: 
s¶
.
py
 90 2014-04-02 22:06:23
Z
 
™dªwÊƒ
@
gmaû
.
com
 
$


2 #P‹ti⁄ 
C›yright
 2012 
GoogÀ
 
Inc
. 
AŒ
 
rights
 
ª£rved
.

3 #-*- 
codög
: 
utf
-8 -*-

5 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


7 
imp‹t
 

8 
imp‹t
 
böascii


10 
	g‰om
 . 
imp‹t
 
dpkt


11 
	g‰om
 . 
imp‹t
 
	gs¶_cùhîsuôes


13 #
#NŸê
‰om
 
A¥û
 2011: 
cde
...@
gmaû
.
com
 
added
 
code
 
th©
 
∑r£s
 
SSL3
/
TLS
 
mesßges
 
m‹e
 
ö
 
dïth
.

15 #
#Ju»2012: 
aÊìn‹
@
googÀ
.
com
 
modifõd
 
™d
 
exãnded
 
SSL
 
suµ‹t
 
fuπhî
.

19 #SSL 2.0 
is
 
dïªˇãd
 
ö
 
RFC
 6176

20 
˛ass
 
	$SSL2
(
dpkt
.
Packë
):

21 
__hdr__
 = (

27 
def
 
	$u≈ack
(
£lf
, 
buf
):

28 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

29 
£lf
.
Àn
 & 0x8000:

30 
n
 = 
£lf
.
Àn
 = self.len & 0x7FFF

31 
£lf
.
msg
, sñf.
d©a
 = sñf.d©a[:
n
], self.data[n:]

33 
n
 = 
£lf
.
Àn
 = self.len & 0x3FFF

34 
∑dÀn
 = 
	$‹d
(
£lf
.
d©a
[0])

35 
£lf
.
msg
 = sñf.
d©a
[1:1 + 
n
]

36 
£lf
.
∑d
 = sñf.
d©a
[1 + 
n
:1 +Ç + 
∑dÀn
]

37 
£lf
.
d©a
 = sñf.d©a[1 + 
n
 + 
∑dÀn
:]

40 #SSL 3.0 
is
 
dïªˇãd
 
ö
 
RFC
 7568

41 #U£ 
˛ass
 
TLS
 >
SSL
 3.0

42 
˛ass
 
	$TLS
(
dpkt
.
Packë
):

43 
__hdr__
 = (

49 
def
 
	$__öô__
(
£lf
, *
¨gs
, **
kw¨gs
):

50 
£lf
.
ªc‹ds
 = []

51 
dpkt
.
Packë
.
	$__öô__
(
£lf
, *
¨gs
, **
kw¨gs
)

54 
def
 
	$u≈ack
(
£lf
, 
buf
):

55 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

56 
poöãr
 = 0

57 
	`Àn
(
£lf
.
d©a
[
poöãr
:]) > 0:

58 
íd
 = 
poöãr
 + 5 + .
	`u≈ack
("!H", 
buf
[pointer+3:pointer+5])[0]

59 
£lf
.
ªc‹ds
.
	`≠≥nd
(
	$TLSRec‹d
(
buf
[
poöãr
:
íd
]))

60 
poöãr
 = 
íd


61 
£lf
.
d©a
 = sñf.d©a[
poöãr
:]

64 #SSLv3/
TLS
 
vîsi⁄s


65 
SSL3_V
 = 0x0300

66 
TLS1_V
 = 0x0301

67 
TLS11_V
 = 0x0302

68 
TLS12_V
 = 0x0303

70 
s¶3_vîsi⁄s_°r
 = {

71 
SSL3_V
: 'SSL3',

72 
TLS1_V
: 'TLS 1.0',

73 
TLS11_V
: 'TLS 1.1',

74 
TLS12_V
: 'TLS 1.2'

75 
	}
}

77 
SSL3_VERSION_BYTES
 = 
£t
((
b
'\x03\x00', b'\x03\x01', b'\x03\x02', b'\x03\x03'))

80 #AÀπ 
Àvñs


81 
	gSSL3_AD_WARNING
 = 1

82 
SSL3_AD_FATAL
 = 2

83 
Æît_Àvñ_°r
 = {

84 
SSL3_AD_WARNING
: 'SSL3_AD_WARNING',

85 
SSL3_AD_FATAL
: 'SSL3_AD_FATAL'

88 #SSL3 
Æît
 
des¸ùti⁄s


89 
SSL3_AD_CLOSE_NOTIFY
 = 0

90 
SSL3_AD_UNEXPECTED_MESSAGE
 = 10 #fatal

91 
SSL3_AD_BAD_RECORD_MAC
 = 20 #fatal

92 
SSL3_AD_DECOMPRESSION_FAILURE
 = 30 #fatal

93 
SSL3_AD_HANDSHAKE_FAILURE
 = 40 #fatal

94 
SSL3_AD_NO_CERTIFICATE
 = 41

95 
SSL3_AD_BAD_CERTIFICATE
 = 42

96 
SSL3_AD_UNSUPPORTED_CERTIFICATE
 = 43

97 
SSL3_AD_CERTIFICATE_REVOKED
 = 44

98 
SSL3_AD_CERTIFICATE_EXPIRED
 = 45

99 
SSL3_AD_CERTIFICATE_UNKNOWN
 = 46

100 
SSL3_AD_ILLEGAL_PARAMETER
 = 47 #fatal

102 #TLS1 
Æît
 
des¸ùti⁄s


103 
TLS1_AD_DECRYPTION_FAILED
 = 21

104 
TLS1_AD_RECORD_OVERFLOW
 = 22

105 
TLS1_AD_UNKNOWN_CA
 = 48 #fatal

106 
TLS1_AD_ACCESS_DENIED
 = 49 #fatal

107 
TLS1_AD_DECODE_ERROR
 = 50 #fatal

108 
TLS1_AD_DECRYPT_ERROR
 = 51

109 
TLS1_AD_EXPORT_RESTRICTION
 = 60 #fatal

110 
TLS1_AD_PROTOCOL_VERSION
 = 70 #fatal

111 
TLS1_AD_INSUFFICIENT_SECURITY
 = 71 #fatal

112 
TLS1_AD_INTERNAL_ERROR
 = 80 #fatal

113 
TLS1_AD_USER_CANCELLED
 = 90

114 
TLS1_AD_NO_RENEGOTIATION
 = 100

115 #/* 
codes
 110-114 
¨e
 
‰om
 
RFC3546
 */

116 
TLS1_AD_UNSUPPORTED_EXTENSION
 = 110

117 
TLS1_AD_CERTIFICATE_UNOBTAINABLE
 = 111

118 
TLS1_AD_UNRECOGNIZED_NAME
 = 112

119 
TLS1_AD_BAD_CERTIFICATE_STATUS_RESPONSE
 = 113

120 
TLS1_AD_BAD_CERTIFICATE_HASH_VALUE
 = 114

121 
TLS1_AD_UNKNOWN_PSK_IDENTITY
 = 115 #fatal

124 #M≠pög 
Æît
 
ty≥s
 
to
 
°rögs


125 
Æît_des¸ùti⁄_°r
 = {

126 
SSL3_AD_CLOSE_NOTIFY
: 'SSL3_AD_CLOSE_NOTIFY',

127 
SSL3_AD_UNEXPECTED_MESSAGE
: 'SSL3_AD_UNEXPECTED_MESSAGE',

128 
SSL3_AD_BAD_RECORD_MAC
: 'SSL3_AD_BAD_RECORD_MAC',

129 
SSL3_AD_DECOMPRESSION_FAILURE
: 'SSL3_AD_DECOMPRESSION_FAILURE',

130 
SSL3_AD_HANDSHAKE_FAILURE
: 'SSL3_AD_HANDSHAKE_FAILURE',

131 
SSL3_AD_NO_CERTIFICATE
: 'SSL3_AD_NO_CERTIFICATE',

132 
SSL3_AD_BAD_CERTIFICATE
: 'SSL3_AD_BAD_CERTIFICATE',

133 
SSL3_AD_UNSUPPORTED_CERTIFICATE
: 'SSL3_AD_UNSUPPORTED_CERTIFICATE',

134 
SSL3_AD_CERTIFICATE_REVOKED
: 'SSL3_AD_CERTIFICATE_REVOKED',

135 
SSL3_AD_CERTIFICATE_EXPIRED
: 'SSL3_AD_CERTIFICATE_EXPIRED',

136 
SSL3_AD_CERTIFICATE_UNKNOWN
: 'SSL3_AD_CERTIFICATE_UNKNOWN',

137 
SSL3_AD_ILLEGAL_PARAMETER
: 'SSL3_AD_ILLEGAL_PARAMETER',

138 
TLS1_AD_DECRYPTION_FAILED
: 'TLS1_AD_DECRYPTION_FAILED',

139 
TLS1_AD_RECORD_OVERFLOW
: 'TLS1_AD_RECORD_OVERFLOW',

140 
TLS1_AD_UNKNOWN_CA
: 'TLS1_AD_UNKNOWN_CA',

141 
TLS1_AD_ACCESS_DENIED
: 'TLS1_AD_ACCESS_DENIED',

142 
TLS1_AD_DECODE_ERROR
: 'TLS1_AD_DECODE_ERROR',

143 
TLS1_AD_DECRYPT_ERROR
: 'TLS1_AD_DECRYPT_ERROR',

144 
TLS1_AD_EXPORT_RESTRICTION
: 'TLS1_AD_EXPORT_RESTRICTION',

145 
TLS1_AD_PROTOCOL_VERSION
: 'TLS1_AD_PROTOCOL_VERSION',

146 
TLS1_AD_INSUFFICIENT_SECURITY
: 'TLS1_AD_INSUFFICIENT_SECURITY',

147 
TLS1_AD_INTERNAL_ERROR
: 'TLS1_AD_INTERNAL_ERROR',

148 
TLS1_AD_USER_CANCELLED
: 'TLS1_AD_USER_CANCELLED',

149 
TLS1_AD_NO_RENEGOTIATION
: 'TLS1_AD_NO_RENEGOTIATION',

150 
TLS1_AD_UNSUPPORTED_EXTENSION
: 'TLS1_AD_UNSUPPORTED_EXTENSION',

151 
TLS1_AD_CERTIFICATE_UNOBTAINABLE
: 'TLS1_AD_CERTIFICATE_UNOBTAINABLE',

152 
TLS1_AD_UNRECOGNIZED_NAME
: 'TLS1_AD_UNRECOGNIZED_NAME',

153 
TLS1_AD_BAD_CERTIFICATE_STATUS_RESPONSE
: 'TLS1_AD_BAD_CERTIFICATE_STATUS_RESPONSE',

154 
TLS1_AD_BAD_CERTIFICATE_HASH_VALUE
: 'TLS1_AD_BAD_CERTIFICATE_HASH_VALUE',

155 
TLS1_AD_UNKNOWN_PSK_IDENTITY
: 'TLS1_AD_UNKNOWN_PSK_IDENTITY'

159 #°ru˘ 
f‹m©
 
°rögs
 
∑rsög
 
buf„r
 
Àngths


161 
_SIZE_FORMATS
 = ['!B', '!H', '!I', '!I']

164 
def
 
	$∑r£_v¨übÀ_¨øy
(
buf
, 
Ànbyãs
):

166 
P¨£
 
™
 
¨øy
 
des¸ibed
 
usög
 
the
 'Ty≥Çame<x..y>' 
sy¡ax
 
‰om
Åhê
•ec


167 
Ród
 
a
 
Àngth
 
©
 
the
 
°¨t
 
of
 
buf
, 
™d
 
ªtu∫s
 
th©
 
m™y
 
byãs


168 
a·î
, 
ö
 
a
 
tu∂e
 
wôh
 
the
 
TOTAL
 
byãs
 
	`c⁄sumed
 (
ö˛udög
Åhê
size
). 
This


169 
d€s
 
nŸ
 
check
 
th©
 
the
 
¨øy
 
is
Åhê
right
 
Àngth
 
™y
 
giví
 
d©©y≥
.

171 #fú° 
have
 
to
 
figuª
 
out
 
how
Åÿ
∑r£
 
Àngth


172 
as£π
 
Ànbyãs
 <4 #¥ëty 
suª
 4 
is
 
impossibÀ
, 
too


173 
size_f‹m©
 = 
_SIZE_FORMATS
[
Ànbyãs
 - 1]

174 
∑ddög
 = 
b
'\x00' 
Ànbyãs
 == 3 b''

175 #ªad 
off
 
the
 
Àngth


176 
size
 = .
	`u≈ack
(
size_f‹m©
, 
∑ddög
 + 
buf
[:
Ànbyãs
])[0]

177 #ªad 
the
 
a˘uÆ
 
d©a


178 
d©a
 = 
buf
[
Ànbyãs
:Ànbyã†+ 
size
]

179 #i‡
	`Àn
(
d©a
Ë!
size
: 
ösufficõ¡
 data

180  
d©a
, 
size
 + 
Ànbyãs


183 
def
 
	$∑r£_exãnsi⁄s
(
buf
):

185 
P¨£
 
TLS
 
exãnsi⁄s
 
ö
 
∑s£d
 
buf
. 
Rëu∫s
 
™
 
‹dîed
 
li°
 
of
 
exãnsi⁄
 
tu∂es
 
wôh


186 
‹döÆ
 
exãnsi⁄
 
ty≥
 
as
 
fú°
 
vÆue
 
™d
Éxãnsi⁄ 
d©a
á†
£c⁄d
 value.

187 
Pas£d
 
buf
 
mu°
 
°¨t
 
wôh
 
the
 2-
byã
 
exãnsi⁄s
 
Àngth
 
TLV
.

188 
hâp
:

190 
exãnsi⁄s_Àngth
 = .
	`u≈ack
('!H', 
buf
[:2])[0]

191 
exãnsi⁄s
 = []

193 
poöãr
 = 2

194 
poöãr
 < 
exãnsi⁄s_Àngth
:

195 
ext_ty≥
 = .
	`u≈ack
('!H', 
buf
[
poöãr
:pointer+2])[0]

196 
poöãr
 += 2

197 
ext_d©a
, 
∑r£d
 = 
	$∑r£_v¨übÀ_¨øy
(
buf
[
poöãr
:], 2)

198 
exãnsi⁄s
.
	`≠≥nd
((
ext_ty≥
, 
ext_d©a
))

199 
poöãr
 +
∑r£d


200  
exãnsi⁄s


203 
˛ass
 
	$SSL3Ex˚±i⁄
(
Ex˚±i⁄
):

204 
∑ss


207 
˛ass
 
	$TLSRec‹d
(
dpkt
.
Packë
):

210 
SSLv3
 
‹
 
TLSv1
+ 
∑ckë
.

212 
In
 
addôi⁄
 
to
 
the
 
fõlds
 
•ecifõd
 
ö
Åhê
hódî
, 
thîe
 
¨e


213 
com¥es£d
 
™d
 
de¸y±ed
 
fõlds
, 
ödiˇtög
 
whëhî
, 
ö
 
the
 
œnguage


214 
of
 
the
 
•ec
, 
this
 
is
 
a
 
TLSPœöãxt
, 
TLSCom¥es£d
, 
‹


215 
TLSCùhîãxt
. 
The
 
≠∂iˇti⁄
 
wûl
 
have
 
to
 
figuª
 
out
 
whí
 
ô
's

216 
≠¥›rüã
 
to
 
ch™ge
 
the£
 
vÆues
.

219 
__hdr__
 = (

225 
def
 
	$__öô__
(
£lf
, *
¨gs
, **
kw¨gs
):

226 #assumê
∂aöãxt
 
u∆ess
 
•ecifõd
 
Ÿhîwi£
 
ö
 
¨gumíts


227 
£lf
.
com¥es£d
 = 
kw¨gs
.
	`p›
('com¥es£d', 
FÆ£
)

228 
£lf
.
í¸y±ed
 = 
kw¨gs
.
	`p›
('í¸y±ed', 
FÆ£
)

229 #∑ª¡ 
c⁄°ru˘‹


230 
dpkt
.
Packë
.
	$__öô__
(
£lf
, *
¨gs
, **
kw¨gs
)

231 #makê
suª
 
Àngth
 
™d
 
d©a
 
¨e
 
c⁄si°ít


232 
£lf
.
Àngth
 = 
	$Àn
(
£lf
.
d©a
)

234 
def
 
	$u≈ack
(
£lf
, 
buf
):

235 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

236 
hódî_Àngth
 = 
£lf
.
__hdr_Àn__


237 
£lf
.
d©a
 = 
buf
[
hódî_Àngth
:hódî_Àngth + sñf.
Àngth
]

238 #makê
suª
 
buf„r
 
was
 
íough


239 
	`Àn
(
£lf
.
d©a
Ë!£lf.
Àngth
:

240 
øi£
 
dpkt
.
	`NìdD©a
('TLSRecord data wasÅoo short.')

241 #assumê
com¥es£d
 
™d
 
í¸y±ed
 
whí
 
ô
's beenÖarsed from

242 #øw 
d©a


243 
£lf
.
com¥es£d
 = 
True


244 
£lf
.
í¸y±ed
 = 
True


247 
˛ass
 
	$TLSCh™geCùhîS≥c
(
dpkt
.
Packë
):

250 
Ch™geCùhîS≥c
 
mesßge
 
is
 
ju°
 
a
 
sögÀ
 
byã
 
wôh
 
vÆue
 1

253 
__hdr__
 = (('type', 'B', 1),)

256 
˛ass
 
	$TLSAµD©a
(
°r
):

259 
As
 
Ár
 
as
 
TLSRec‹d
 
is
 
c⁄˚∫ed
, 
AµD©a
 i†
ju°
 
™
 
›aque
 
blob
.

262 
∑ss


265 
˛ass
 
	$TLSAÀπ
(
dpkt
.
Packë
):

266 
__hdr__
 = (

272 
˛ass
 
	$TLSHñloReque°
(
dpkt
.
Packë
):

273 
__hdr__
 = 
	$tu∂e
()

276 
˛ass
 
	$TLSClõ¡Hñlo
(
dpkt
.
Packë
):

277 
__hdr__
 = (

280 Ë#thê
ª°
 
is
 
v¨übÀ
-
Àngth
 
™d
 
has
 
to
 
be
 
d⁄e
 
m™uÆly


282 
def
 
	$u≈ack
(
£lf
, 
buf
):

283 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

284 #now 
£ssi⁄
, 
cùhî
 
suôes
, 
exãnsi⁄s
 
¨e
 
ö
 
£lf
.
d©a


285 
£lf
.
£ssi⁄_id
, 
poöãr
 = 
	$∑r£_v¨übÀ_¨øy
(
£lf
.
d©a
, 1)

286 #¥öà'poöãr',
poöãr


287 #h™dÀ 
cùhîsuôes


288 
cùhîsuôes
, 
∑r£d
 = 
	$∑r£_v¨übÀ_¨øy
(
£lf
.
d©a
[
poöãr
:], 2)

289 
poöãr
 +
∑r£d


290 
£lf
.
num_cùhîsuôes
 = 
	`Àn
(
cùhîsuôes
) / 2

291 #check 
	`Àn
(
cùhîsuôes
) % 2 == 0 ?

292 #com¥essi⁄ 
mëhods


293 
com¥essi⁄_mëhods
, 
∑r£d
 = 
	$∑r£_v¨übÀ_¨øy
(

294 
£lf
.
d©a
[
poöãr
:], 1)

295 
poöãr
 +
∑r£d


296 
£lf
.
num_com¥essi⁄_mëhods
 = 
∑r£d
 - 1

297 
£lf
.
com¥essi⁄_mëhods
 = 
	$m≠
(
‹d
, 
com¥essi⁄_mëhods
)

298 #P¨£ 
exãnsi⁄s
 
¥e£¡


299 
	`Àn
(
£lf
.
d©a
[
poöãr
:]) >= 6:

300 
£lf
.
exãnsi⁄s
 = 
	$∑r£_exãnsi⁄s
(
£lf
.
d©a
[
poöãr
:])

303 
˛ass
 
	$TLSSîvîHñlo
(
dpkt
.
Packë
):

304 
__hdr__
 = (

307 Ë#£ssi⁄ 
is
 
v¨übÀ
, 
f‹cög
 
ª°
 
to
 
be
 
m™uÆ


309 
def
 
	$u≈ack
(
£lf
, 
buf
):

310 
åy
:

311 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

312 
£lf
.
£ssi⁄_id
, 
poöãr
 = 
	$∑r£_v¨übÀ_¨øy
(
£lf
.
d©a
, 1)

313 #sögÀ 
cùhî
 
suôe


314 
£lf
.
cùhî_suôe
 = .
	`u≈ack
('!H', sñf.
d©a
[
poöãr
:pointer + 2])[0]

315 
poöãr
 += 2

316 #sögÀ 
com¥essi⁄
 
mëhod


317 
£lf
.
com¥essi⁄
 = .
	`u≈ack
('!B', sñf.
d©a
[
poöãr
:pointer + 1])[0]

318 
poöãr
 += 1

319 #P¨£ 
exãnsi⁄s
 
¥e£¡


320 
	`Àn
(
£lf
.
d©a
[
poöãr
:]) >= 6:

321 
£lf
.
exãnsi⁄s
 = 
	$∑r£_exãnsi⁄s
(
£lf
.
d©a
[
poöãr
:])

322 
ex˚±
 .
îr‹
:

323 #¥obably 
d©a
 
too
 

324 
øi£
 
dpkt
.
NìdD©a


327 
˛ass
 
	$TLSCîtifiˇã
(
dpkt
.
Packë
):

328 
__hdr__
 = 
	$tu∂e
()

330 
def
 
	$u≈ack
(
£lf
, 
buf
):

331 
åy
:

332 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

333 
Æl_˚πs
, 
Æl_˚πs_Àn
 = 
	$∑r£_v¨übÀ_¨øy
(
£lf
.
d©a
, 3)

334 
£lf
.
˚πifiˇãs
 = []

335 
poöãr
 = 3

336 
poöãr
 < 
Æl_˚πs_Àn
:

337 
˚π
, 
∑r£d
 = 
	$∑r£_v¨übÀ_¨øy
(
£lf
.
d©a
[
poöãr
:], 3)

338 
£lf
.
˚πifiˇãs
.
	`≠≥nd
((
˚π
))

339 
poöãr
 +
∑r£d


340 
ex˚±
 .
îr‹
:

341 
øi£
 
dpkt
.
NìdD©a


344 
˛ass
 
	$TLSUnknownH™dshake
(
dpkt
.
Packë
):

345 
__hdr__
 = 
	$tu∂e
()

348 
TLSSîvîKeyExch™ge
 = 
TLSUnknownH™dshake


349 
TLSCîtifiˇãReque°
 = 
TLSUnknownH™dshake


350 
TLSSîvîHñloD⁄e
 = 
TLSUnknownH™dshake


351 
TLSCîtifiˇãVîify
 = 
TLSUnknownH™dshake


352 
TLSClõ¡KeyExch™ge
 = 
TLSUnknownH™dshake


353 
TLSFöished
 = 
TLSUnknownH™dshake


356 #m≠pög 
of
 
h™dshake
 
ty≥
 
ids
 
to
 
theú
 
«mes


357 #™d 
the
 
˛as£s
 
th©
 
im∂emít
 
them


358 
HANDSHAKE_TYPES
 = {

359 0: ('HñloReque°', 
TLSHñloReque°
),

360 1: ('Clõ¡Hñlo', 
TLSClõ¡Hñlo
),

361 2: ('SîvîHñlo', 
TLSSîvîHñlo
),

362 11: ('Cîtifiˇã', 
TLSCîtifiˇã
),

363 12: ('SîvîKeyExch™ge', 
TLSSîvîKeyExch™ge
),

364 13: ('CîtifiˇãReque°', 
TLSCîtifiˇãReque°
),

365 14: ('SîvîHñloD⁄e', 
TLSSîvîHñloD⁄e
),

366 15: ('CîtifiˇãVîify', 
TLSCîtifiˇãVîify
),

367 16: ('Clõ¡KeyExch™ge', 
TLSClõ¡KeyExch™ge
),

368 20: ('Föished', 
TLSFöished
),

369 
	}
}

372 
˛ass
 
	$TLSH™dshake
(
dpkt
.
Packë
):

375 
A
 
TLS
 
H™dshake
 
mesßge


377 
This
 
g€s
 
Æl
 
mesßges
 
íˇpsuœãd
 
ö
 
the
 
Rec‹d
 
œyî
, 
but
 
e•ecüŒy


378 
imp‹è¡
 
h™dshakes
 
™d
 
≠p
 
d©a
: 
A
 
mesßge
 
may
 
be
 
•ªad
 
a¸oss
 
a


379 
numbî
 
of
 
TLSRec‹ds
, 
ö
 
addôi⁄
 
to
 
the
 
possibûôy
 o‡
thîe
 
beög
 
m‹e


380 
th™
 
⁄e
 
ö
 
a
 
giví
 
Rec‹d
. 
You
 
have
 
to
 
put
 
togëhî
 
the
 
c⁄ã¡s
 
of


381 
TLSRec‹d
's yourself.

384 #°ru˘.
u≈ack
 
ˇn
't handleÅhe 3-byte int, so weÖarse itás bytes

385 #(
™d
 
°‹e
 
ô
 
as
 
byãs
 
so
 
dpkt
 
d€¢
't get confused),ándÅurn it into

386 #™ 
ö
 
a
 
u£r
-
Ácög
 
¥›îty


387 
__hdr__
 = (

392 
def
 
	$u≈ack
(
£lf
, 
buf
):

393 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

394 #Waô, 
might
 
thîe
 
be
 
m‹e
 
th™
 
⁄e
 
mesßge
 
of
 
£lf
.
ty≥
?

395 
embedded_ty≥
 = 
HANDSHAKE_TYPES
.
	$gë
(
£lf
.
ty≥
, 
N⁄e
)

396 
embedded_ty≥
 
is
 
N⁄e
:

397 
øi£
 
	`SSL3Ex˚±i⁄
('Unknown or invalid handshakeÅype %d' %

398 
£lf
.
ty≥
)

399 #⁄ly 
èke
 
the
 
right
 
numbî
 
of
 
byãs


400 
£lf
.
d©a
 = sñf.d©a[:£lf.
Àngth
]

401 
	`Àn
(
£lf
.
d©a
Ë!£lf.
Àngth
:

402 
øi£
 
dpkt
.
NìdD©a


403 #gë 
˛ass
 
out
 
of
 
embedded_ty≥
 
tu∂e


404 
£lf
.
d©a
 = 
embedded_ty≥
[1](self.data)

406 @
¥›îty


407 
def
 
	$Àngth
(
£lf
):

408  .
	`u≈ack
('!I', 
b
'\x00' + 
£lf
.
Àngth_byãs
)[0]

411 
RECORD_TYPES
 = {

412 20: 
TLSCh™geCùhîS≥c
,

413 21: 
TLSAÀπ
,

414 22: 
TLSH™dshake
,

415 23: 
TLSAµD©a
,

416 
	}
}

419 
˛ass
 
	$SSLFa˘‹y
(
obje˘
):

420 
def
 
	$__√w__
(
˛s
, 
buf
):

421 
v
 = 
buf
[1:3]

422 
v
 
ö
 
SSL3_VERSION_BYTES
:

423  
	$TLSRec‹d
(
buf
)

424 #SSL2 
has
 
no
 
ch¨a˘îi°ic
 
hódî
 
‹
 
magic
 
byãs
, 
so
 
we
 
ju°
 
assume


425 #th© 
the
 
msg
 
is
 
™
 
SSL2
 msg 
ô
 i†
nŸ
 
dëe˘ed
 
as
 
SSL3
+

426  
	$SSL2
(
buf
)

429 
def
 
	$és_mu…i_Á˘‹y
(
buf
):

431 
Aâem±
 
to
 
∑r£
 
⁄e
 
‹
 
m‹e
 
TLSRec‹d
's out of buf

433 
Args
:

434 
buf
: 
°rög
 
c⁄èöög
 
SSL
/
TLS
 
mesßges
. 
May
 
have
 
™
 
öcom∂ëe
 
ªc‹d


435 
⁄
 
the
 
íd


437 
Rëu∫s
:

438 [
TLSRec‹d
]

439 , 
tŸÆ
 
byãs
 
c⁄sumed
, !
	$Àn
(
buf
Ë
™
 
öcom∂ëe
 
ªc‹d
 
was
 
À·
 
©


440 
the
 
íd
.

442 
Rai£s
 
SSL3Ex˚±i⁄
.

444 
i
, 
n
 = 0, 
	$Àn
(
buf
)

445 
msgs
 = []

446 
i
 + 5 <
n
:

447 
v
 = 
buf
[
i
 + 1:i + 3]

448 
v
 
ö
 
SSL3_VERSION_BYTES
:

449 
åy
:

450 
msg
 = 
	$TLSRec‹d
(
buf
[
i
:])

451 
msgs
.
	$≠≥nd
(
msg
)

452 
ex˚±
 
dpkt
.
NìdD©a
:

455 
øi£
 
	`SSL3Ex˚±i⁄
('Bad TLS vîsi⁄ i¿buf: %r' % 
buf
[
i
:i + 5])

456 
i
 +
	$Àn
(
msg
)

457  
msgs
, 
i


459 
_hexdecode
 = 
böascii
.
a2b_hex


462 
˛ass
 
	$Te°TLS
(
obje˘
):

465 
Te°
 
basic
 
TLS
 
fun˘i⁄Æôy
.

466 
Te°
 
th©
 
óch
 
TLSRec‹d
 
is
 
c‹ª˘ly
 
discovîed
 
™d
 
added
 
to
 
TLS
.
ªc‹ds


469 @
˛assmëhod


470 
def
 
	$£tup_˛ass
(
˛s
):

471 
˛s
.
p
 = 
	`TLS
(
	`_hexdecode
('1603000206010002020303585c2ff72a6599498771f59514f10af68c68f9ef30d0dadc9e1af64d1091476a000084c02bc02cc086c087c009c023c00ac024c072c073c008c007c02fc030c08ac08bc013c027c014c028c076c077c012c011009c009dc07ac07b002f003c0035003d004100ba008400c0000a00050004009e009fc07cc07d003300670039006b004500be008800c4001600a200a3c080c081003200400038006a004400bd008700c3001300660100015500050005010000000000000011000f00000c7777772e69616e612e6f7267ff0100010000230000000a000c000a00130015001700180019000b00020100000d001c001a0401040204030501050306010603030103020303020102020203001500f400f20000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'))

473 
def
 
	$ã°_ªc‹ds_Àngth
(
£lf
):

474 
	`as£π
 (
	`Àn
(
£lf
.
p
.
ªc‹ds
) == 1)

476 
def
 
	$ã°_ªc‹d_ty≥
(
£lf
):

477 
	$as£π
 (
£lf
.
p
.
ªc‹ds
[0].
ty≥
 == 22)

479 
def
 
	$ã°_ªc‹d_vîsi⁄
(
£lf
):

480 
	$as£π
 (
£lf
.
p
.
ªc‹ds
[0].
vîsi⁄
 == 768)

483 
˛ass
 
	$Te°TLSRec‹d
(
obje˘
):

486 
Te°
 
basic
 
TLSRec‹d
 
fun˘i⁄Æôy


487 
F‹
 
this
 
ã°
, 
the
 
c⁄ã¡s
 
of
Åhê
ªc‹d
 
d€¢
'àm©ãr, sö˚ we'
ª
 
nŸ
 
∑rsög
Åhê
√xt
 
œyî
.

490 @
˛assmëhod


491 
def
 
	$£tup_˛ass
(
˛s
):

492 #add 
some
 
exåa
 
d©a
, 
to
 
make
 
suª
 
Àngth
 
is
 
∑r£d
 
c‹ª˘ly


493 
˛s
.
p
 = 
	`TLSRec‹d
(
b
'\x17\x03\x01\x00\x08abcdefghzzzzzzzzzzz')

495 
def
 
	$ã°_c⁄ã¡_ty≥
(
£lf
):

496 
	$as£π
 (
£lf
.
p
.
ty≥
 == 23)

498 
def
 
	$ã°_vîsi⁄
(
£lf
):

499 
	$as£π
 (
£lf
.
p
.
vîsi⁄
 == 0x0301)

501 
def
 
	$ã°_Àngth
(
£lf
):

502 
	$as£π
 (
£lf
.
p
.
Àngth
 == 8)

504 
def
 
	$ã°_d©a
(
£lf
):

505 
	`as£π
 (
£lf
.
p
.
d©a
 =
b
'abcdefgh')

507 
def
 
	$ã°_öôül_Êags
(
£lf
):

508 
	$as£π
 (
£lf
.
p
.
com¥es£d
 =
True
)

509 
	$as£π
 (
£lf
.
p
.
í¸y±ed
 =
True
)

511 
def
 
	$ã°_ª∑ck
(
£lf
):

512 
p2
 = 
	`TLSRec‹d
(
ty≥
=23, 
vîsi⁄
=0x0301, 
d©a
=
b
'abcdefgh')

513 
	$as£π
 (
p2
.
ty≥
 == 23)

514 
	$as£π
 (
p2
.
vîsi⁄
 == 0x0301)

515 
	$as£π
 (
p2
.
Àngth
 == 8)

516 
	`as£π
 (
p2
.
d©a
 =
b
'abcdefgh')

517 
	`as£π
 (
p2
.
	`∑ck
(Ë=
£lf
.
p
.
	$∑ck
())

519 
def
 
	$ã°_tŸÆ_Àngth
(
£lf
):

520 #th© 
	`Àn
(
p
Ë
ö˛udes
 
hódî


521 
	`as£π
 (
	`Àn
(
£lf
.
p
) == 13)

523 
def
 
	$ã°_øi£s_√ed_d©a_whí_buf_is_sh‹t
(
£lf
):

524 
imp‹t
 
pyã°


525 
pyã°
.
	`øi£s
(
dpkt
.
NìdD©a
, 
TLSRec‹d
, 
b
'\x16\x03\x01\x00\x10abc')

528 
˛ass
 
	$Te°TLSCh™geCùhîS≥c
(
obje˘
):

532 @
˛assmëhod


533 
def
 
	$£tup_˛ass
(
˛s
):

534 
˛s
.
p
 = 
	`TLSCh™geCùhîS≥c
(
b
'\x01')

536 
def
 
	$ã°_∑r£s
(
£lf
):

537 
	$as£π
 (
£lf
.
p
.
ty≥
 == 1)

539 
def
 
	$ã°_tŸÆ_Àngth
(
£lf
):

540 
	`as£π
 (
	`Àn
(
£lf
.
p
) == 1)

543 
˛ass
 
	$Te°TLSAµD©a
(
obje˘
):

547 
def
 
	$ã°_vÆue
(
£lf
):

548 
d
 = 
	`TLSAµD©a
('abcdefgh')

549 
	`as£π
 (
d
 == 'abcdefgh')

552 
˛ass
 
	$Te°TLSH™dshake
(
obje˘
):

553 @
˛assmëhod


554 
def
 
	$£tup_˛ass
(
˛s
):

555 
˛s
.
h
 = 
	`TLSH™dshake
(
b
'\x00\x00\x00\x01\xff')

557 
def
 
	$ã°_¸óãd_öside_mesßge
(
£lf
):

558 
	`as£π
 (
	`isö°™˚
(
£lf
.
h
.
d©a
, 
TLSHñloReque°
Ë=
True
)

560 
def
 
	$ã°_Àngth
(
£lf
):

561 
	$as£π
 (
£lf
.
h
.
Àngth
 == 0x01)

563 
def
 
	$ã°_øi£s_√ed_d©a
(
£lf
):

564 
imp‹t
 
pyã°


565 
pyã°
.
	`øi£s
(
dpkt
.
NìdD©a
, 
TLSH™dshake
, 
b
'\x00\x00\x01\x01')

568 
˛ass
 
	$Te°Clõ¡Hñlo
(
obje˘
):

572 @
˛assmëhod


573 
def
 
	$£tup_˛ass
(
˛s
):

574 
˛s
.
d©a
 = 
	`_hexdecode
(

575 
b
"01000199" #h™dshakê
hódî


576 
b
"0301" #version

577 
b
"5008220ce5e0e78b6891afe204498c9363feffbe03235a2d9e05b7d990eb708d" #rand

578 
b
"2009bc0192e008e6Á8„47998fˇ91311ba30ddde14a9587dc674b11c3d3e5ed1" #£ssi⁄ 
id


579 #cùhî 
suôes


580 
b
"005400ffc00ac0140088008700390038c00fc00500840035c007c009c011c0130045004400330032c00cc00ec002c0040096004100050004002fc008c01200160013c00dc003feff000ac006c010c00bc00100020001"

581 
b
"0100" #com¥esssi⁄ 
mëhods


583 
b
"00fc0000000e000c0000096c6f63616c686f7374000a00080006001700180019000b00020100002300d0a50b2e9f618a9ea9bf493ef49b421835cd2f6b05bbe1179d8edf70d58c33d656e8696d36d7e7e0b9d3ecc0e4de339552fa06c64c0fcb550a334bc43944e2739ca342d15a9ebbe981ac87a0d38160507d47af09bdc16c5f0ee4cdceea551539382333226048a026d3a90a0535f4a64236467db8fee22b041af986ad0f253bc369137cd8d8cd061925461d7f4d7895ca9a4181ab554dad50360ac31860e971483877c9335ac1300c5e78f3e56f3b8e0fc16358fcaceefd5c8d8aaae7b35be116f8832856ca61144fcdd95e071b94d0cf7233740000"

584 
b
"FFFFFFFFFFFFFFFF"Ë#øndom 
g¨bage


585 
˛s
.
p
 = 
	$TLSH™dshake
(
˛s
.
d©a
)

587 
def
 
	$ã°_˛õ¡_hñlo_c⁄°ru˘ed
(
£lf
):

589 #¥öà
£lf
.
p


590 
	`as£π
 (
	`isö°™˚
(
£lf
.
p
.
d©a
, 
TLSClõ¡Hñlo
Ë=
True
)

592 #de‡
	`ã°Clõ¡D©eC‹ª˘
(
£lf
):

593 #£lf.
	`as£πEquÆ
(
£lf
.
p
.
øndom_unixtime
, 1342710284)

595 
def
 
	$ã°_˛õ¡_øndom_c‹ª˘
(
£lf
):

596 
	`as£π
 (
£lf
.
p
.
d©a
.
øndom
 =
	`_hexdecode
(
b
'5008220ce5e0e78b6891afe204498c9363feffbe03235a2d9e05b7d990eb708d'))

598 
def
 
	$ã°_cùhî_suôe_Àngth
(
£lf
):

599 #wê
w⁄
't botherÅestingÅhe identity ofÉach cipher suite inÅheÜist.

600 
	$as£π
 (
£lf
.
p
.
d©a
.
num_cùhîsuôes
 == 42)

601 #£lf.
	`as£πEquÆ
(
	`Àn
(
£lf
.
p
.
cùhîsuôes
), 42)

603 
def
 
	$ã°_£ssi⁄_id
(
£lf
):

604 
	`as£π
 (
£lf
.
p
.
d©a
.
£ssi⁄_id
 =
	`_hexdecode
(
b
'09bc0192e008e6fa8fe47998fca91311ba30ddde14a9587dc674b11c3d3e5ed1'))

606 
def
 
	$ã°_com¥essi⁄_mëhods
(
£lf
):

607 
	$as£π
 (
£lf
.
p
.
d©a
.
num_com¥essi⁄_mëhods
 == 1)

609 
def
 
	$ã°_tŸÆ_Àngth
(
£lf
):

610 
	`as£π
 (
	`Àn
(
£lf
.
p
) == 413)

613 
˛ass
 
	$Te°SîvîHñlo
(
obje˘
):

617 @
˛assmëhod


618 
def
 
	$£tup_˛ass
(
˛s
):

619 
˛s
.
d©a
 = 
	`_hexdecode
(

620 
b
'0200004d03015008220c8ec43c5462315a7c99f5d5b6bff009ad285b51dc18485f352e9fdecd2009bc0192e008e6fa8fe47998fca91311ba30ddde14a9587dc674b11c3d3e5ed10002000005ff01000100')

621 
˛s
.
p
 = 
	$TLSH™dshake
(
˛s
.
d©a
)

623 
def
 
	$ã°_c⁄°ru˘ed
(
£lf
):

624 
	`as£π
 (
	`isö°™˚
(
£lf
.
p
.
d©a
, 
TLSSîvîHñlo
Ë=
True
)

626 #de‡
	`ã°D©eC‹ª˘
(
£lf
):

627 #£lf.
	`as£πEquÆ
(
£lf
.
p
.
øndom_unixtime
, 1342710284)

629 
def
 
	$ã°_øndom_c‹ª˘
(
£lf
):

630 
	`as£π
 (
£lf
.
p
.
d©a
.
øndom
 =
	`_hexdecode
(
b
'5008220c8ec43c5462315a7c99f5d5b6bff009ad285b51dc18485f352e9fdecd'))

632 
def
 
	$ã°_cùhî_suôe
(
£lf
):

633 
	`as£π
 (
s¶_cùhîsuôes
.
BY_CODE
[
£lf
.
p
.
d©a
.
cùhî_suôe
].
«me
 == 'TLS_RSA_WITH_NULL_SHA')

635 
def
 
	$ã°_tŸÆ_Àngth
(
£lf
):

636 
	`as£π
 (
	`Àn
(
£lf
.
p
) == 81)

639 
˛ass
 
	$Te°TLSCîtifiˇã
(
obje˘
):

643 @
˛assmëhod


644 
def
 
	$£tup_˛ass
(
˛s
):

645 
˛s
.
p
 = 
	`TLSH™dshake
(
	`_hexdecode
('0b000b45000b42000687308206833082056ba003020102021009cabbe2191c8f569dd4b6dd250f21d8300d06092a864886f70d01010b05003070310b300906035504061302555331153013060355040a130c446967694365727420496e6331193017060355040b13107777772e64696769636572742e636f6d312f302d06035504031326446967694365727420534841322048696768204173737572616e636520536572766572204341301e170d3134313032373030303030305a170d3138303130333132303030305a3081a3310b3009060355040613025553311330110603550408130a43616c69666f726e6961311430120603550407130b4c6f7320416e67656c6573313c303a060355040a1333496e7465726e657420436f72706f726174696f6e20666f722041737369676e6564204e616d657320616e64204e756d6265727331163014060355040b130d4954204f7065726174696f6e733113301106035504030c0a2a2e69616e612e6f726730820222300d06092a864886f70d01010105000382020f003082020a02820201009dbdfddeb5cae53a559747e2fda63728e4aba60f18b79a69f03310bf0164e5ee7db6b15bf56df23fddbae6a1bb38449b8c883f18102bbd8bb655ac0e2dac2ee3ed5cf4315868d2c598068284854b24894dcd4bd37811f0ad3a282cd4b4e599ffd07d8d2d3f2478554f81020b320ee12f44948e2ea1edbc990b830ca5cca6b4a839fb27b51850c9847eac74f26609eb24365b9751fb1c3208f56913bacbcae49201347c78b7e54a9d99979404c37f00fb65db849fd75e3a68770c30f2abe65b33256fb59b450050b00d8139d4d80d36f7bc46daf303e48f0f0791b2fdd72ec60b2cb3ad533c3f288c9c194e49337a69c496731f086d4f1f9825900713e2a551d05cb6057567850d91e6001c4ce27176f0957873a95b880acbec19e7bd9bcf1286d0452b73789c41905dd470971cd73aea52c77b080cd779af58234f337225c26f87a8c13e2a65e9dd4e03a5b41d7e06b3353f38129b2327a531ec9627a21dc423733aa029d4989448ba3322891c1a5690ddf2d25c8ec8aaa894b14aa92130c6b6d969a21ff671b60c4c923a94a93ea1dd0492c93393ca6edd61f33ca77e9208d01d6bd15107662ec088733df4c876a7e1608b82973a0f7592e84ed15579d181e79024ae8a7e4b9f0078eb2005b23f9d09a1df1bbc7de2a5a6085a3646d9fadb0e9da273a5f403cdd42831ce6f0ca46889585602bb8bc36bb3be861ff6d1a62e350203010001a38201e3308201df301f0603551d230418301680145168ff90af0207753cccd9656462a212b859723b301d0603551d0e04160414c7d0acef898b20e4b914668933032394f6bf3a61301f0603551d1104183016820a2a2e69616e612e6f7267820869616e612e6f7267300e0603551d0f0101ff0404030205a0301d0603551d250416301406082b0601050507030106082b0601050507030230750603551d1f046e306c3034a032a030862e687474703a2f2f63726c332e64696769636572742e636f6d2f736861322d68612d7365727665722d67332e63726c3034a032a030862e687474703a2f2f63726c342e64696769636572742e636f6d2f736861322d68612d7365727665722d67332e63726c30420603551d20043b3039303706096086480186fd6c0101302a302806082b06010505070201161c68747470733a2f2f7777772e64696769636572742e636f6d2f43505330818306082b0601050507010104773075302406082b060105050730018618687474703a2f2f6f6373702e64696769636572742e636f6d304d06082b060105050730028641687474703a2f2f636163657274732e64696769636572742e636f6d2f446967694365727453484132486967684173737572616e636553657276657243412e637274300c0603551d130101ff04023000300d06092a864886f70d01010b0500038201010070314c38e7c02fd80810500b9df6dae85de9b23e29fbd68bfdb5f23411c89acfaf9ae05af9123a8aa6bce6954a4e68dc7cfc480a65d76f229c4bd5f5674b0c9ac6d06a37a1a1c145c3956120b8efe67c887ab4ff7d6aa950ff3698f27c4a19d59d93a39aca5a7b6d6c75e34974e50f5a590005b3cb665ddbd7074f9fcbcbf9c50228d5e25596b64ada160b48f77a93aaced22617bfe005e00fe20a532a0adcb818c878dc5d6649277777ca1a814e21d0b53308af4078be4554715e4ce4828b012f25ffa13a6ceb30d20a75deba8a344e41d627fa638feff38a3063a0187519b39b053f7134d9cd83e6091accf5d2e3a05edfa1dfbe181a87ad86ba24fe6b97fe0004b5308204b130820399a003020102021004e1e7a4dc5cf2f36dc02b42b85d159f300d06092a864886f70d01010b0500306c310b300906035504061302555331153013060355040a130c446967694365727420496e6331193017060355040b13107777772e64696769636572742e636f6d312b30290603550403132244696769436572742048696768204173737572616e636520455620526f6f74204341301e170d3133313032323132303030305a170d3238313032323132303030305a3070310b300906035504061302555331153013060355040a130c446967694365727420496e6331193017060355040b13107777772e64696769636572742e636f6d312f302d06035504031326446967694365727420534841322048696768204173737572616e63652053657276657220434130820122300d06092a864886f70d01010105000382010f003082010a0282010100b6e02fc22406c86d045fd7ef0a6406b27d22266516ae42409bcedc9f9f76073ec330558719b94f940e5a941f5556b4c2022aafd098ee0b40d7c4d03b72c8149eef90b111a9aed2c8b8433ad90b0bd5d595f540afc81ded4d9c5f57b786506899f58adad2c7051fa897c9dca4b182842dc6ada59cc71982a6850f5e44582a378ffd35f10b0827325af5bb8b9ea4bd51d027e2dd3b4233a30528c4bb28cc9aac2b230d78c67be65e71b74a3e08fb81b71616a19d23124de5d79208ac75a49cbacd17b21e4435657f532539d11c0a9a631b199274680a37c2c25248cb395aa2b6e15dc1dda020b821a293266f144a2141c7ed6d9bf2482ff303f5a26892532f5ee30203010001a38201493082014530120603551d130101ff040830060101ff020100300e0603551d0f0101ff040403020186301d0603551d250416301406082b0601050507030106082b06010505070302303406082b0601050507010104283026302406082b060105050730018618687474703a2f2f6f6373702e64696769636572742e636f6d304b0603551d1f044430423040a03ea03c863a687474703a2f2f63726c342e64696769636572742e636f6d2f4469676943657274486967684173737572616e63654556526f6f7443412e63726c303d0603551d200436303430320604551d2000302a302806082b06010505070201161c68747470733a2f2f7777772e64696769636572742e636f6d2f435053301d0603551d0e041604145168ff90af0207753cccd9656462a212b859723b301f0603551d23041830168014b13ec36903f8bf4701d498261a0802ef63642bc3300d06092a864886f70d01010b05000382010100188a958903e66ddf5cfc1d68ea4a8f83d6512f8d6b44169eac63f5d26e6c84998baa8171845bed344eb0b7799229cc2d806af08e20e179a4fe034713eaf586ca59717df404966bd359583dfed331255c183884a3e69f82fd8c5b98314ecd789e1afd85cb49aaf2278b9972fc3eaad5410bdad536a1bf1c6e47497f5ed9487c03d9fd8b49a098264240ebd69211a4640a5754c4f51dd6025e6baceec4809a1272fa5693d7ffbf30850630bf0b7f4eff57059d24ed85c32bfba675a8ac2d16ef7d7927b2ebc29d0b07eaaa85d301a3202841594328d281e3aaf6ec7b3b77b640628005414501ef17063edec0339b67d3612e7287e469fc120057401e70f51ec9b4'))

647 
def
 
	$ã°_num_˚πs
(
£lf
):

648 
	`as£π
 (
	`Àn
(
£lf
.
p
.
d©a
.
˚πifiˇãs
) == 2)

651 
˛ass
 
	$Te°TLSMu…iFa˘‹y
(
obje˘
):

655 @
˛assmëhod


656 
def
 
	$£tup_˛ass
(
˛s
):

657 
˛s
.
d©a
 = 
	`_hexdecode
(
b
'1703010010' #header 1

658 
b
'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA' #data 1

659 
b
'1703010010' #header 2

660 
b
'BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB' #data 2

661 
b
'1703010010' #header 3

662 
b
'CCCCCCCC'Ë#d©®3 (
öcom∂ëe
)

663 
˛s
.
msgs
, cls.
byãs_∑r£d
 = 
	$és_mu…i_Á˘‹y
(
˛s
.
d©a
)

665 
def
 
	$ã°_num_mesßges
(
£lf
):

666 #⁄ly 
com∂ëe
 
mesßges
 
should
 
be
 
∑r£d
, 
öcom∂ëe
 
⁄es
 
À·


667 #ö 
buf„r


668 
	`as£π
 (
	`Àn
(
£lf
.
msgs
) == 2)

670 
def
 
	$ã°_byãs_∑r£d
(
£lf
):

671 
	`as£π
 (
£lf
.
byãs_∑r£d
 == (5 + 16) * 2)

673 
def
 
	$ã°_fú°_msg_d©a
(
£lf
):

674 
	`as£π
 (
£lf
.
msgs
[0].
d©a
 =
	`_hexdecode
(
b
'AA' * 16))

676 
def
 
	$ã°_£c⁄d_msg_d©a
(
£lf
):

677 
	`as£π
 (
£lf
.
msgs
[1].
d©a
 =
	`_hexdecode
(
b
'BB' * 16))

679 
def
 
	$ã°_öcom∂ëe
(
£lf
):

680 
msgs
, 
n
 = 
	`és_mu…i_Á˘‹y
(
	`_hexdecode
(
b
'17'))

681 
	`as£π
 (
	`Àn
(
msgs
) == 0)

682 
	$as£π
 (
n
 == 0)

683 
msgs
, 
n
 = 
	`és_mu…i_Á˘‹y
(
	`_hexdecode
(
b
'1703'))

684 
	`as£π
 (
	`Àn
(
msgs
) == 0)

685 
	$as£π
 (
n
 == 0)

686 
msgs
, 
n
 = 
	`és_mu…i_Á˘‹y
(
	`_hexdecode
(
b
'170301'))

687 
	`as£π
 (
	`Àn
(
msgs
) == 0)

688 
	$as£π
 (
n
 == 0)

689 
msgs
, 
n
 = 
	`és_mu…i_Á˘‹y
(
	`_hexdecode
(
b
'17030100'))

690 
	`as£π
 (
	`Àn
(
msgs
) == 0)

691 
	$as£π
 (
n
 == 0)

692 
msgs
, 
n
 = 
	`és_mu…i_Á˘‹y
(
	`_hexdecode
(
b
'1703010000'))

693 
	`as£π
 (
	`Àn
(
msgs
) == 1)

694 
	`as£π
 (
n
 == 5)

	@ssl_ciphersuites.py

1 #C›yrighà2012 
GoogÀ
 
Inc
. 
AŒ
 
rights
 
ª£rved
.

2 #-*- 
codög
: 
utf
-8 -*-

4 
Ni˚ly
 
f‹m©ãd
 
cùhî
 
suôe
 
deföôi⁄s
 
TLS


6 
A
 
li°
 
of
 
cùhî
 
suôes
 
ö
 
the
 
f‹m
 o‡
CùhîSuôe
 
	gobje˘s
.

7 
The£
 
¨e
 
suµo£d
 
to
 
be
 
	gimmuèbÀ
; 
	gd⁄
't mess withÅhem.

11 
˛ass
 
	$CùhîSuôe
(
obje˘
):

13 
Enˇpsuœãs
 
a
 
cùhî
 
suôe
.

15 
Membîs
/
¨gs
:

16 * 
code
: 
two
-
byã
 
ID
 code, 
as
 

17 * 
kx
: 
key
 
exch™ge
 
Æg‹ôhm
, 
e
.
g
. 'RSA' 
‹
 'DHE'

18 * 
auth
: 
authítiˇti⁄
 
Æg‹ôhm
, 
e
.
g
. 'RSA' 
‹
 'DSS'

19 * 
cùhî
: 
°ªam
 
‹
 
block
 cùhî 
Æg‹ôhm
, 
e
.
g
. 'AES_128'

20 * 
mode
: modê
of
 
›î©i⁄
 
block
 
cùhîs
, 
e
.
g
. 'CBC' 
‹
 'GCM'

21 * 
mac
: 
mesßge
 
authítiˇti⁄
 
code
 
Æg‹ôhm
, 
e
.
g
. 'MD5' 
‹
 'SHA256'

22 * 
«me
: 
cùhî
 
suôe
Çamê
as
 
deföed
 
ö
 
the
 
RFCs
,

23 
e
.
g
. 'TLS_RSA_WITH_RC4_40_MD5', 
ˇn
 
be
 
gíî©ed
 
by
  
‰om
 
the


24 
Ÿhî
 
∑ømëîs


25 * 
ícodög
:Éncodög 
Æg‹ôhm
, 
deÁu…s
 
to
 
cùhî
+
mode


26 
Addôi⁄Æ
 
membîs
:

27 * 
kx_auth
: 
kx
+
auth
 
Æg‹ôhm
, 
as
 'KeyExch™geAlg‹ôhm' 
ö
 
RFCs


30 
def
 
	$__öô__
(
£lf
, 
code
, 
kx
, 
auth
, 
cùhî
, 
mode
, 
mac
, 
«me
=
N⁄e
, 
ícodög
=None):

31 
£lf
.
code
 = code

32 #Wê
°rù
 
åaûög
 
whôe•a˚
 
hîe
 
beˇu£
 
we
 
w™t
 
to
 
f‹m©
 
the


33 #globÆ 
èbÀ
 
ni˚ly
 
makög
 
pylöt
 
h≠py
.

34 
£lf
.
_kx
 = 
kx
.
	$r°rù
()

35 
£lf
.
_auth
 = 
auth
.
	$r°rù
()

36 
£lf
.
cùhî
 = cùhî.
	$r°rù
()

37 
£lf
.
mode
 = mode.
	$r°rù
()

38 
£lf
.
mac
 = mac.
	$r°rù
()

39 
£lf
.
_«me
 = 
«me


40 
£lf
.
_ícodög
 = 
ícodög


42 @
¥›îty


43 
def
 
	$kx
(
£lf
):

44 
£lf
.
_kx
 ='': #f‹ 
PSK


45  
£lf
.
_auth


47  
£lf
.
_kx


49 @
¥›îty


50 
def
 
	$auth
(
£lf
):

51 
£lf
.
_auth
 ='': #f‹ 
RSA


52  
£lf
.
_kx


54  
£lf
.
_auth


56 @
¥›îty


57 
def
 
	$kx_auth
(
£lf
):

58 
£lf
.
_auth
 ='': #f‹ 
RSA


59  
£lf
.
_kx


60 
ñif
 
£lf
.
_kx
 ='': #f‹ 
PSK


61  
£lf
.
_auth


63  
£lf
.
_kx
 + '_' + sñf.
_auth


65 @
¥›îty


66 
def
 
	$ícodög
(
£lf
):

67 
£lf
.
_ícodög
 
is
 
N⁄e
:

68 
£lf
.
mode
 == '':

69  
£lf
.
cùhî


71  
£lf
.
cùhî
 + '_' + sñf.
mode


73  
£lf
.
_ícodög


75 @
¥›îty


76 
def
 
	$«me
(
£lf
):

77 
£lf
.
_«me
 
is
 
N⁄e
:

78 
£lf
.
mac
 ='': #f‹ 
CCM
 
™d
 
CCM_8
 
modes


79  'TLS_' + 
£lf
.
kx_auth
 + '_WITH_' + sñf.
ícodög


81  'TLS_' + 
£lf
.
kx_auth
 + '_WITH_' + sñf.
ícodög
 + '_' + sñf.
mac


83  
£lf
.
_«me


85 
def
 
	$__ª¥__
(
£lf
):

86  'CùhîSuôe(%s)' % 
£lf
.
«me


88 
MAC_SIZES
 = {

93 
	}
}

95 #TODO: 
add
 
RC4_40
, 
RC4_128
, 
RC2_40
, 
IDEA
, 
DES40
, 
DES
, 3DE
S_EDE
,

96 #CAMELLIA_128, 
CAMELLIA_256
, 
SEED
, 
ARIA_128
, 
ARIA_256
, 
CHACHA20


97 
	gBLOCK_SIZES
 = {

102 @
¥›îty


103 
def
 
	$mac_size
(
£lf
):

105  
£lf
.
MAC_SIZES
.
	`gë
(£lf.
mac
, 0)

107 @
¥›îty


108 
def
 
	$block_size
(
£lf
):

110  
£lf
.
BLOCK_SIZES
.
	$gë
(
£lf
.
cùhî
, 1)

112 #ma°î 
li°
 
of
 
CùhîSuôe
 
Obje˘s


113 #FuŒ 
li°
 
‰om
 
IANA
:

115 
CIPHERSUITES
 = [

116 #nŸ 
a
 
ªÆ
 
cùhî
 
suôe
, 
ˇn
 
be
 
ign‹ed
, 
£e
 
RFC5746


117 
	`CùhîSuôe
(0x00ff, 'NULL', ' ', 'NULL ', ' ', 'NULL',

120 
	`CùhîSuôe
(0x5600, '', ' ', '', '', '',

122 
	`CùhîSuôe
(0xffff, '', ' ', '', '', '',

125 #RFC2246 : 
TLS
 1.0

126 
	`CùhîSuôe
(0x0000, 'NULL', ' ', 'NULL ', ' ', 'NULL'),

128 
	`CùhîSuôe
(0x0001, 'RSA', ' ', 'NULL ', ' ', 'MD5'),

129 
	`CùhîSuôe
(0x0002, 'RSA', ' ', 'NULL ', ' ', 'SHA'),

130 
	`CùhîSuôe
(0x0003, 'RSA_EXPORT', ' ', 'RC4_40 ', ' ', 'MD5'),

131 
	`CùhîSuôe
(0x0004, 'RSA', ' ', 'RC4_128 ', ' ', 'MD5'),

132 
	`CùhîSuôe
(0x0005, 'RSA', ' ', 'RC4_128 ', ' ', 'SHA'),

133 
	`CùhîSuôe
(0x0006, 'RSA_EXPORT', ' ', 'RC2_40 ', 'CBC ', 'MD5',

134 
ícodög
='RC2_CBC_40'),

135 
	`CùhîSuôe
(0x0007, 'RSA', ' ', 'IDEA ', 'CBC ', 'SHA'),

136 
	`CùhîSuôe
(0x0008, 'RSA_EXPORT', ' ', 'DES40 ', 'CBC ', 'SHA'),

137 
	`CùhîSuôe
(0x0009, 'RSA', ' ', 'DES ', 'CBC ', 'SHA'),

138 
	`CùhîSuôe
(0x000a, 'RSA', ' ', '3DES_EDE', 'CBC ', 'SHA'),

140 
	`CùhîSuôe
(0x000b, 'DH', 'DSS_EXPORT', 'DES40 ', 'CBC ', 'SHA'),

141 
	`CùhîSuôe
(0x000c, 'DH', 'DSS ', 'DES ', 'CBC ', 'SHA'),

142 
	`CùhîSuôe
(0x000d, 'DH', 'DSS ', '3DES_EDE', 'CBC ', 'SHA'),

143 
	`CùhîSuôe
(0x000e, 'DH', 'RSA_EXPORT', 'DES40 ', 'CBC ', 'SHA'),

144 
	`CùhîSuôe
(0x000f, 'DH', 'RSA ', 'DES ', 'CBC ', 'SHA'),

145 
	`CùhîSuôe
(0x0010, 'DH', 'RSA ', '3DES_EDE', 'CBC ', 'SHA'),

146 
	`CùhîSuôe
(0x0011, 'DHE', 'DSS_EXPORT', 'DES40 ', 'CBC ', 'SHA'),

147 
	`CùhîSuôe
(0x0012, 'DHE', 'DSS ', 'DES ', 'CBC ', 'SHA'),

148 
	`CùhîSuôe
(0x0013, 'DHE', 'DSS ', '3DES_EDE', 'CBC ', 'SHA'),

149 
	`CùhîSuôe
(0x0014, 'DHE', 'RSA_EXPORT', 'DES40 ', 'CBC ', 'SHA'),

150 
	`CùhîSuôe
(0x0015, 'DHE', 'RSA ', 'DES ', 'CBC ', 'SHA'),

151 
	`CùhîSuôe
(0x0016, 'DHE', 'RSA ', '3DES_EDE', 'CBC ', 'SHA'),

153 
	`CùhîSuôe
(0x0017, 'DH', 'anon_EXPORT', 'RC4_40 ', ' ', 'MD5'),

154 
	`CùhîSuôe
(0x0018, 'DH', 'anon ', 'RC4_128 ', ' ', 'MD5'),

155 
	`CùhîSuôe
(0x0019, 'DH', 'anon_EXPORT', 'DES40 ', 'CBC ', 'SHA'),

156 
	`CùhîSuôe
(0x001a, 'DH', 'anon ', 'DES ', 'CBC ', 'SHA'),

157 
	`CùhîSuôe
(0x001b, 'DH', 'anon ', '3DES_EDE', 'CBC ', 'SHA'),

161 #RFC4346 : 
TLS
 1.1

163 
	`CùhîSuôe
(0x001e, 'KRB5', ' ', 'DES ', 'CBC ', 'SHA'),

164 
	`CùhîSuôe
(0x001f, 'KRB5', ' ', '3DES_EDE', 'CBC ', 'SHA'),

165 
	`CùhîSuôe
(0x0020, 'KRB5', ' ', 'RC4_128 ', ' ', 'SHA'),

166 
	`CùhîSuôe
(0x0021, 'KRB5', ' ', 'IDEA ', 'CBC ', 'SHA'),

167 
	`CùhîSuôe
(0x0022, 'KRB5', ' ', 'DES ', 'CBC ', 'MD5'),

168 
	`CùhîSuôe
(0x0023, 'KRB5', ' ', '3DES_EDE', 'CBC ', 'MD5'),

169 
	`CùhîSuôe
(0x0024, 'KRB5', ' ', 'RC4_128 ', ' ', 'MD5'),

170 
	`CùhîSuôe
(0x0025, 'KRB5', ' ', 'IDEA ', 'CBC ', 'MD5'),

172 
	`CùhîSuôe
(0x0026, 'KRB5_EXPORT', ' ', 'DES40 ', 'CBC ', 'SHA',

173 
ícodög
='DES_CBC_40'),

174 
	`CùhîSuôe
(0x0027, 'KRB5_EXPORT', ' ', 'RC2_40 ', 'CBC ', 'SHA',

175 
ícodög
='RC2_CBC_40'),

176 
	`CùhîSuôe
(0x0028, 'KRB5_EXPORT', ' ', 'RC4_40 ', ' ', 'SHA'),

177 
	`CùhîSuôe
(0x0029, 'KRB5_EXPORT', ' ', 'DES40 ', 'CBC ', 'MD5',

178 
ícodög
='DES_CBC_40'),

179 
	`CùhîSuôe
(0x002a, 'KRB5_EXPORT', ' ', 'RC2_40 ', 'CBC ', 'MD5',

180 
ícodög
='RC2_CBC_40'),

181 
	`CùhîSuôe
(0x002b, 'KRB5_EXPORT', ' ', 'RC4_40 ', ' ', 'MD5'),

184 
	`CùhîSuôe
(0x002c, ' ', 'PSK ', 'NULL ', ' ', 'SHA'),

185 
	`CùhîSuôe
(0x002d, 'DHE ', 'PSK ', 'NULL ', ' ', 'SHA'),

186 
	`CùhîSuôe
(0x002e, 'RSA ', 'PSK ', 'NULL ', ' ', 'SHA'),

189 
	`CùhîSuôe
(0x002f, 'RSA ', ' ', 'AES_128 ', 'CBC ', 'SHA'),

190 
	`CùhîSuôe
(0x0030, 'DH ', 'DSS ', 'AES_128 ', 'CBC ', 'SHA'),

191 
	`CùhîSuôe
(0x0031, 'DH ', 'RSA ', 'AES_128 ', 'CBC ', 'SHA'),

192 
	`CùhîSuôe
(0x0032, 'DHE ', 'DSS ', 'AES_128 ', 'CBC ', 'SHA'),

193 
	`CùhîSuôe
(0x0033, 'DHE ', 'RSA ', 'AES_128 ', 'CBC ', 'SHA'),

194 
	`CùhîSuôe
(0x0034, 'DH ', 'anon ', 'AES_128 ', 'CBC ', 'SHA'),

196 
	`CùhîSuôe
(0x0035, 'RSA ', ' ', 'AES_256 ', 'CBC ', 'SHA'),

197 
	`CùhîSuôe
(0x0036, 'DH ', 'DSS ', 'AES_256 ', 'CBC ', 'SHA'),

198 
	`CùhîSuôe
(0x0037, 'DH ', 'RSA ', 'AES_256 ', 'CBC ', 'SHA'),

199 
	`CùhîSuôe
(0x0038, 'DHE ', 'DSS ', 'AES_256 ', 'CBC ', 'SHA'),

200 
	`CùhîSuôe
(0x0039, 'DHE ', 'RSA ', 'AES_256 ', 'CBC ', 'SHA'),

201 
	`CùhîSuôe
(0x003a, 'DH ', 'anon ', 'AES_256 ', 'CBC ', 'SHA'),

203 #RFC5246 : 
TLS
 1.2

204 
	`CùhîSuôe
(0x003b, 'RSA ', ' ', 'NULL ', ' ', 'SHA256'),

205 
	`CùhîSuôe
(0x003c, 'RSA ', ' ', 'AES_128 ', 'CBC ', 'SHA256'),

206 
	`CùhîSuôe
(0x003d, 'RSA ', ' ', 'AES_256 ', 'CBC ', 'SHA256'),

207 
	`CùhîSuôe
(0x003e, 'DH ', 'DSS ', 'AES_128 ', 'CBC ', 'SHA256'),

208 
	`CùhîSuôe
(0x003f, 'DH ', 'RSA ', 'AES_128 ', 'CBC ', 'SHA256'),

209 
	`CùhîSuôe
(0x0040, 'DHE ', 'DSS ', 'AES_128 ', 'CBC ', 'SHA256'),

212 
	`CùhîSuôe
(0x0041, 'RSA ', ' ', 'CAMELLIA_128', 'CBC', 'SHA'),

213 
	`CùhîSuôe
(0x0042, 'DH ', 'DSS ', 'CAMELLIA_128', 'CBC', 'SHA'),

214 
	`CùhîSuôe
(0x0043, 'DH ', 'RSA ', 'CAMELLIA_128', 'CBC', 'SHA'),

215 
	`CùhîSuôe
(0x0044, 'DHE ', 'DSS ', 'CAMELLIA_128', 'CBC', 'SHA'),

216 
	`CùhîSuôe
(0x0045, 'DHE ', 'RSA ', 'CAMELLIA_128', 'CBC', 'SHA'),

217 
	`CùhîSuôe
(0x0046, 'DH ', 'anon ', 'CAMELLIA_128', 'CBC', 'SHA'),

223 #RFC5246 : 
TLS
 1.2

224 
	`CùhîSuôe
(0x0067, 'DHE ', 'RSA ', 'AES_128 ', 'CBC ', 'SHA256'),

225 
	`CùhîSuôe
(0x0068, 'DH ', 'DSS ', 'AES_256 ', 'CBC ', 'SHA256'),

226 
	`CùhîSuôe
(0x0069, 'DH ', 'RSA ', 'AES_256 ', 'CBC ', 'SHA256'),

227 
	`CùhîSuôe
(0x006a, 'DHE ', 'DSS ', 'AES_256 ', 'CBC ', 'SHA256'),

228 
	`CùhîSuôe
(0x006b, 'DHE ', 'RSA ', 'AES_256 ', 'CBC ', 'SHA256'),

229 
	`CùhîSuôe
(0x006c, 'DH ', 'anon ', 'AES_128 ', 'CBC ', 'SHA256'),

230 
	`CùhîSuôe
(0x006d, 'DH ', 'anon ', 'AES_256 ', 'CBC ', 'SHA256'),

235 
	`CùhîSuôe
(0x0084, 'RSA ', ' ', 'CAMELLIA_256', 'CBC', 'SHA'),

236 
	`CùhîSuôe
(0x0085, 'DH ', 'DSS ', 'CAMELLIA_256', 'CBC', 'SHA'),

237 
	`CùhîSuôe
(0x0086, 'DH ', 'RSA ', 'CAMELLIA_256', 'CBC', 'SHA'),

238 
	`CùhîSuôe
(0x0087, 'DHE ', 'DSS ', 'CAMELLIA_256', 'CBC', 'SHA'),

239 
	`CùhîSuôe
(0x0088, 'DHE ', 'RSA ', 'CAMELLIA_256', 'CBC', 'SHA'),

240 
	`CùhîSuôe
(0x0089, 'DH ', 'anon ', 'CAMELLIA_256', 'CBC', 'SHA'),

243 
	`CùhîSuôe
(0x008a, ' ', 'PSK ', 'RC4_128 ', ' ', 'SHA'),

244 
	`CùhîSuôe
(0x008b, ' ', 'PSK ', '3DES_EDE', 'CBC ', 'SHA'),

245 
	`CùhîSuôe
(0x008c, ' ', 'PSK ', 'AES_128 ', 'CBC ', 'SHA'),

246 
	`CùhîSuôe
(0x008d, ' ', 'PSK ', 'AES_256 ', 'CBC ', 'SHA'),

247 
	`CùhîSuôe
(0x008e, 'DHE ', 'PSK ', 'RC4_128 ', ' ', 'SHA'),

248 
	`CùhîSuôe
(0x008f, 'DHE ', 'PSK ', '3DES_EDE', 'CBC ', 'SHA'),

249 
	`CùhîSuôe
(0x0090, 'DHE ', 'PSK ', 'AES_128 ', 'CBC ', 'SHA'),

250 
	`CùhîSuôe
(0x0091, 'DHE ', 'PSK ', 'AES_256 ', 'CBC ', 'SHA'),

251 
	`CùhîSuôe
(0x0092, 'RSA ', 'PSK ', 'RC4_128 ', ' ', 'SHA'),

252 
	`CùhîSuôe
(0x0093, 'RSA ', 'PSK ', '3DES_EDE', 'CBC ', 'SHA'),

253 
	`CùhîSuôe
(0x0094, 'RSA ', 'PSK ', 'AES_128 ', 'CBC ', 'SHA'),

254 
	`CùhîSuôe
(0x0095, 'RSA ', 'PSK ', 'AES_256 ', 'CBC ', 'SHA'),

257 
	`CùhîSuôe
(0x0096, 'RSA ', ' ', 'SEED ', 'CBC ', 'SHA'),

258 
	`CùhîSuôe
(0x0097, 'DH ', 'DSS ', 'SEED ', 'CBC ', 'SHA'),

259 
	`CùhîSuôe
(0x0098, 'DH ', 'RSA ', 'SEED ', 'CBC ', 'SHA'),

260 
	`CùhîSuôe
(0x0099, 'DHE ', 'DSS ', 'SEED ', 'CBC ', 'SHA'),

261 
	`CùhîSuôe
(0x009a, 'DHE ', 'RSA ', 'SEED ', 'CBC ', 'SHA'),

262 
	`CùhîSuôe
(0x009b, 'DH ', 'anon ', 'SEED ', 'CBC ', 'SHA'),

265 
	`CùhîSuôe
(0x009c, 'RSA ', ' ', 'AES_128 ', 'GCM ', 'SHA256'),

266 
	`CùhîSuôe
(0x009d, 'RSA ', ' ', 'AES_256 ', 'GCM ', 'SHA384'),

267 
	`CùhîSuôe
(0x009e, 'DHE ', 'RSA ', 'AES_128 ', 'GCM ', 'SHA256'),

268 
	`CùhîSuôe
(0x009f, 'DHE ', 'RSA ', 'AES_256 ', 'GCM ', 'SHA384'),

269 
	`CùhîSuôe
(0x00a0, 'DH ', 'RSA ', 'AES_128 ', 'GCM ', 'SHA256'),

270 
	`CùhîSuôe
(0x00a1, 'DH ', 'RSA ', 'AES_256 ', 'GCM ', 'SHA384'),

271 
	`CùhîSuôe
(0x00a2, 'DHE ', 'DSS ', 'AES_128 ', 'GCM ', 'SHA256'),

272 
	`CùhîSuôe
(0x00a3, 'DHE ', 'DSS ', 'AES_256 ', 'GCM ', 'SHA384'),

273 
	`CùhîSuôe
(0x00a4, 'DH ', 'DSS ', 'AES_128 ', 'GCM ', 'SHA256'),

274 
	`CùhîSuôe
(0x00a5, 'DH ', 'DSS ', 'AES_256 ', 'GCM ', 'SHA384'),

275 
	`CùhîSuôe
(0x00a6, 'DH ', 'anon ', 'AES_128 ', 'GCM ', 'SHA256'),

276 
	`CùhîSuôe
(0x00a7, 'DH ', 'anon ', 'AES_256 ', 'GCM ', 'SHA384'),

279 
	`CùhîSuôe
(0x00a8, ' ', 'PSK ', 'AES_128 ', 'GCM ', 'SHA256'),

280 
	`CùhîSuôe
(0x00a9, ' ', 'PSK ', 'AES_256 ', 'GCM ', 'SHA384'),

281 
	`CùhîSuôe
(0x00aa, 'DHE ', 'PSK ', 'AES_128 ', 'GCM ', 'SHA256'),

282 
	`CùhîSuôe
(0x00ab, 'DHE ', 'PSK ', 'AES_256 ', 'GCM ', 'SHA384'),

283 
	`CùhîSuôe
(0x00ac, 'RSA ', 'PSK ', 'AES_128 ', 'GCM ', 'SHA256'),

284 
	`CùhîSuôe
(0x00ad, 'RSA ', 'PSK ', 'AES_256 ', 'GCM ', 'SHA384'),

286 
	`CùhîSuôe
(0x00ae, ' ', 'PSK ', 'AES_128 ', 'CBC ', 'SHA256'),

287 
	`CùhîSuôe
(0x00af, ' ', 'PSK ', 'AES_256 ', 'CBC ', 'SHA384'),

288 
	`CùhîSuôe
(0x00b0, ' ', 'PSK ', 'NULL ', ' ', 'SHA256'),

289 
	`CùhîSuôe
(0x00b1, ' ', 'PSK ', 'NULL ', ' ', 'SHA384'),

291 
	`CùhîSuôe
(0x00b2, 'DHE ', 'PSK ', 'AES_128 ', 'CBC ', 'SHA256'),

292 
	`CùhîSuôe
(0x00b3, 'DHE ', 'PSK ', 'AES_256 ', 'CBC ', 'SHA384'),

293 
	`CùhîSuôe
(0x00b4, 'DHE ', 'PSK ', 'NULL ', ' ', 'SHA256'),

294 
	`CùhîSuôe
(0x00b5, 'DHE ', 'PSK ', 'NULL ', ' ', 'SHA384'),

296 
	`CùhîSuôe
(0x00b6, 'RSA ', 'PSK ', 'AES_128 ', 'CBC ', 'SHA256'),

297 
	`CùhîSuôe
(0x00b7, 'RSA ', 'PSK ', 'AES_256 ', 'CBC ', 'SHA384'),

298 
	`CùhîSuôe
(0x00b8, 'RSA ', 'PSK ', 'NULL ', ' ', 'SHA256'),

299 
	`CùhîSuôe
(0x00b9, 'RSA ', 'PSK ', 'NULL ', ' ', 'SHA384'),

302 
	`CùhîSuôe
(0x00ba, 'RSA ', ' ', 'CAMELLIA_128', 'CBC', 'SHA256'),

303 
	`CùhîSuôe
(0x00bb, 'DH ', 'DSS ', 'CAMELLIA_128', 'CBC', 'SHA256'),

304 
	`CùhîSuôe
(0x00bc, 'DH ', 'RSA ', 'CAMELLIA_128', 'CBC', 'SHA256'),

305 
	`CùhîSuôe
(0x00bd, 'DHE ', 'DSS ', 'CAMELLIA_128', 'CBC', 'SHA256'),

306 
	`CùhîSuôe
(0x00be, 'DHE ', 'RSA ', 'CAMELLIA_128', 'CBC', 'SHA256'),

307 
	`CùhîSuôe
(0x00bf, 'DH ', 'anon ', 'CAMELLIA_128', 'CBC', 'SHA256'),

309 
	`CùhîSuôe
(0x00c0, 'RSA ', ' ', 'CAMELLIA_256', 'CBC', 'SHA256'),

310 
	`CùhîSuôe
(0x00c1, 'DH ', 'DSS ', 'CAMELLIA_256', 'CBC', 'SHA256'),

311 
	`CùhîSuôe
(0x00c2, 'DH ', 'RSA ', 'CAMELLIA_256', 'CBC', 'SHA256'),

312 
	`CùhîSuôe
(0x00c3, 'DHE ', 'DSS ', 'CAMELLIA_256', 'CBC', 'SHA256'),

313 
	`CùhîSuôe
(0x00c4, 'DHE ', 'RSA ', 'CAMELLIA_256', 'CBC', 'SHA256'),

314 
	`CùhîSuôe
(0x00c5, 'DH ', 'anon ', 'CAMELLIA_256', 'CBC', 'SHA256'),

317 
	`CùhîSuôe
(0xc001, 'ECDH ', 'ECDSA ', 'NULL ', ' ', 'SHA'),

318 
	`CùhîSuôe
(0xc002, 'ECDH ', 'ECDSA ', 'RC4_128 ', ' ', 'SHA'),

319 
	`CùhîSuôe
(0xc003, 'ECDH ', 'ECDSA ', '3DES_EDE', 'CBC ', 'SHA'),

320 
	`CùhîSuôe
(0xc004, 'ECDH ', 'ECDSA ', 'AES_128 ', 'CBC ', 'SHA'),

321 
	`CùhîSuôe
(0xc005, 'ECDH ', 'ECDSA ', 'AES_256 ', 'CBC ', 'SHA'),

323 
	`CùhîSuôe
(0xc006, 'ECDHE', 'ECDSA ', 'NULL ', ' ', 'SHA'),

324 
	`CùhîSuôe
(0xc007, 'ECDHE', 'ECDSA ', 'RC4_128 ', ' ', 'SHA'),

325 
	`CùhîSuôe
(0xc008, 'ECDHE', 'ECDSA ', '3DES_EDE', 'CBC ', 'SHA'),

326 
	`CùhîSuôe
(0xc009, 'ECDHE', 'ECDSA ', 'AES_128 ', 'CBC ', 'SHA'),

327 
	`CùhîSuôe
(0xc00a, 'ECDHE', 'ECDSA ', 'AES_256 ', 'CBC ', 'SHA'),

329 
	`CùhîSuôe
(0xc00b, 'ECDH ', 'RSA ', 'NULL ', ' ', 'SHA'),

330 
	`CùhîSuôe
(0xc00c, 'ECDH ', 'RSA ', 'RC4_128 ', ' ', 'SHA'),

331 
	`CùhîSuôe
(0xc00d, 'ECDH ', 'RSA ', '3DES_EDE', 'CBC ', 'SHA'),

332 
	`CùhîSuôe
(0xc00e, 'ECDH ', 'RSA ', 'AES_128 ', 'CBC ', 'SHA'),

333 
	`CùhîSuôe
(0xc00f, 'ECDH ', 'RSA ', 'AES_256 ', 'CBC ', 'SHA'),

335 
	`CùhîSuôe
(0xc010, 'ECDHE', 'RSA ', 'NULL ', ' ', 'SHA'),

336 
	`CùhîSuôe
(0xc011, 'ECDHE', 'RSA ', 'RC4_128 ', ' ', 'SHA'),

337 
	`CùhîSuôe
(0xc012, 'ECDHE', 'RSA ', '3DES_EDE', 'CBC ', 'SHA'),

338 
	`CùhîSuôe
(0xc013, 'ECDHE', 'RSA ', 'AES_128 ', 'CBC ', 'SHA'),

339 
	`CùhîSuôe
(0xc014, 'ECDHE', 'RSA ', 'AES_256 ', 'CBC ', 'SHA'),

341 
	`CùhîSuôe
(0xc015, 'ECDH ', 'anon ', 'NULL ', ' ', 'SHA'),

342 
	`CùhîSuôe
(0xc016, 'ECDH ', 'anon ', 'RC4_128 ', ' ', 'SHA'),

343 
	`CùhîSuôe
(0xc017, 'ECDH ', 'anon ', '3DES_EDE', 'CBC ', 'SHA'),

344 
	`CùhîSuôe
(0xc018, 'ECDH ', 'anon ', 'AES_128 ', 'CBC ', 'SHA'),

345 
	`CùhîSuôe
(0xc019, 'ECDH ', 'anon ', 'AES_256 ', 'CBC ', 'SHA'),

348 
	`CùhîSuôe
(0xc01a, 'SRP_SHA', ' ', '3DES_EDE', 'CBC ', 'SHA'),

349 
	`CùhîSuôe
(0xc01b, 'SRP_SHA', 'RSA ', '3DES_EDE', 'CBC ', 'SHA'),

350 
	`CùhîSuôe
(0xc01c, 'SRP_SHA', 'DSS ', '3DES_EDE', 'CBC ', 'SHA'),

351 
	`CùhîSuôe
(0xc01d, 'SRP_SHA', ' ', 'AES_128 ', 'CBC ', 'SHA'),

352 
	`CùhîSuôe
(0xc01e, 'SRP_SHA', 'RSA ', 'AES_128 ', 'CBC ', 'SHA'),

353 
	`CùhîSuôe
(0xc01f, 'SRP_SHA', 'DSS ', 'AES_128 ', 'CBC ', 'SHA'),

354 
	`CùhîSuôe
(0xc020, 'SRP_SHA', ' ', 'AES_256 ', 'CBC ', 'SHA'),

355 
	`CùhîSuôe
(0xc021, 'SRP_SHA', 'RSA ', 'AES_256 ', 'CBC ', 'SHA'),

356 
	`CùhîSuôe
(0xc022, 'SRP_SHA', 'DSS ', 'AES_256 ', 'CBC ', 'SHA'),

359 
	`CùhîSuôe
(0xc023, 'ECDHE', 'ECDSA ', 'AES_128 ', 'CBC ', 'SHA256'),

360 
	`CùhîSuôe
(0xc024, 'ECDHE', 'ECDSA ', 'AES_256 ', 'CBC ', 'SHA384'),

361 
	`CùhîSuôe
(0xc025, 'ECDH ', 'ECDSA ', 'AES_128 ', 'CBC ', 'SHA256'),

362 
	`CùhîSuôe
(0xc026, 'ECDH ', 'ECDSA ', 'AES_256 ', 'CBC ', 'SHA384'),

363 
	`CùhîSuôe
(0xc027, 'ECDHE', 'RSA ', 'AES_128 ', 'CBC ', 'SHA256'),

364 
	`CùhîSuôe
(0xc028, 'ECDHE', 'RSA ', 'AES_256 ', 'CBC ', 'SHA384'),

365 
	`CùhîSuôe
(0xc029, 'ECDH ', 'RSA ', 'AES_128 ', 'CBC ', 'SHA256'),

366 
	`CùhîSuôe
(0xc02a, 'ECDH ', 'RSA ', 'AES_256 ', 'CBC ', 'SHA384'),

368 
	`CùhîSuôe
(0xc02b, 'ECDHE', 'ECDSA ', 'AES_128 ', 'GCM ', 'SHA256'),

369 
	`CùhîSuôe
(0xc02c, 'ECDHE', 'ECDSA ', 'AES_256 ', 'GCM ', 'SHA384'),

370 
	`CùhîSuôe
(0xc02d, 'ECDH ', 'ECDSA ', 'AES_128 ', 'GCM ', 'SHA256'),

371 
	`CùhîSuôe
(0xc02e, 'ECDH ', 'ECDSA ', 'AES_256 ', 'GCM ', 'SHA384'),

372 
	`CùhîSuôe
(0xc02f, 'ECDHE', 'RSA ', 'AES_128 ', 'GCM ', 'SHA256'),

373 
	`CùhîSuôe
(0xc030, 'ECDHE', 'RSA ', 'AES_256 ', 'GCM ', 'SHA384'),

374 
	`CùhîSuôe
(0xc031, 'ECDH ', 'RSA ', 'AES_128 ', 'GCM ', 'SHA256'),

375 
	`CùhîSuôe
(0xc032, 'ECDH ', 'RSA ', 'AES_256 ', 'GCM ', 'SHA384'),

378 
	`CùhîSuôe
(0xc033, 'ECDHE', 'PSK ', 'RC4_128 ', ' ', 'SHA'),

379 
	`CùhîSuôe
(0xc034, 'ECDHE', 'PSK ', '3DES_EDE', 'CBC ', 'SHA'),

380 
	`CùhîSuôe
(0xc035, 'ECDHE', 'PSK ', 'AES_128 ', 'CBC ', 'SHA'),

381 
	`CùhîSuôe
(0xc036, 'ECDHE', 'PSK ', 'AES_256 ', 'CBC ', 'SHA'),

382 
	`CùhîSuôe
(0xc037, 'ECDHE', 'PSK ', 'AES_128 ', 'CBC ', 'SHA256'),

383 
	`CùhîSuôe
(0xc038, 'ECDHE', 'PSK ', 'AES_256 ', 'CBC ', 'SHA384'),

384 
	`CùhîSuôe
(0xc039, 'ECDHE', 'PSK ', 'NULL ', ' ', 'SHA'),

385 
	`CùhîSuôe
(0xc03a, 'ECDHE', 'PSK ', 'NULL ', ' ', 'SHA256'),

386 
	`CùhîSuôe
(0xc03b, 'ECDHE', 'PSK ', 'NULL ', ' ', 'SHA384'),

389 
	`CùhîSuôe
(0xc03c, 'RSA ', ' ', 'ARIA_128', 'CBC ', 'SHA256'),

390 
	`CùhîSuôe
(0xc03d, 'RSA ', ' ', 'ARIA_256', 'CBC ', 'SHA384'),

391 
	`CùhîSuôe
(0xc03e, 'DH ', 'DSS ', 'ARIA_128', 'CBC ', 'SHA256'),

392 
	`CùhîSuôe
(0xc03f, 'DH ', 'DSS ', 'ARIA_256', 'CBC ', 'SHA384'),

393 
	`CùhîSuôe
(0xc040, 'DH ', 'RSA ', 'ARIA_128', 'CBC ', 'SHA256'),

394 
	`CùhîSuôe
(0xc041, 'DH ', 'RSA ', 'ARIA_256', 'CBC ', 'SHA384'),

395 
	`CùhîSuôe
(0xc042, 'DHE ', 'DSS ', 'ARIA_128', 'CBC ', 'SHA256'),

396 
	`CùhîSuôe
(0xc043, 'DHE ', 'DSS ', 'ARIA_256', 'CBC ', 'SHA384'),

397 
	`CùhîSuôe
(0xc044, 'DHE ', 'RSA ', 'ARIA_128', 'CBC ', 'SHA256'),

398 
	`CùhîSuôe
(0xc045, 'DHE ', 'RSA ', 'ARIA_256', 'CBC ', 'SHA384'),

399 
	`CùhîSuôe
(0xc046, 'DH ', 'anon ', 'ARIA_128', 'CBC ', 'SHA256'),

400 
	`CùhîSuôe
(0xc047, 'DH ', 'anon ', 'ARIA_256', 'CBC ', 'SHA384'),

402 
	`CùhîSuôe
(0xc048, 'ECDHE', 'ECDSA ', 'ARIA_128', 'CBC ', 'SHA256'),

403 
	`CùhîSuôe
(0xc049, 'ECDHE', 'ECDSA ', 'ARIA_256', 'CBC ', 'SHA384'),

404 
	`CùhîSuôe
(0xc04a, 'ECDH ', 'ECDSA ', 'ARIA_128', 'CBC ', 'SHA256'),

405 
	`CùhîSuôe
(0xc04b, 'ECDH ', 'ECDSA ', 'ARIA_256', 'CBC ', 'SHA384'),

406 
	`CùhîSuôe
(0xc04c, 'ECDHE', 'RSA ', 'ARIA_128', 'CBC ', 'SHA256'),

407 
	`CùhîSuôe
(0xc04d, 'ECDHE', 'RSA ', 'ARIA_256', 'CBC ', 'SHA384'),

408 
	`CùhîSuôe
(0xc04e, 'ECDH ', 'RSA ', 'ARIA_128', 'CBC ', 'SHA256'),

409 
	`CùhîSuôe
(0xc04f, 'ECDH ', 'RSA ', 'ARIA_256', 'CBC ', 'SHA384'),

411 
	`CùhîSuôe
(0xc050, 'RSA ', ' ', 'ARIA_128', 'GCM ', 'SHA256'),

412 
	`CùhîSuôe
(0xc051, 'RSA ', ' ', 'ARIA_256', 'GCM ', 'SHA384'),

413 
	`CùhîSuôe
(0xc052, 'DHE ', 'RSA ', 'ARIA_128', 'GCM ', 'SHA256'),

414 
	`CùhîSuôe
(0xc053, 'DHE ', 'RSA ', 'ARIA_256', 'GCM ', 'SHA384'),

415 
	`CùhîSuôe
(0xc054, 'DH ', 'RSA ', 'ARIA_128', 'GCM ', 'SHA256'),

416 
	`CùhîSuôe
(0xc055, 'DH ', 'RSA ', 'ARIA_256', 'GCM ', 'SHA384'),

417 
	`CùhîSuôe
(0xc056, 'DHE ', 'DSS ', 'ARIA_128', 'GCM ', 'SHA256'),

418 
	`CùhîSuôe
(0xc057, 'DHE ', 'DSS ', 'ARIA_256', 'GCM ', 'SHA384'),

419 
	`CùhîSuôe
(0xc058, 'DH ', 'DSS ', 'ARIA_128', 'GCM ', 'SHA256'),

420 
	`CùhîSuôe
(0xc059, 'DH ', 'DSS ', 'ARIA_256', 'GCM ', 'SHA384'),

421 
	`CùhîSuôe
(0xc05a, 'DH ', 'anon ', 'ARIA_128', 'GCM ', 'SHA256'),

422 
	`CùhîSuôe
(0xc05b, 'DH ', 'anon ', 'ARIA_256', 'GCM ', 'SHA384'),

424 
	`CùhîSuôe
(0xc05c, 'ECDHE', 'ECDSA ', 'ARIA_128', 'GCM ', 'SHA256'),

425 
	`CùhîSuôe
(0xc05d, 'ECDHE', 'ECDSA ', 'ARIA_256', 'GCM ', 'SHA384'),

426 
	`CùhîSuôe
(0xc05e, 'ECDH ', 'ECDSA ', 'ARIA_128', 'GCM ', 'SHA256'),

427 
	`CùhîSuôe
(0xc05f, 'ECDH ', 'ECDSA ', 'ARIA_256', 'GCM ', 'SHA384'),

428 
	`CùhîSuôe
(0xc060, 'ECDHE', 'RSA ', 'ARIA_128', 'GCM ', 'SHA256'),

429 
	`CùhîSuôe
(0xc061, 'ECDHE', 'RSA ', 'ARIA_256', 'GCM ', 'SHA384'),

430 
	`CùhîSuôe
(0xc062, 'ECDH ', 'RSA ', 'ARIA_128', 'GCM ', 'SHA256'),

431 
	`CùhîSuôe
(0xc063, 'ECDH ', 'RSA ', 'ARIA_256', 'GCM ', 'SHA384'),

433 
	`CùhîSuôe
(0xc064, ' ', 'PSK ', 'ARIA_128', 'CBC ', 'SHA256'),

434 
	`CùhîSuôe
(0xc065, ' ', 'PSK ', 'ARIA_256', 'CBC ', 'SHA384'),

435 
	`CùhîSuôe
(0xc066, 'DHE ', 'PSK ', 'ARIA_128', 'CBC ', 'SHA256'),

436 
	`CùhîSuôe
(0xc067, 'DHE ', 'PSK ', 'ARIA_256', 'CBC ', 'SHA384'),

437 
	`CùhîSuôe
(0xc068, 'RSA ', 'PSK ', 'ARIA_128', 'CBC ', 'SHA256'),

438 
	`CùhîSuôe
(0xc069, 'RSA ', 'PSK ', 'ARIA_256', 'CBC ', 'SHA384'),

439 
	`CùhîSuôe
(0xc06a, ' ', 'PSK ', 'ARIA_128', 'GCM ', 'SHA256'),

440 
	`CùhîSuôe
(0xc06b, ' ', 'PSK ', 'ARIA_256', 'GCM ', 'SHA384'),

441 
	`CùhîSuôe
(0xc06c, 'DHE ', 'PSK ', 'ARIA_128', 'GCM ', 'SHA256'),

442 
	`CùhîSuôe
(0xc06d, 'DHE ', 'PSK ', 'ARIA_256', 'GCM ', 'SHA384'),

443 
	`CùhîSuôe
(0xc06e, 'RSA ', 'PSK ', 'ARIA_128', 'GCM ', 'SHA256'),

444 
	`CùhîSuôe
(0xc06f, 'RSA ', 'PSK ', 'ARIA_256', 'GCM ', 'SHA384'),

445 
	`CùhîSuôe
(0xc070, 'ECDHE', 'PSK ', 'ARIA_128', 'GCM ', 'SHA256'),

446 
	`CùhîSuôe
(0xc071, 'ECDHE', 'PSK ', 'ARIA_256', 'GCM ', 'SHA384'),

449 
	`CùhîSuôe
(0xc072, 'ECDHE', 'ECDSA ', 'CAMELLIA_128', 'CBC', 'SHA256'),

450 
	`CùhîSuôe
(0xc073, 'ECDHE', 'ECDSA ', 'CAMELLIA_256', 'CBC', 'SHA384'),

451 
	`CùhîSuôe
(0xc074, 'ECDH ', 'ECDSA ', 'CAMELLIA_128', 'CBC', 'SHA256'),

452 
	`CùhîSuôe
(0xc075, 'ECDH ', 'ECDSA ', 'CAMELLIA_256', 'CBC', 'SHA384'),

453 
	`CùhîSuôe
(0xc076, 'ECDHE', 'RSA ', 'CAMELLIA_128', 'CBC', 'SHA256'),

454 
	`CùhîSuôe
(0xc077, 'ECDHE', 'RSA ', 'CAMELLIA_256', 'CBC', 'SHA384'),

455 
	`CùhîSuôe
(0xc078, 'ECDH ', 'RSA ', 'CAMELLIA_128', 'CBC', 'SHA256'),

456 
	`CùhîSuôe
(0xc079, 'ECDH ', 'RSA ', 'CAMELLIA_256', 'CBC', 'SHA384'),

458 
	`CùhîSuôe
(0xc07a, 'RSA ', ' ', 'CAMELLIA_128', 'GCM', 'SHA256'),

459 
	`CùhîSuôe
(0xc07b, 'RSA ', ' ', 'CAMELLIA_256', 'GCM', 'SHA384'),

460 
	`CùhîSuôe
(0xc07c, 'DHE ', 'RSA ', 'CAMELLIA_128', 'GCM', 'SHA256'),

461 
	`CùhîSuôe
(0xc07d, 'DHE ', 'RSA ', 'CAMELLIA_256', 'GCM', 'SHA384'),

462 
	`CùhîSuôe
(0xc07e, 'DH ', 'RSA ', 'CAMELLIA_128', 'GCM', 'SHA256'),

463 
	`CùhîSuôe
(0xc07f, 'DH ', 'RSA ', 'CAMELLIA_256', 'GCM', 'SHA384'),

464 
	`CùhîSuôe
(0xc080, 'DHE ', 'DSS ', 'CAMELLIA_128', 'GCM', 'SHA256'),

465 
	`CùhîSuôe
(0xc081, 'DHE ', 'DSS ', 'CAMELLIA_256', 'GCM', 'SHA384'),

466 
	`CùhîSuôe
(0xc082, 'DH ', 'DSS ', 'CAMELLIA_128', 'GCM', 'SHA256'),

467 
	`CùhîSuôe
(0xc083, 'DH ', 'DSS ', 'CAMELLIA_256', 'GCM', 'SHA384'),

468 
	`CùhîSuôe
(0xc084, 'DH ', 'anon ', 'CAMELLIA_128', 'GCM', 'SHA256'),

469 
	`CùhîSuôe
(0xc085, 'DH ', 'anon ', 'CAMELLIA_256', 'GCM', 'SHA384'),

471 
	`CùhîSuôe
(0xc086, 'ECDHE', 'ECDSA ', 'CAMELLIA_128', 'GCM', 'SHA256'),

472 
	`CùhîSuôe
(0xc087, 'ECDHE', 'ECDSA ', 'CAMELLIA_256', 'GCM', 'SHA384'),

473 
	`CùhîSuôe
(0xc088, 'ECDH ', 'ECDSA ', 'CAMELLIA_128', 'GCM', 'SHA256'),

474 
	`CùhîSuôe
(0xc089, 'ECDH ', 'ECDSA ', 'CAMELLIA_256', 'GCM', 'SHA384'),

475 
	`CùhîSuôe
(0xc08a, 'ECDHE', 'RSA ', 'CAMELLIA_128', 'GCM', 'SHA256'),

476 
	`CùhîSuôe
(0xc08b, 'ECDHE', 'RSA ', 'CAMELLIA_256', 'GCM', 'SHA384'),

477 
	`CùhîSuôe
(0xc08c, 'ECDH ', 'RSA ', 'CAMELLIA_128', 'GCM', 'SHA256'),

478 
	`CùhîSuôe
(0xc08d, 'ECDH ', 'RSA ', 'CAMELLIA_256', 'GCM', 'SHA384'),

480 
	`CùhîSuôe
(0xc08e, ' ', 'PSK ', 'CAMELLIA_128', 'GCM', 'SHA256'),

481 
	`CùhîSuôe
(0xc08f, ' ', 'PSK ', 'CAMELLIA_256', 'GCM', 'SHA384'),

482 
	`CùhîSuôe
(0xc090, 'DHE ', 'PSK ', 'CAMELLIA_128', 'GCM', 'SHA256'),

483 
	`CùhîSuôe
(0xc091, 'DHE ', 'PSK ', 'CAMELLIA_256', 'GCM', 'SHA384'),

484 
	`CùhîSuôe
(0xc092, 'RSA ', 'PSK ', 'CAMELLIA_128', 'GCM', 'SHA256'),

485 
	`CùhîSuôe
(0xc093, 'RSA ', 'PSK ', 'CAMELLIA_256', 'GCM', 'SHA384'),

486 
	`CùhîSuôe
(0xc094, ' ', 'PSK ', 'CAMELLIA_128', 'CBC', 'SHA256'),

487 
	`CùhîSuôe
(0xc095, ' ', 'PSK ', 'CAMELLIA_256', 'CBC', 'SHA384'),

488 
	`CùhîSuôe
(0xc096, 'DHE ', 'PSK ', 'CAMELLIA_128', 'CBC', 'SHA256'),

489 
	`CùhîSuôe
(0xc097, 'DHE ', 'PSK ', 'CAMELLIA_256', 'CBC', 'SHA384'),

490 
	`CùhîSuôe
(0xc098, 'RSA ', 'PSK ', 'CAMELLIA_128', 'CBC', 'SHA256'),

491 
	`CùhîSuôe
(0xc099, 'RSA ', 'PSK ', 'CAMELLIA_256', 'CBC', 'SHA384'),

492 
	`CùhîSuôe
(0xc09a, 'ECDHE', 'PSK ', 'CAMELLIA_128', 'CBC', 'SHA256'),

493 
	`CùhîSuôe
(0xc09b, 'ECDHE', 'PSK ', 'CAMELLIA_256', 'CBC', 'SHA384'),

496 
	`CùhîSuôe
(0xc09c, 'RSA ', ' ', 'AES_128 ', 'CCM ', ''),

497 
	`CùhîSuôe
(0xc09d, 'RSA ', ' ', 'AES_256 ', 'CCM ', ''),

498 
	`CùhîSuôe
(0xc09e, 'DHE ', 'RSA ', 'AES_128 ', 'CCM ', ''),

499 
	`CùhîSuôe
(0xc09f, 'DHE ', 'RSA ', 'AES_256 ', 'CCM ', ''),

500 
	`CùhîSuôe
(0xc0a0, 'RSA ', ' ', 'AES_128 ', 'CCM_8', ''),

501 
	`CùhîSuôe
(0xc0a1, 'RSA ', ' ', 'AES_256 ', 'CCM_8', ''),

502 
	`CùhîSuôe
(0xc0a2, 'DHE ', 'RSA ', 'AES_128 ', 'CCM_8', ''),

503 
	`CùhîSuôe
(0xc0a3, 'DHE ', 'RSA ', 'AES_256 ', 'CCM_8', ''),

505 
	`CùhîSuôe
(0xc0a4, ' ', 'PSK ', 'AES_128 ', 'CCM ', ''),

506 
	`CùhîSuôe
(0xc0a5, ' ', 'PSK ', 'AES_256 ', 'CCM ', ''),

507 
	`CùhîSuôe
(0xc0a6, 'DHE ', 'PSK ', 'AES_128 ', 'CCM ', ''),

508 
	`CùhîSuôe
(0xc0a7, 'DHE ', 'PSK ', 'AES_256 ', 'CCM ', ''),

509 
	`CùhîSuôe
(0xc0a8, ' ', 'PSK ', 'AES_128 ', 'CCM_8', ''),

510 
	`CùhîSuôe
(0xc0a9, ' ', 'PSK ', 'AES_256 ', 'CCM_8', ''),

511 
	`CùhîSuôe
(0xc0aa, 'DHE ', 'PSK ', 'AES_128 ', 'CCM_8', ''),

512 
	`CùhîSuôe
(0xc0ab, 'DHE ', 'PSK ', 'AES_256 ', 'CCM_8', ''),

515 
	`CùhîSuôe
(0xc0ac, 'ECDHE', 'ECDSA ', 'AES_128 ', 'CCM ', ''),

516 
	`CùhîSuôe
(0xc0ad, 'ECDHE', 'ECDSA ', 'AES_256 ', 'CCM ', ''),

517 
	`CùhîSuôe
(0xc0ae, 'ECDHE', 'ECDSA ', 'AES_128 ', 'CCM_8', ''),

518 
	`CùhîSuôe
(0xc0af, 'ECDHE', 'ECDSA ', 'AES_256 ', 'CCM_8', ''),

521 
	`CùhîSuôe
(0xcc13, 'ECDHE', 'RSA ', 'CHACHA20', 'POLY1305', 'SHA256',

523 
	`CùhîSuôe
(0xcc14, 'ECDHE', 'ECDSA ', 'CHACHA20', 'POLY1305', 'SHA256',

525 
	`CùhîSuôe
(0xcc15, 'DHE ', 'RSA ', 'CHACHA20', 'POLY1305', 'SHA256',

529 
	`CùhîSuôe
(0xcca8, 'ECDHE', 'RSA ', 'CHACHA20', 'POLY1305', 'SHA256'),

530 
	`CùhîSuôe
(0xcca9, 'ECDHE', 'ECDSA ', 'CHACHA20', 'POLY1305', 'SHA256'),

531 
	`CùhîSuôe
(0xccaa, 'DHE ', 'RSA ', 'CHACHA20', 'POLY1305', 'SHA256'),

533 
	`CùhîSuôe
(0xccab, ' ', 'PSK ', 'CHACHA20', 'POLY1305', 'SHA256'),

534 
	`CùhîSuôe
(0xccac, 'ECDHE', 'PSK ', 'CHACHA20', 'POLY1305', 'SHA256'),

535 
	`CùhîSuôe
(0xccad, 'DHE ', 'PSK ', 'CHACHA20', 'POLY1305', 'SHA256'),

536 
	`CùhîSuôe
(0xccae, 'RSA ', 'PSK ', 'CHACHA20', 'POLY1305', 'SHA256'),

543 
BY_CODE
 = 
	`di˘
(

544 (
cùhî
.
code
, cùhîËcùhî 
ö
 
CIPHERSUITES
)

546 #Thi†
is
 
a
 
fun˘i⁄
 
to
 
avoid
 
¨tificüŒy
 
ö¸ó£d
 
covîage


547 
BY_NAME_DICT
 = 
N⁄e


548 
def
 
	$BY_NAME
(
«me
):

549 #Wê
öôülize
 
the
 
di˘i⁄¨y
 
⁄ly
 
⁄
Åhê
fú°
 
ˇŒ


550 
globÆ
 
BY_NAME_DICT


551 
BY_NAME_DICT
 
is
 
N⁄e
:

552 
BY_NAME_DICT
 = 
	`di˘
((
suôe
.
«me
, suôeËsuôê
ö
 
CIPHERSUITES
)

553  
BY_NAME_DICT
[
«me
]

555 
NULL_SUITE
 = 
BY_CODE
[0x0000]

558 
˛ass
 
	$Te°CùhîSuôes
(
obje˘
):

560 
def
 
	$ã°_kx
(
£lf
):

561 #A 
ã°
 
‰om
 
óch
 
RFC


562 
	`as£π
 (
BY_CODE
[0x0005].
kx
 == 'RSA')

563 
	`as£π
 (
BY_CODE
[0x0021].
kx
 == 'KRB5')

564 
	`as£π
 (
BY_CODE
[0x002d].
kx
 == 'DHE')

565 
	`as£π
 (
BY_CODE
[0x0034].
kx
 == 'DH')

566 
	`as£π
 (
BY_CODE
[0x003c].
kx
 == 'RSA')

567 
	`as£π
 (
BY_CODE
[0x0042].
kx
 == 'DH')

568 
	`as£π
 (
BY_CODE
[0x006a].
kx
 == 'DHE')

569 
	`as£π
 (
BY_CODE
[0x0084].
kx
 == 'RSA')

570 
	`as£π
 (
BY_CODE
[0x0091].
kx
 == 'DHE')

571 
	`as£π
 (
BY_CODE
[0x0098].
kx
 == 'DH')

572 
	`as£π
 (
BY_CODE
[0x00ab].
kx
 == 'DHE')

573 
	`as£π
 (
BY_CODE
[0x00b0].
kx
 == 'PSK')

574 
	`as£π
 (
BY_CODE
[0x00bb].
kx
 == 'DH')

575 
	`as£π
 (
BY_CODE
[0xc008].
kx
 == 'ECDHE')

576 
	`as£π
 (
BY_CODE
[0xc016].
kx
 == 'ECDH')

577 
	`as£π
 (
BY_CODE
[0xc01d].
kx
 == 'SRP_SHA')

578 
	`as£π
 (
BY_CODE
[0xc027].
kx
 == 'ECDHE')

579 
	`as£π
 (
BY_CODE
[0xc036].
kx
 == 'ECDHE')

580 
	`as£π
 (
BY_CODE
[0xc045].
kx
 == 'DHE')

581 
	`as£π
 (
BY_CODE
[0xc052].
kx
 == 'DHE')

582 
	`as£π
 (
BY_CODE
[0xc068].
kx
 == 'RSA')

583 
	`as£π
 (
BY_CODE
[0xc074].
kx
 == 'ECDH')

584 
	`as£π
 (
BY_CODE
[0xc08d].
kx
 == 'ECDH')

585 
	`as£π
 (
BY_CODE
[0xc09d].
kx
 == 'RSA')

586 
	`as£π
 (
BY_CODE
[0xc0a2].
kx
 == 'DHE')

587 
	`as£π
 (
BY_CODE
[0xc0ad].
kx
 == 'ECDHE')

588 
	`as£π
 (
BY_CODE
[0xcc13].
kx
 == 'ECDHE')

589 
	`as£π
 (
BY_CODE
[0xcˇ8].
kx
 == 'ECDHE')

590 
	`as£π
 (
BY_CODE
[0xcˇe].
kx
 == 'RSA')

592 
def
 
	$ã°_auth
(
£lf
):

593 #A 
ã°
 
‰om
 
óch
 
RFC


594 
	`as£π
 (
BY_CODE
[0x0005].
auth
 == 'RSA')

595 
	`as£π
 (
BY_CODE
[0x0021].
auth
 == 'KRB5')

596 
	`as£π
 (
BY_CODE
[0x002d].
auth
 == 'PSK')

597 
	`as£π
 (
BY_CODE
[0x0034].
auth
 == 'anon')

598 
	`as£π
 (
BY_CODE
[0x003c].
auth
 == 'RSA')

599 
	`as£π
 (
BY_CODE
[0x0042].
auth
 == 'DSS')

600 
	`as£π
 (
BY_CODE
[0x006a].
auth
 == 'DSS')

601 
	`as£π
 (
BY_CODE
[0x0084].
auth
 == 'RSA')

602 
	`as£π
 (
BY_CODE
[0x0091].
auth
 == 'PSK')

603 
	`as£π
 (
BY_CODE
[0x0098].
auth
 == 'RSA')

604 
	`as£π
 (
BY_CODE
[0x00ab].
auth
 == 'PSK')

605 
	`as£π
 (
BY_CODE
[0x00b0].
auth
 == 'PSK')

606 
	`as£π
 (
BY_CODE
[0x00bb].
auth
 == 'DSS')

607 
	`as£π
 (
BY_CODE
[0xc008].
auth
 == 'ECDSA')

608 
	`as£π
 (
BY_CODE
[0xc016].
auth
 == 'anon')

609 
	`as£π
 (
BY_CODE
[0xc01d].
auth
 == 'SRP_SHA')

610 
	`as£π
 (
BY_CODE
[0xc027].
auth
 == 'RSA')

611 
	`as£π
 (
BY_CODE
[0xc036].
auth
 == 'PSK')

612 
	`as£π
 (
BY_CODE
[0xc045].
auth
 == 'RSA')

613 
	`as£π
 (
BY_CODE
[0xc052].
auth
 == 'RSA')

614 
	`as£π
 (
BY_CODE
[0xc068].
auth
 == 'PSK')

615 
	`as£π
 (
BY_CODE
[0xc074].
auth
 == 'ECDSA')

616 
	`as£π
 (
BY_CODE
[0xc08d].
auth
 == 'RSA')

617 
	`as£π
 (
BY_CODE
[0xc09d].
auth
 == 'RSA')

618 
	`as£π
 (
BY_CODE
[0xc0a2].
auth
 == 'RSA')

619 
	`as£π
 (
BY_CODE
[0xc0ad].
auth
 == 'ECDSA')

620 
	`as£π
 (
BY_CODE
[0xcc14].
auth
 == 'ECDSA')

621 
	`as£π
 (
BY_CODE
[0xcˇ8].
auth
 == 'RSA')

622 
	`as£π
 (
BY_CODE
[0xcˇe].
auth
 == 'PSK')

624 
def
 
	$ã°_by_«me_™d_code
(
£lf
):

625 #S≥cü»
ˇ£s
:

626 #- 
ex∂icô
 
«me


627 
	`as£π
 (
BY_CODE
[0x00ff] =
	`BY_NAME
('TLS_EMPTY_RENEGOTIATION_INFO'))

628 #- 
ex∂icô
 
	`ícodög
 (
DES_40
 + 
CBC
 = 
DES_CBC_40
)

629 
	`as£π
 (
BY_CODE
[0x0026] =
	`BY_NAME
('TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA'))

631 #A 
ã°
 
‰om
 
óch
 
RFC


632 
	`as£π
 (
BY_CODE
[0x0005] =
	`BY_NAME
('TLS_RSA_WITH_RC4_128_SHA'))

633 
	`as£π
 (
BY_CODE
[0x0021] =
	`BY_NAME
('TLS_KRB5_WITH_IDEA_CBC_SHA'))

634 
	`as£π
 (
BY_CODE
[0x002d] =
	`BY_NAME
('TLS_DHE_PSK_WITH_NULL_SHA'))

635 
	`as£π
 (
BY_CODE
[0x0034] =
	`BY_NAME
('TLS_DH_anon_WITH_AES_128_CBC_SHA'))

636 
	`as£π
 (
BY_CODE
[0x003c] =
	`BY_NAME
('TLS_RSA_WITH_AES_128_CBC_SHA256'))

637 
	`as£π
 (
BY_CODE
[0x0042] =
	`BY_NAME
('TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA'))

638 
	`as£π
 (
BY_CODE
[0x006a] =
	`BY_NAME
('TLS_DHE_DSS_WITH_AES_256_CBC_SHA256'))

639 
	`as£π
 (
BY_CODE
[0x0084] =
	`BY_NAME
('TLS_RSA_WITH_CAMELLIA_256_CBC_SHA'))

640 
	`as£π
 (
BY_CODE
[0x0091] =
	`BY_NAME
('TLS_DHE_PSK_WITH_AES_256_CBC_SHA'))

641 
	`as£π
 (
BY_CODE
[0x0098] =
	`BY_NAME
('TLS_DH_RSA_WITH_SEED_CBC_SHA'))

642 
	`as£π
 (
BY_CODE
[0x00ab] =
	`BY_NAME
('TLS_DHE_PSK_WITH_AES_256_GCM_SHA384'))

643 
	`as£π
 (
BY_CODE
[0x00b0] =
	`BY_NAME
('TLS_PSK_WITH_NULL_SHA256'))

644 
	`as£π
 (
BY_CODE
[0x00bb] =
	`BY_NAME
('TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256'))

645 
	`as£π
 (
BY_CODE
[0xc008] =
	`BY_NAME
('TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA'))

646 
	`as£π
 (
BY_CODE
[0xc016] =
	`BY_NAME
('TLS_ECDH_anon_WITH_RC4_128_SHA'))

647 
	`as£π
 (
BY_CODE
[0xc01d] =
	`BY_NAME
('TLS_SRP_SHA_WITH_AES_128_CBC_SHA'))

648 
	`as£π
 (
BY_CODE
[0xc027] =
	`BY_NAME
('TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256'))

649 
	`as£π
 (
BY_CODE
[0xc036] =
	`BY_NAME
('TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA'))

650 
	`as£π
 (
BY_CODE
[0xc045] =
	`BY_NAME
('TLS_DHE_RSA_WITH_ARIA_256_CBC_SHA384'))

651 
	`as£π
 (
BY_CODE
[0xc052] =
	`BY_NAME
('TLS_DHE_RSA_WITH_ARIA_128_GCM_SHA256'))

652 
	`as£π
 (
BY_CODE
[0xc068] =
	`BY_NAME
('TLS_RSA_PSK_WITH_ARIA_128_CBC_SHA256'))

653 
	`as£π
 (
BY_CODE
[0xc074] =
	`BY_NAME
('TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256'))

654 
	`as£π
 (
BY_CODE
[0xc08d] =
	`BY_NAME
('TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384'))

655 
	`as£π
 (
BY_CODE
[0xc09d] =
	`BY_NAME
('TLS_RSA_WITH_AES_256_CCM'))

656 
	`as£π
 (
BY_CODE
[0xc0a2] =
	`BY_NAME
('TLS_DHE_RSA_WITH_AES_128_CCM_8'))

657 
	`as£π
 (
BY_CODE
[0xc0ad] =
	`BY_NAME
('TLS_ECDHE_ECDSA_WITH_AES_256_CCM'))

658 
	`as£π
 (
BY_CODE
[0xcˇ8] =
	`BY_NAME
('TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256'))

659 
	`as£π
 (
BY_CODE
[0xcˇe] =
	`BY_NAME
('TLS_RSA_PSK_WITH_CHACHA20_POLY1305_SHA256'))

660 
	`as£π
 (
BY_CODE
[0xcc15] =
	`BY_NAME
('OLD_TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256'))

	@stp.py

1 #$Id: 
°p
.
py
 23 2006-11-08 15:45:33
Z
 
dugs⁄g
 
$


2 #-*- 
codög
: 
utf
-8 -*-

4 
‰om
 
__futuª__
 
imp‹t
 
¥öt_fun˘i⁄


5 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


7 
	g‰om
 . 
imp‹t
 
dpkt


10 
˛ass
 
	$STP
(
dpkt
.
Packë
):

13 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

15 
Aâribuãs
:

16 
__hdr__
: 
Hódî
 
fõlds
 
of
 
STP
.

17 
TODO
.

20 
__hdr__
 = (

35 @
¥›îty


36 
def
 
	$age
(
£lf
):

37  
£lf
.
_age
 >> 8

39 @
age
.
£âî


40 
def
 
	$age
(
£lf
, 
age
):

41 
£lf
.
_age
 = 
age
 << 8

43 @
¥›îty


44 
def
 
	$max_age
(
£lf
):

45  
£lf
.
_max_age
 >> 8

47 @
max_age
.
£âî


48 
def
 
	$max_age
(
£lf
, 
max_age
):

49 
£lf
.
_max_age
 = 
max_age
 << 8

51 @
¥›îty


52 
def
 
	$hñlo
(
£lf
):

53  
£lf
.
_hñlo
 >> 8

55 @
hñlo
.
£âî


56 
def
 
	$hñlo
(
£lf
, 
hñlo
):

57 
£lf
.
_hñlo
 = 
hñlo
 << 8

59 @
¥›îty


60 
def
 
	$fd
(
£lf
):

61  
£lf
.
_fd
 >> 8

63 @
fd
.
£âî


64 
def
 
	$fd
(
£lf
, 
fd
):

65 
£lf
.
_fd
 = 
fd
 << 8

68 
def
 
	$ã°_°p
():

69 
buf
 = 
b
'\x00\x00\x02\x02\x3e\x80\x00\x08\x00\x27\xad\xa3\x41\x00\x00\x00\x00\x80\x00\x08\x00\x27\xad\xa3\x41\x80\x01\x00\x00\x14\x00\x02\x00\x0f\x00\x00\x00\x00\x00\x02\x00\x14\x00'

70 
°p
 = 
	$STP
(
buf
)

72 
as£π
 
°p
.
¥Ÿo_id
 == 0

73 
as£π
 
°p
.
p‹t_id
 == 0x8001

74 
as£π
 
°p
.
age
 == 0

75 
as£π
 
°p
.
max_age
 == 20

76 
as£π
 
°p
.
hñlo
 == 2

77 
as£π
 
°p
.
fd
 == 15

79 
as£π
 
	`byãs
(
°p
Ë=
buf


81 
°p
.
fd
 = 100

82 
as£π
 
°p
.
	`∑ck_hdr
()[-2:] =
b
'\x64\x00' #100 << 8

85 
__«me__
 == '__main__':

86 #Run†
Æl
 
the
 
ã°
 
assocüãd
 
wôh
 
this
 
˛ass
/
fûe


87 
	$ã°_°p
()

88 
	`¥öt
('Tests Successful...')

	@stun.py

1 #$Id: 
°un
.
py
 47 2008-05-27 02:10:00
Z
 
j⁄
.
obîheide
 
$


2 #-*- 
codög
: 
utf
-8 -*-

4 
‰om
 
__futuª__
 
imp‹t
 
¥öt_fun˘i⁄


5 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


7 
imp‹t
 

9 
	g‰om
 . 
imp‹t
 
	gdpkt


11 #STUN - 
RFC
 3489

13 #Each 
∑ckë
 
has
 
a
 20 
byã
 
hódî
 
fﬁlowed
 
by
 0 
‹
 
m‹e
 
©åibuã
 
TLVs
.

15 #Mesßgê
Ty≥s


16 
	gBINDING_REQUEST
 = 0x0001

17 
BINDING_RESPONSE
 = 0x0101

18 
BINDING_ERROR_RESPONSE
 = 0x0111

19 
SHARED_SECRET_REQUEST
 = 0x0002

20 
SHARED_SECRET_RESPONSE
 = 0x0102

21 
SHARED_SECRET_ERROR_RESPONSE
 = 0x0112

23 #Mesßgê
Aâribuãs


24 
MAPPED_ADDRESS
 = 0x0001

25 
RESPONSE_ADDRESS
 = 0x0002

26 
CHANGE_REQUEST
 = 0x0003

27 
SOURCE_ADDRESS
 = 0x0004

28 
CHANGED_ADDRESS
 = 0x0005

29 
USERNAME
 = 0x0006

30 
PASSWORD
 = 0x0007

31 
MESSAGE_INTEGRITY
 = 0x0008

32 
ERROR_CODE
 = 0x0009

33 
UNKNOWN_ATTRIBUTES
 = 0x000a

34 
REFLECTED_FROM
 = 0x000b

37 
˛ass
 
	$STUN
(
dpkt
.
Packë
):

40 
STUN
 - 
RFC
 3489

41 
hâp
:

42 
Each
 
∑ckë
 
has
 
a
 20 
byã
 
hódî
 
fﬁlowed
 
by
 0 
‹
 
m‹e
 
©åibuã
 
TLVs
.

44 
Aâribuãs
:

45 
__hdr__
: 
Hódî
 
fõlds
 
of
 
STUN
.

46 
TODO
.

49 
__hdr__
 = (

56 
def
 
	$év
(
buf
):

57 
n
 = 4

58 
t
, 
l
 = .
	`u≈ack
('>HH', 
buf
[:
n
])

59 
v
 = 
buf
[
n
:¿+ 
l
]

60 
∑d
 = (
n
 - 
l
 %Ç) %Ç

61 
buf
 = buf[
n
 + 
l
 + 
∑d
:]

62  
t
, 
l
, 
v
, 
buf


65 
def
 
	$∑r£_©ås
(
buf
):

67 
©ås
 = []

68 
buf
:

69 
t
, 
_
, 
v
, 
buf
 = 
	$év
(
buf
)

70 
©ås
.
	`≠≥nd
((
t
, 
v
))

71  
©ås


74 
def
 
	$ã°_°un_ª•⁄£
():

75 
s
 = 
b
'\x01\x01\x00\x0c\x21\x12\xa4\x42\x53\x4f\x70\x43\x69\x69\x35\x4a\x66\x63\x31\x7a\x00\x01\x00\x08\x00\x01\x11\x22\x33\x44\x55\x66'

76 
m
 = 
	$STUN
(
s
)

77 
as£π
 
m
.
ty≥
 =
BINDING_RESPONSE


78 
as£π
 
m
.
Àn
 == 12

80 
©ås
 = 
	$∑r£_©ås
(
m
.
d©a
)

81 
as£π
 
©ås
 =[(
MAPPED_ADDRESS
, 
b
'\x00\x01\x11\x22\x33\x44\x55\x66'), ]

84 
def
 
	$ã°_°un_∑dded
():

85 
s
 = (
b
'\x00\x01\x00\x54\x21\x12\xa4\x42\x35\x59\x53\x6e\x42\x71\x70\x56\x77\x61\x39\x4f\x00\x06'

86 
b
'\x00\x17\x70\x4c\x79\x5a\x48\x52\x3a\x47\x77\x4c\x33\x41\x48\x42\x6f\x76\x75\x62\x4c\x76'

87 
b
'\x43\x71\x6e\x00\x80\x2a\x00\x08\x18\x8b\x10\x4c\x69\x7b\xf6\x5b\x00\x25\x00\x00\x00\x24'

88 
b
'\x00\x04\x6e\x00\x1e\xff\x00\x08\x00\x14\x60\x2b\xc7\xfc\x0d\x10\x63\xaa\xc5\x38\x1c\xcb'

89 
b
'\x96\xa9\x73\x08\x73\x9a\x96\x0c\x80\x28\x00\x04\xd1\x62\xea\x65')

90 
m
 = 
	$STUN
(
s
)

91 
as£π
 
m
.
ty≥
 =
BINDING_REQUEST


92 
as£π
 
m
.
Àn
 == 84

94 
©ås
 = 
	$∑r£_©ås
(
m
.
d©a
)

95 
as£π
 
	`Àn
(
©ås
) == 6

96 
as£π
 
©ås
[0] =(
USERNAME
, 
b
'pLyZHR:GwL3AHBovubLvCqn')

97 
as£π
 
©ås
[4][0] =
MESSAGE_INTEGRITY


100 
__«me__
 == '__main__':

101 
	$ã°_°un_ª•⁄£
()

102 
	$ã°_°un_∑dded
()

104 
	`¥öt
('Tests Successful...')

	@tcp.py

1 #$Id: 
t˝
.
py
 42 2007-08-02 22:38:47
Z
 
j⁄
.
obîheide
 
$


2 #-*- 
codög
: 
utf
-8 -*-

4 
‰om
 
__futuª__
 
imp‹t
 
¥öt_fun˘i⁄


5 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


7 
	g‰om
 . 
imp‹t
 
dpkt


8 
	g‰om
 .
dec‹©‹s
 
imp‹t
 
dïªˇãd


9 
	g‰om
 .
com∑t
 
imp‹t
 
	gcom∑t_‹d


11 #TCP 
c⁄åﬁ
 
Êags


12 
	gTH_FIN
 = 0x01 #íd 
of
 
d©a


13 
TH_SYN
 = 0x02 #synchr⁄izê
£quí˚
 
numbîs


14 
TH_RST
 = 0x04 #ª£à
c⁄√˘i⁄


15 
TH_PUSH
 = 0x08 #push

16 
TH_ACK
 = 0x10 #acknowÀdgmíà
numbî
 
£t


17 
TH_URG
 = 0x20 #urgíà
poöãr
 
£t


18 
TH_ECE
 = 0x40 #ECN 
echo
, 
	gRFC
 3168

19 
	gTH_CWR
 = 0x80 #c⁄ge°i⁄ 
wödow
 
ªdu˚d


21 
TCP_PORT_MAX
 = 65535 #maximum 
p‹t


22 
TCP_WIN_MAX
 = 65535 #maximum (
unsˇÀd
Ë
wödow


25 
˛ass
 
	$TCP
(
dpkt
.
Packë
):

28 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

30 
Aâribuãs
:

31 
__hdr__
: 
Hódî
 
fõlds
 
of
 
TCP
.

32 
TODO
.

35 
__hdr__
 = (

41 ('Êags', 'B', 
TH_SYN
),

42 ('wö', 'H', 
TCP_WIN_MAX
),

46 
›ts
 = 
b
''

48 @
¥›îty


49 
def
 
	$off
(
£lf
):

50  
£lf
.
_off
 >> 4

52 @
off
.
£âî


53 
def
 
	$off
(
£lf
, 
off
):

54 
£lf
.
_off
 = (
off
 << 4) | (self._off & 0xf)

56 
def
 
	$__Àn__
(
£lf
):

57  
£lf
.
__hdr_Àn__
 + 
	`Àn
(£lf.
›ts
Ë+ 
	$Àn
(
£lf
.
d©a
)

59 
def
 
	$__byãs__
(
£lf
):

60  
£lf
.
	`∑ck_hdr
(Ë+ 
	`byãs
(£lf.
›ts
Ë+ 
	$byãs
(
£lf
.
d©a
)

62 
def
 
	$u≈ack
(
£lf
, 
buf
):

63 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

64 
ﬁ
 = ((
£lf
.
_off
 >> 4Ë<< 2Ë- sñf.
__hdr_Àn__


65 
ﬁ
 < 0:

66 
øi£
 
dpkt
.
	`U≈ackEº‹
('invalid headerÜength')

67 
£lf
.
›ts
 = 
buf
[£lf.
__hdr_Àn__
:£lf.__hdr_Àn__ + 
ﬁ
]

68 
£lf
.
d©a
 = 
buf
[£lf.
__hdr_Àn__
 + 
ﬁ
:]

70 #O±i⁄†(
›t_ty≥
Ë- 
hâp
:

71 
TCP_OPT_EOL
 = 0 #íd 
of
 
›ti⁄
 
li°


72 
TCP_OPT_NOP
 = 1 #nÿ
›î©i⁄


73 
TCP_OPT_MSS
 = 2 #maximum 
£gmít
 
size


74 
TCP_OPT_WSCALE
 = 3 #wödow 
sˇÀ
 
Á˘‹
, 
RFC
 1072

75 
TCP_OPT_SACKOK
 = 4 #SACK 
≥rmôãd
, 
RFC
 2018

76 
TCP_OPT_SACK
 = 5 #SACK, 
RFC
 2018

77 
TCP_OPT_ECHO
 = 6 #echÿ(
obsﬁëe
), 
RFC
 1072

78 
TCP_OPT_ECHOREPLY
 = 7 #echÿ
	`ª∂y
 (
obsﬁëe
), 
RFC
 1072

79 
TCP_OPT_TIMESTAMP
 = 8 #time°amp, 
RFC
 1323

80 
TCP_OPT_POCONN
 = 9 #∑πü»
‹dî
 
c⁄n
, 
RFC
 1693

81 
TCP_OPT_POSVC
 = 10 #∑πü»
‹dî
 
£rvi˚
, 
RFC
 1693

82 
TCP_OPT_CC
 = 11 #c⁄√˘i⁄ 
cou¡
, 
RFC
 1644

83 
TCP_OPT_CCNEW
 = 12 #CC.
NEW
, 
RFC
 1644

84 
TCP_OPT_CCECHO
 = 13 #CC.
ECHO
, 
RFC
 1644

85 
TCP_OPT_ALTSUM
 = 14 #Æà
checksum
 
ªque°
, 
RFC
 1146

86 
TCP_OPT_ALTSUMDATA
 = 15 #Æà
checksum
 
d©a
, 
RFC
 1146

87 
TCP_OPT_SKEETER
 = 16 #Skeeter

88 
TCP_OPT_BUBBA
 = 17 #Bubba

89 
TCP_OPT_TRAILSUM
 = 18 #åaûî 
checksum


90 
TCP_OPT_MD5
 = 19 #MD5 
sig«tuª
, 
RFC
 2385

91 
TCP_OPT_SCPS
 = 20 #SCPS 
ˇ∑bûôõs


92 
TCP_OPT_SNACK
 = 21 #£À˘ivê
√g©ive
 
acks


93 
TCP_OPT_REC
 = 22 #ªc‹d 
bound¨õs


94 
TCP_OPT_CORRUPT
 = 23 #c‹ru±i⁄ 
ex≥rõn˚d


95 
TCP_OPT_SNAP
 = 24 #SNAP

96 
TCP_OPT_TCPCOMP
 = 26 #TCP 
com¥essi⁄
 
fûãr


97 
TCP_OPT_MAX
 = 27

100 
def
 
	$∑r£_›ts
(
buf
):

102 
›ts
 = []

103 
buf
:

104 
o
 = 
	$com∑t_‹d
(
buf
[0])

105 
o
 > 
TCP_OPT_NOP
:

106 
åy
:

107 #adv™˚ 
buf„r
 
©
 
Àa°
 2 
byãs
 = 1 
ty≥
 + 1 
Àngth


108 
l
 = 
	`max
(2, 
	$com∑t_‹d
(
buf
[1]))

109 
d
, 
buf
 = buf[2:
l
], buf[l:]

110 
	$ex˚±
 (
IndexEº‹
, 
VÆueEº‹
):

111 #¥öà'bad o±i⁄', 
	`ª¥
(
	`°r
(
buf
))

112 
›ts
.
	$≠≥nd
(
N⁄e
) #XXX

115 #›ti⁄†0 
™d
 1 
¨e
 
nŸ
 
fﬁlowed
 
by
 
Àngth
 
byã


116 
d
, 
buf
 = 
b
'', buf[1:]

117 
›ts
.
	`≠≥nd
((
o
, 
d
))

118  
›ts


121 
def
 
	$ã°_∑r£_›ts
():

122 #n‹mÆ 
s˚«rios


123 
buf
 = 
b
'\x02\x04\x23\x00\x01\x01\x04\x02'

124 
›ts
 = 
	$∑r£_›ts
(
buf
)

125 
as£π
 
›ts
 == [

126 (
TCP_OPT_MSS
, 
b
'\x23\x00'),

127 (
TCP_OPT_NOP
, 
b
''),

128 (
TCP_OPT_NOP
, 
b
''),

129 (
TCP_OPT_SACKOK
, 
b
'')

132 
buf
 = 
b
'\x01\x01\x05\x0a\x37\xf8\x19\x70\x37\xf8\x29\x78'

133 
›ts
 = 
	$∑r£_›ts
(
buf
)

134 
as£π
 
›ts
 == [

135 (
TCP_OPT_NOP
, 
b
''),

136 (
TCP_OPT_NOP
, 
b
''),

137 (
TCP_OPT_SACK
, 
b
'\x37\xf8\x19\x70\x37\xf8\x29\x78')

140 #ã° 
a
 
zîo
-
Àngth
 
›ti⁄


141 
buf
 = 
b
'\x02\x00\x01'

142 
›ts
 = 
	$∑r£_›ts
(
buf
)

143 
as£π
 
›ts
 == [

144 (
TCP_OPT_MSS
, 
b
''),

145 (
TCP_OPT_NOP
, 
b
'')

148 #ã° 
a
 
⁄e
-
byã
 
mÆf‹med
 
›ti⁄


149 
buf
 = 
b
'\xff'

150 
›ts
 = 
	$∑r£_›ts
(
buf
)

151 
as£π
 
›ts
 =[
N⁄e
]

153 
def
 
	$ã°_off£t
():

154 
t˝hódî
 = 
	`TCP
(
b
'\x01\xbb\xc0\xd7\xb6\x56\xa8\xb9\xd1\xac\xaa\xb1\x50\x18\x40\x00\x56\xf8\x00\x00')

155 
as£π
 
t˝hódî
.
off
 == 5

157 #ã° 
£âög
 
hódî
 
off£t


158 
t˝hódî
.
off
 = 8

159 
as£π
 
	`byãs
(
t˝hódî
Ë=
b
'\x01\xbb\xc0\xd7\xb6\x56\xa8\xb9\xd1\xac\xaa\xb1\x80\x18\x40\x00\x56\xf8\x00\x00'

161 
__«me__
 == '__main__':

162 #Run†
Æl
 
the
 
ã°
 
assocüãd
 
wôh
 
this
 
˛ass
/
fûe


163 
	$ã°_∑r£_›ts
()

164 
	$ã°_off£t
()

165 
	`¥öt
('Tests Successful...')

	@telnet.py

1 #$Id: 
ã ë
.
py
 23 2006-11-08 15:45:33
Z
 
dugs⁄g
 
$


2 #-*- 
codög
: 
utf
-8 -*-

4 
‰om
 
__futuª__
 
imp‹t
 
¥öt_fun˘i⁄


5 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


7 
imp‹t
 

9 
	g‰om
 .
com∑t
 
imp‹t
 
com∑t_‹d


11 
	gIAC
 = 255 #öãΩªà
as
 
comm™d
:

12 
DONT
 = 254 #you 
¨e
 
nŸ
 
to
 
u£
 
›ti⁄


13 
DO
 = 253 #∂ó£, 
you
 
u£
 
›ti⁄


14 
	gWONT
 = 252 #I 
w⁄
't use option

15 
WILL
 = 251 #I 
wûl
 
u£
 
›ti⁄


16 
SB
 = 250 #öãΩªà
as
 
sub√gŸüti⁄


17 
GA
 = 249 #you 
may
 
ªvî£
 
the
 
löe


18 
EL
 = 248 #îa£ 
the
 
cuºít
 
löe


19 
EC
 = 247 #îa£ 
the
 
cuºít
 
ch¨a˘î


20 
AYT
 = 246 #¨ê
you
 
thîe


21 
AO
 = 245 #ab‹à
ouçut
--
but
 
Àt
 
¥og
 
föish


22 
IP
 = 244 #öãºu± 
¥o˚ss
--
≥rm™íéy


23 
BREAK
 = 243 #break

24 
DM
 = 242 #d©®
m¨k
--
c⁄√˘
. 
˛ónög


25 
NOP
 = 241 #nop

26 
SE
 = 240 #íd 
sub
 
√gŸüti⁄


27 
EOR
 = 239 #íd 
of
 
	$ªc‹d
 (
å™•¨ít
 
mode
)

28 
ABORT
 = 238 #Ab‹à
¥o˚ss


29 
SUSP
 = 237 #Su•íd 
¥o˚ss


30 
xEOF
 = 236 #End 
of
 
fûe
: 
EOF
 
is
 
Æªady
 
u£d
...

32 
SYNCH
 = 242 #f‹ 
ãlfunc
 
ˇŒs


35 
def
 
	$°rù_›ti⁄s
(
buf
):

37 
l
 = 
buf
.
	`•lô
(.
	`∑ck
("B", 
IAC
))

38 #¥öà
l


39 
b
 = []

40 
d
 = {
	}
}

41 
sub›t
 = 
FÆ£


42 
w
 
ö
 
l
:

43 
nŸ
 
w
:

45 
o
 = 
	$com∑t_‹d
(
w
[0])

46 
o
 > 
SB
:

47 #¥öà'WILL/WONT/DO/DONT/IAC', `
w
`

48 
w
 = w[2:]

49 
ñif
 
o
 =
SE
:

50 #¥öà'SE', `
w
`

51 
w
 = w[1:]

52 
sub›t
 = 
FÆ£


53 
ñif
 
o
 =
SB
:

54 #¥öà'SB', `
w
`

55 
sub›t
 = 
True


56 
›t
 
	`ö
 (
b
'USER', b'DISPLAY', b'TERM'):

57 
p
 = 
w
.
	`föd
(
›t
 + 
b
'\x01')

58 
p
 != -1:

59 
d
[
›t
] = 
w
[
p
 + 
	`Àn
(›tË+ 1:].
	`•lô
(
b
'\x00', 1)[0]

60 
w
 = 
N⁄e


61 
ñif
 
sub›t
:

62 
w
 = 
N⁄e


63 
w
:

64 
w
 = w.
	`ª∂a˚
(
b
'\x00', b'\n').
	$•lôlöes
()

65 
nŸ
 
w
[-1]: w.
	$p›
()

66 
b
.
	$exãnd
(
w
)

67  
b
, 
d


70 
def
 
	$ã°_ã ë
():

71 
l
 = []

72 
s
 = 
b
"\xff\xfb%\xff\xfa%\x00\x00\x00\xff\xf0\xff\xfd&\xff\xfa&\x05\xff\xf0\xff\xfa&\x01\x01\x02\xff\xf0\xff\xfb\x18\xff\xfb \xff\xfb#\xff\xfb'\xff\xfc$\xff\xfa \x0038400,38400\xff\xf0\xff\xfa#\x00doughboy.citi.umich.edu:0.0\xff\xf0\xff\xfa'\x00\x00DISPLAY\x01doughboy.citi.umich.edu:0.0\x00USER\x01dugsong\xff\xf0\xff\xfa\x18\x00XTERM\xff\xf0\xff\xfd\x03\xff\xfc\x01\xff\xfb\x1f\xff\xfa\x1f\x00P\x00(\xff\xf0\xff\xfd\x05\xff\xfb!\xff\xfd\x01fugly\r\x00yoda\r\x00bashtard\r\x00"

73 
l
.
	$≠≥nd
(
s
)

74 
s
 = 
b
'\xff\xfd\x01\xff\xfd\x03\xff\xfb\x18\xff\xfb\x1f\xff\xfa\x1f\x00X\x002\xff\xf0admin\r\x00\xff\xfa\x18\x00LINUX\xff\xf0foobar\r\x00enable\r\x00foobar\r\x00\r\x00show ip int Vlan 666\r\x00'

75 
l
.
	$≠≥nd
(
s
)

76 
s
 = 
b
'\xff\xfb%\xff\xfa%\x00\x00\x00\xff\xf0\xff\xfd&\xff\xfa&\x05\xff\xf0\xff\xfa&\x01\x01\x02\xff\xf0\xff\xfb&\xff\xfb\x18\xff\xfb \xff\xfb#\xff\xfb\'\xff\xfc$\xff\xfa \x0038400,38400\xff\xf0\xff\xfa#\x00doughboy.citi.umich.edu:0.0\xff\xf0\xff\xfa\'\x00\x00DISPLAY\x01doughboy.citi.umich.edu:0.0\x00USER\x01dugsong\xff\xf0\xff\xfa\x18\x00XTERM\xff\xf0\xff\xfd\x03\xff\xfc\x01\xff\xfb"\xff\xfa"\x03\x01\x03\x00\x03b\x03\x04\x02\x0f\x05\x00\xff\xff\x07b\x1c\x08\x02\x04\tB\x1a\n\x02\x7f\x0b\x02\x15\x0c\x02\x17\r\x02\x12\x0e\x02\x16\x0f\x02\x11\x10\x02\x13\x11\x00\xff\xff\x12\x00\xff\xff\xff\xf0\xff\xfb\x1f\xff\xfa\x1f\x00P\x00(\xff\xf0\xff\xfd\x05\xff\xfb!\xff\xfa"\x01\x0f\xff\xf0\xff\xfd\x01\xff\xfe\x01\xff\xfa"\x03\x01\x80\x00\xff\xf0\xff\xfd\x01werd\r\n\xff\xfe\x01yoda\r\n\xff\xfd\x01darthvader\r\n\xff\xfe\x01'

77 
l
.
	$≠≥nd
(
s
)

78 
exp
 = [([
b
'fugly', b'yoda', b'bashèrd'], {b'USER': b'dugs⁄g', b'DISPLAY': b'doughboy.côi.umich.edu:0.0'
	}
}),

79 ([
b
'admin', b'foobar', b'enable', b'foobar', b'', b'show ip int Vlan 666'], {}),

80 ([
b
'wîd', b'yoda', b'd¨thvadî'], {
	gb
'USER': b'dugsong', b'DISPLAY': b'doughboy.citi.umich.edu:0.0'})]

81 
as£π
 (
li°
(
m≠
(
°rù_›ti⁄s
, 
l
)Ë=
exp
)

84 
__«me__
 == '__main__':

85 
	$ã°_ã ë
()

86 
	`¥öt
('Tests Successful...')

	@tftp.py

1 #$Id: 
t·p
.
py
 23 2006-11-08 15:45:33
Z
 
dugs⁄g
 
$


2 #-*- 
codög
: 
utf
-8 -*-

4 
‰om
 
__futuª__
 
imp‹t
 
¥öt_fun˘i⁄


5 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


7 
imp‹t
 

9 
	g‰om
 . 
imp‹t
 
	gdpkt


12 
	gOP_RRQ
 = 1 #ªad 
ªque°


13 
OP_WRQ
 = 2 #wrôê
ªque°


14 
OP_DATA
 = 3 #d©®
∑ckë


15 
OP_ACK
 = 4 #acknowledgment

16 
OP_ERR
 = 5 #îr‹ 
code


18 #Eº‹ 
codes


19 
EUNDEF
 = 0 #nŸ 
deföed


20 
ENOTFOUND
 = 1 #fûê
nŸ
 
found


21 
EACCESS
 = 2 #ac˚s†
viﬁ©i⁄


22 
ENOSPACE
 = 3 #disk 
fuŒ
 
‹
 
Æloˇti⁄
 
ex˚eded


23 
EBADOP
 = 4 #ûÀgÆ 
TFTP
 
›î©i⁄


24 
EBADID
 = 5 #unknow¿
å™s„r
 
ID


25 
EEXISTS
 = 6 #fûê
Æªady
 
exi°s


26 
ENOUSER
 = 7 #nÿ
such
 
u£r


29 
˛ass
 
	$TFTP
(
dpkt
.
Packë
):

32 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

34 
Aâribuãs
:

35 
__hdr__
: 
Hódî
 
fõlds
 
of
 
TFTP
.

36 
TODO
.

39 
__hdr__
 = (('opcode', 'H', 1), )

41 
def
 
	$u≈ack
(
£lf
, 
buf
):

42 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

43 
£lf
.
›code
 
	$ö
 (
OP_RRQ
, 
OP_WRQ
):

44 
l
 = 
£lf
.
d©a
.
	`•lô
(
b
'\x00')

45 
£lf
.
fûíame
 = 
l
[0]

46 
£lf
.
mode
 = 
l
[1]

47 
£lf
.
d©a
 = 
b
''

48 
ñif
 
£lf
.
›code
 
	$ö
 (
OP_DATA
, 
OP_ACK
):

49 
£lf
.
block
 = .
	`u≈ack
('>H', sñf.
d©a
[:2])[0]

50 
£lf
.
d©a
 = self.data[2:]

51 
ñif
 
£lf
.
›code
 =
OP_ERR
:

52 
£lf
.
îrcode
 = .
	`u≈ack
('>H', sñf.
d©a
[:2])

53 
£lf
.
îrmsg
 = sñf.
d©a
[2:].
	`•lô
(
b
'\x00')[0]

54 
£lf
.
d©a
 = 
b
''

56 
def
 
	$__Àn__
(
£lf
):

57  
	`Àn
(
	$byãs
(
£lf
))

59 
def
 
	$__byãs__
(
£lf
):

60 
£lf
.
›code
 
	$ö
 (
OP_RRQ
, 
OP_WRQ
):

61 
s
 = 
£lf
.
fûíame
 + 
b
'\x00' + sñf.
mode
 + b'\x00'

62 
ñif
 
£lf
.
›code
 
	$ö
 (
OP_DATA
, 
OP_ACK
):

63 
s
 = .
	`∑ck
('>H', 
£lf
.
block
)

64 
ñif
 
£lf
.
›code
 =
OP_ERR
:

65 
s
 = .
	`∑ck
('>H', 
£lf
.
îrcode
Ë+ (
b
'%s\x00' % sñf.
îrmsg
)

67 
s
 = 
b
''

68  
£lf
.
	`∑ck_hdr
(Ë+ 
s
 + sñf.
d©a


71 
def
 
	$ã°_›_ºq
():

72 
s
 = 
b
'\x00\x01\x72\x66\x63\x31\x33\x35\x30\x2e\x74\x78\x74\x00\x6f\x63\x74\x65\x74\x00'

73 
t
 = 
	$TFTP
(
s
)

74 
as£π
 
t
.
fûíame
 =
b
'rfc1350.txt'

75 
as£π
 
t
.
mode
 =
b
'octet'

76 
as£π
 
	`byãs
(
t
Ë=
s


79 
def
 
	$ã°_›_d©a
():

80 
s
 = 
b
'\x00\x03\x00\x01\x0a\x0a\x4e\x65\x74\x77\x6f\x72\x6b\x20\x57\x6f\x72\x6b\x69\x6e\x67\x20\x47\x72\x6f\x75\x70'

81 
t
 = 
	$TFTP
(
s
)

82 
as£π
 
t
.
block
 == 1

83 
as£π
 
t
.
d©a
 =
b
'\x0a\x0aNetwork Working Group'

84 
as£π
 
	`byãs
(
t
Ë=
s


87 
def
 
	$ã°_›_îr
():

88 
∑ss
 #XXX - 
TODO


91 
__«me__
 == '__main__':

92 
	$ã°_›_ºq
()

93 
	$ã°_›_d©a
()

94 
	$ã°_›_îr
()

96 
	`¥öt
('Tests Successful...')

	@tns.py

1 #$Id: 
äs
.
py
 23 2006-11-08 15:45:33
Z
 
dugs⁄g
 
$


2 #-*- 
codög
: 
utf
-8 -*-

4 
‰om
 
__futuª__
 
imp‹t
 
¥öt_fun˘i⁄


5 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


7 
	g‰om
 . 
imp‹t
 
dpkt


10 
˛ass
 
	$TNS
(
dpkt
.
Packë
):

13 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

15 
Aâribuãs
:

16 
__hdr__
: 
Hódî
 
fõlds
 
of
 
TNS
.

17 
TODO
.

20 
__hdr__
 = (

29 
def
 
	$u≈ack
(
£lf
, 
buf
):

30 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

31 
n
 = 
£lf
.
Àngth
 - sñf.
__hdr_Àn__


32 
n
 > 
	$Àn
(
£lf
.
d©a
):

33 
øi£
 
dpkt
.
	`NìdD©a
('short message (missing %d bytes)' %

34 (
n
 - 
	$Àn
(
£lf
.
d©a
)))

35 
£lf
.
msg
 = sñf.
d©a
[:
n
]

36 
£lf
.
d©a
 = sñf.d©a[
n
:]

39 
def
 
	$ã°_äs
():

40 
s
 = (
b
'\x00\x23\x00\x00\x01\x00\x00\x00\x01\x34\x01\x2c\x00\x00\x08\x00\x7f'

41 
b
'\xff\x4f\x98\x00\x00\x00\x01\x00\x01\x00\x22\x00\x00\x00\x00\x01\x01X')

42 
t
 = 
	$TNS
(
s
)

43 
as£π
 
t
.
msg
.
	`°¨tswôh
(
b
'\x01\x34')

45 #ã° 
a
 
åunˇãd
 
∑ckë


46 
åy
:

47 
t
 = 
	`TNS
(
s
[:-10])

48 
ex˚±
 
dpkt
.
NìdD©a
:

49 
∑ss


52 
__«me__
 == '__main__':

53 
	$ã°_äs
()

55 
	`¥öt
('Tests Successful...')

	@tpkt.py

1 #$Id: 
çkt
.
py
 23 2006-11-08 15:45:33
Z
 
dugs⁄g
 
$


2 #-*- 
codög
: 
utf
-8 -*-

4 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


6 
	g‰om
 . 
imp‹t
 
	gdpkt


8 #TPKT - 
RFC
 1006 
Se˘i⁄
 6

12 
˛ass
 
	$TPKT
(
dpkt
.
Packë
):

15 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

17 
Aâribuãs
:

18 
__hdr__
: 
Hódî
 
fõlds
 
of
 
TPKT
.

19 
TODO
.

22 
__hdr__
 = (

	@udp.py

1 #$Id: 
udp
.
py
 23 2006-11-08 15:45:33
Z
 
dugs⁄g
 
$


2 #-*- 
codög
: 
utf
-8 -*-

4 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


6 
	g‰om
 . 
imp‹t
 
dpkt


8 
	gUDP_HDR_LEN
 = 8

9 
UDP_PORT_MAX
 = 65535

12 
˛ass
 
	$UDP
(
dpkt
.
Packë
):

15 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

17 
Aâribuãs
:

18 
__hdr__
: 
Hódî
 
fõlds
 
of
 
UDP
.

19 
TODO
.

22 
__hdr__
 = (

	@vrrp.py

1 #$Id: 
vºp
.
py
 88 2013-03-05 19:43:17
Z
 
™dªwÊƒ
@
gmaû
.
com
 
$


2 #-*- 
codög
: 
utf
-8 -*-

4 
‰om
 
__futuª__
 
imp‹t
 
¥öt_fun˘i⁄


5 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


7 
	g‰om
 . 
imp‹t
 
dpkt


8 
	g‰om
 .
dec‹©‹s
 
imp‹t
 
dïªˇãd


11 
˛ass
 
	$VRRP
(
dpkt
.
Packë
):

14 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

16 
Aâribuãs
:

17 
__hdr__
: 
Hódî
 
fõlds
 
of
 
VRRP
.

18 
TODO
.

21 
__hdr__
 = (

30 
addrs
 = ()

31 
auth
 = ''

33 @
¥›îty


34 
def
 
	$v
(
£lf
): #high 4 
bôs
 
of
 
_v_ty≥


35  
£lf
.
_v_ty≥
 >> 4

37 @
v
.
£âî


38 
def
 
	$v
(
£lf
, 
v
):

39 
£lf
.
_v_ty≥
 = (£lf._v_ty≥ & 0x0fË| (
v
 << 4)

41 @
¥›îty


42 
def
 
	$ty≥
(
£lf
): #low 4 
bôs
 
of
 
_v_ty≥


43  
£lf
.
_v_ty≥
 & 0x0f

45 @
ty≥
.
£âî


46 
def
 
	$ty≥
(
£lf
, 
v
):

47 
£lf
.
_v_ty≥
 = (£lf._v_ty≥ & 0xf0Ë| (
v
 & 0x0f)

49 
def
 
	$u≈ack
(
£lf
, 
buf
):

50 
dpkt
.
Packë
.
	$u≈ack
(
£lf
, 
buf
)

51 
l
 = []

52 
off
 = 0

53 
off
 
ö
 
	$ønge
(0, 4 * 
£lf
.
cou¡
, 4):

54 
l
.
	`≠≥nd
(
£lf
.
d©a
[
off
:off + 4])

55 
£lf
.
addrs
 = 
l


56 
£lf
.
auth
 = sñf.
d©a
[
off
 + 4:]

57 
£lf
.
d©a
 = ''

59 
def
 
	$__Àn__
(
£lf
):

60  
£lf
.
__hdr_Àn__
 + (4 * sñf.
cou¡
Ë+ 
	$Àn
(
£lf
.
auth
)

62 
def
 
	$__byãs__
(
£lf
):

63 
d©a
 = 
b
''.
	`joö
(
£lf
.
addrs
Ë+ sñf.
auth


64 
nŸ
 
£lf
.
sum
:

65 
£lf
.
sum
 = 
dpkt
.
	`ö_cksum
(£lf.
	`∑ck_hdr
(Ë+ 
d©a
)

66  
£lf
.
	`∑ck_hdr
(Ë+ 
d©a


68 
def
 
	$ã°_vºp
():

69 #nÿ
addªs£s


70 
s
 = 
b
'\x00\x00\x00\x00\x00\x00\xff\xff'

71 
v
 = 
	$VRRP
(
s
)

72 
as£π
 
v
.
sum
 == 0xffff

73 
as£π
 
	`byãs
(
v
Ë=
s


75 #havê
addªss


76 
s
 = 
b
'\x21\x01\x64\x01\x00\x01\xba\x52\xc0\xa8\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00'

77 
v
 = 
	$VRRP
(
s
)

78 
as£π
 
v
.
cou¡
 == 1

79 
as£π
 
v
.
addrs
 =[
b
'\xc0\xa8\x00\x01'] #192.168.0.1

80 
as£π
 
	`byãs
(
v
Ë=
s


82 #ã° 
checksum
 
gíî©i⁄


83 
v
.
sum
 = 0

84 
as£π
 
	`byãs
(
v
Ë=
s


86 #ã° 
Àngth


87 
as£π
 
	`Àn
(
v
Ë=
	$Àn
(
s
)

89 #ã° 
gëãrs


90 
as£π
 
v
.v == 2

91 
as£π
 
v
.
ty≥
 == 1

93 #ã° 
£âîs


94 
v
.v = 3

95 
v
.
ty≥
 = 2

96 
as£π
 
	`byãs
(
v
)[0] =
b
'\x32'[0]

99 
__«me__
 == '__main__':

100 
	$ã°_vºp
()

102 
	`¥öt
('Tests Successful...')

	@yahoo.py

1 #$Id: 
yahoo
.
py
 23 2006-11-08 15:45:33
Z
 
dugs⁄g
 
$


2 #-*- 
codög
: 
utf
-8 -*-

4 
‰om
 
__futuª__
 
imp‹t
 
absﬁuã_imp‹t


6 
	g‰om
 . 
imp‹t
 
dpkt


9 
˛ass
 
	$YHOO
(
dpkt
.
Packë
):

12 
TODO
: 
L⁄gî
 
˛ass
 
öf‹m©i⁄
....

14 
Aâribuãs
:

15 
__hdr__
: 
Hódî
 
fõlds
 
of
 
Yahoo
 
Mes£ngî
.

16 
TODO
.

19 
__hdr__
 = [

30 
__byã_‹dî__
 = '<'

33 
˛ass
 
	$YMSG
(
dpkt
.
Packë
):

34 
__hdr__
 = [

	@
1
.
1
/usr/include
75
631
__init__.py
ah.py
aim.py
aoe.py
aoeata.py
aoecfg.py
arp.py
asn1.py
bgp.py
cdp.py
compat.py
crc32c.py
decorators.py
dhcp.py
diameter.py
dns.py
dpkt.py
dtp.py
edp.py
esp.py
ethernet.py
gre.py
gzip.py
h225.py
hsrp.py
http.py
http2.py
icmp.py
icmp6.py
ieee80211.py
igmp.py
ip.py
ip6.py
ipip.py
ipx.py
llc.py
lldp.py
loopback.py
mrt.py
netbios.py
netflow.py
ntp.py
ospf.py
pcap.py
pcapng.py
pim.py
pmap.py
ppp.py
pppoe.py
qq.py
radiotap.py
radius.py
rfb.py
rip.py
rpc.py
rtp.py
rx.py
sccp.py
sctp.py
sip.py
sll.py
smb.py
snoop.py
ssl.py
ssl_ciphersuites.py
stp.py
stun.py
tcp.py
telnet.py
tftp.py
tns.py
tpkt.py
udp.py
vrrp.py
yahoo.py
